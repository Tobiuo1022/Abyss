# Generated with GenerateCollationTest.p6
my @a = 
( (0x1F9D5,  0x62, ), Q«« (🧕) PERSON WITH HEADSCARF»», 34807, True ),
( (0x1F9D6,  0x21, ), Q«« (🧖) PERSON IN STEAMY ROOM»», 34808, True ),
( (0x1F9D6,  0x3F, ), Q«« (🧖) PERSON IN STEAMY ROOM»», 34809, True ),
( (0x1F9D6,  0x61, ), Q«« (🧖) PERSON IN STEAMY ROOM»», 34810, True ),
( (0x1F9D6,  0x41, ), Q«« (🧖) PERSON IN STEAMY ROOM»», 34811, True ),
( (0x1F9D6,  0x62, ), Q«« (🧖) PERSON IN STEAMY ROOM»», 34812, True ),
( (0x1F9D7,  0x21, ), Q«« (🧗) PERSON CLIMBING»», 34813, True ),
( (0x1F9D7,  0x3F, ), Q«« (🧗) PERSON CLIMBING»», 34814, True ),
( (0x1F9D7,  0x61, ), Q«« (🧗) PERSON CLIMBING»», 34815, True ),
( (0x1F9D7,  0x41, ), Q«« (🧗) PERSON CLIMBING»», 34816, True ),
( (0x1F9D7,  0x62, ), Q«« (🧗) PERSON CLIMBING»», 34817, True ),
( (0x1F9D8,  0x21, ), Q«« (🧘) PERSON IN LOTUS POSITION»», 34818, True ),
( (0x1F9D8,  0x3F, ), Q«« (🧘) PERSON IN LOTUS POSITION»», 34819, True ),
( (0x1F9D8,  0x61, ), Q«« (🧘) PERSON IN LOTUS POSITION»», 34820, True ),
( (0x1F9D8,  0x41, ), Q«« (🧘) PERSON IN LOTUS POSITION»», 34821, True ),
( (0x1F9D8,  0x62, ), Q«« (🧘) PERSON IN LOTUS POSITION»», 34822, True ),
( (0x1F9D9,  0x21, ), Q«« (🧙) MAGE»», 34823, True ),
( (0x1F9D9,  0x3F, ), Q«« (🧙) MAGE»», 34824, True ),
( (0x1F9D9,  0x61, ), Q«« (🧙) MAGE»», 34825, True ),
( (0x1F9D9,  0x41, ), Q«« (🧙) MAGE»», 34826, True ),
( (0x1F9D9,  0x62, ), Q«« (🧙) MAGE»», 34827, True ),
( (0x1F9DA,  0x21, ), Q«« (🧚) FAIRY»», 34828, True ),
( (0x1F9DA,  0x3F, ), Q«« (🧚) FAIRY»», 34829, True ),
( (0x1F9DA,  0x61, ), Q«« (🧚) FAIRY»», 34830, True ),
( (0x1F9DA,  0x41, ), Q«« (🧚) FAIRY»», 34831, True ),
( (0x1F9DA,  0x62, ), Q«« (🧚) FAIRY»», 34832, True ),
( (0x1F9DB,  0x21, ), Q«« (🧛) VAMPIRE»», 34833, True ),
( (0x1F9DB,  0x3F, ), Q«« (🧛) VAMPIRE»», 34834, True ),
( (0x1F9DB,  0x61, ), Q«« (🧛) VAMPIRE»», 34835, True ),
( (0x1F9DB,  0x41, ), Q«« (🧛) VAMPIRE»», 34836, True ),
( (0x1F9DB,  0x62, ), Q«« (🧛) VAMPIRE»», 34837, True ),
( (0x1F9DC,  0x21, ), Q«« (🧜) MERPERSON»», 34838, True ),
( (0x1F9DC,  0x3F, ), Q«« (🧜) MERPERSON»», 34839, True ),
( (0x1F9DC,  0x61, ), Q«« (🧜) MERPERSON»», 34840, True ),
( (0x1F9DC,  0x41, ), Q«« (🧜) MERPERSON»», 34841, True ),
( (0x1F9DC,  0x62, ), Q«« (🧜) MERPERSON»», 34842, True ),
( (0x1F9DD,  0x21, ), Q«« (🧝) ELF»», 34843, True ),
( (0x1F9DD,  0x3F, ), Q«« (🧝) ELF»», 34844, True ),
( (0x1F9DD,  0x61, ), Q«« (🧝) ELF»», 34845, True ),
( (0x1F9DD,  0x41, ), Q«« (🧝) ELF»», 34846, True ),
( (0x1F9DD,  0x62, ), Q«« (🧝) ELF»», 34847, True ),
( (0x1F9DE,  0x21, ), Q«« (🧞) GENIE»», 34848, True ),
( (0x1F9DE,  0x3F, ), Q«« (🧞) GENIE»», 34849, True ),
( (0x1F9DE,  0x61, ), Q«« (🧞) GENIE»», 34850, True ),
( (0x1F9DE,  0x41, ), Q«« (🧞) GENIE»», 34851, True ),
( (0x1F9DE,  0x62, ), Q«« (🧞) GENIE»», 34852, True ),
( (0x1F9DF,  0x21, ), Q«« (🧟) ZOMBIE»», 34853, True ),
( (0x1F9DF,  0x3F, ), Q«« (🧟) ZOMBIE»», 34854, True ),
( (0x1F9DF,  0x61, ), Q«« (🧟) ZOMBIE»», 34855, True ),
( (0x1F9DF,  0x41, ), Q«« (🧟) ZOMBIE»», 34856, True ),
( (0x1F9DF,  0x62, ), Q«« (🧟) ZOMBIE»», 34857, True ),
( (0x1F9E0,  0x21, ), Q«« (🧠) BRAIN»», 34858, True ),
( (0x1F9E0,  0x3F, ), Q«« (🧠) BRAIN»», 34859, True ),
( (0x1F9E0,  0x61, ), Q«« (🧠) BRAIN»», 34860, True ),
( (0x1F9E0,  0x41, ), Q«« (🧠) BRAIN»», 34861, True ),
( (0x1F9E0,  0x62, ), Q«« (🧠) BRAIN»», 34862, True ),
( (0x1F9E1,  0x21, ), Q«« (🧡) ORANGE HEART»», 34863, True ),
( (0x1F9E1,  0x3F, ), Q«« (🧡) ORANGE HEART»», 34864, True ),
( (0x1F9E1,  0x61, ), Q«« (🧡) ORANGE HEART»», 34865, True ),
( (0x1F9E1,  0x41, ), Q«« (🧡) ORANGE HEART»», 34866, True ),
( (0x1F9E1,  0x62, ), Q«« (🧡) ORANGE HEART»», 34867, True ),
( (0x1F9E2,  0x21, ), Q«« (🧢) BILLED CAP»», 34868, True ),
( (0x1F9E2,  0x3F, ), Q«« (🧢) BILLED CAP»», 34869, True ),
( (0x1F9E2,  0x61, ), Q«« (🧢) BILLED CAP»», 34870, True ),
( (0x1F9E2,  0x41, ), Q«« (🧢) BILLED CAP»», 34871, True ),
( (0x1F9E2,  0x62, ), Q«« (🧢) BILLED CAP»», 34872, True ),
( (0x1F9E3,  0x21, ), Q«« (🧣) SCARF»», 34873, True ),
( (0x1F9E3,  0x3F, ), Q«« (🧣) SCARF»», 34874, True ),
( (0x1F9E3,  0x61, ), Q«« (🧣) SCARF»», 34875, True ),
( (0x1F9E3,  0x41, ), Q«« (🧣) SCARF»», 34876, True ),
( (0x1F9E3,  0x62, ), Q«« (🧣) SCARF»», 34877, True ),
( (0x1F9E4,  0x21, ), Q«« (🧤) GLOVES»», 34878, True ),
( (0x1F9E4,  0x3F, ), Q«« (🧤) GLOVES»», 34879, True ),
( (0x1F9E4,  0x61, ), Q«« (🧤) GLOVES»», 34880, True ),
( (0x1F9E4,  0x41, ), Q«« (🧤) GLOVES»», 34881, True ),
( (0x1F9E4,  0x62, ), Q«« (🧤) GLOVES»», 34882, True ),
( (0x1F9E5,  0x21, ), Q«« (🧥) COAT»», 34883, True ),
( (0x1F9E5,  0x3F, ), Q«« (🧥) COAT»», 34884, True ),
( (0x1F9E5,  0x61, ), Q«« (🧥) COAT»», 34885, True ),
( (0x1F9E5,  0x41, ), Q«« (🧥) COAT»», 34886, True ),
( (0x1F9E5,  0x62, ), Q«« (🧥) COAT»», 34887, True ),
( (0x1F9E6,  0x21, ), Q«« (🧦) SOCKS»», 34888, True ),
( (0x1F9E6,  0x3F, ), Q«« (🧦) SOCKS»», 34889, True ),
( (0x1F9E6,  0x61, ), Q«« (🧦) SOCKS»», 34890, True ),
( (0x1F9E6,  0x41, ), Q«« (🧦) SOCKS»», 34891, True ),
( (0x1F9E6,  0x62, ), Q«« (🧦) SOCKS»», 34892, True ),
( (0x1F9E7,  0x21, ), Q«« (🧧) RED GIFT ENVELOPE»», 34893, True ),
( (0x1F9E7,  0x3F, ), Q«« (🧧) RED GIFT ENVELOPE»», 34894, True ),
( (0x1F9E7,  0x61, ), Q«« (🧧) RED GIFT ENVELOPE»», 34895, True ),
( (0x1F9E7,  0x41, ), Q«« (🧧) RED GIFT ENVELOPE»», 34896, True ),
( (0x1F9E7,  0x62, ), Q«« (🧧) RED GIFT ENVELOPE»», 34897, True ),
( (0x1F9E8,  0x21, ), Q«« (🧨) FIRECRACKER»», 34898, True ),
( (0x1F9E8,  0x3F, ), Q«« (🧨) FIRECRACKER»», 34899, True ),
( (0x1F9E8,  0x61, ), Q«« (🧨) FIRECRACKER»», 34900, True ),
( (0x1F9E8,  0x41, ), Q«« (🧨) FIRECRACKER»», 34901, True ),
( (0x1F9E8,  0x62, ), Q«« (🧨) FIRECRACKER»», 34902, True ),
( (0x1F9E9,  0x21, ), Q«« (🧩) JIGSAW PUZZLE PIECE»», 34903, True ),
( (0x1F9E9,  0x3F, ), Q«« (🧩) JIGSAW PUZZLE PIECE»», 34904, True ),
( (0x1F9E9,  0x61, ), Q«« (🧩) JIGSAW PUZZLE PIECE»», 34905, True ),
( (0x1F9E9,  0x41, ), Q«« (🧩) JIGSAW PUZZLE PIECE»», 34906, True ),
( (0x1F9E9,  0x62, ), Q«« (🧩) JIGSAW PUZZLE PIECE»», 34907, True ),
( (0x1F9EA,  0x21, ), Q«« (🧪) TEST TUBE»», 34908, True ),
( (0x1F9EA,  0x3F, ), Q«« (🧪) TEST TUBE»», 34909, True ),
( (0x1F9EA,  0x61, ), Q«« (🧪) TEST TUBE»», 34910, True ),
( (0x1F9EA,  0x41, ), Q«« (🧪) TEST TUBE»», 34911, True ),
( (0x1F9EA,  0x62, ), Q«« (🧪) TEST TUBE»», 34912, True ),
( (0x1F9EB,  0x21, ), Q«« (🧫) PETRI DISH»», 34913, True ),
( (0x1F9EB,  0x3F, ), Q«« (🧫) PETRI DISH»», 34914, True ),
( (0x1F9EB,  0x61, ), Q«« (🧫) PETRI DISH»», 34915, True ),
( (0x1F9EB,  0x41, ), Q«« (🧫) PETRI DISH»», 34916, True ),
( (0x1F9EB,  0x62, ), Q«« (🧫) PETRI DISH»», 34917, True ),
( (0x1F9EC,  0x21, ), Q«« (🧬) DNA DOUBLE HELIX»», 34918, True ),
( (0x1F9EC,  0x3F, ), Q«« (🧬) DNA DOUBLE HELIX»», 34919, True ),
( (0x1F9EC,  0x61, ), Q«« (🧬) DNA DOUBLE HELIX»», 34920, True ),
( (0x1F9EC,  0x41, ), Q«« (🧬) DNA DOUBLE HELIX»», 34921, True ),
( (0x1F9EC,  0x62, ), Q«« (🧬) DNA DOUBLE HELIX»», 34922, True ),
( (0x1F9ED,  0x21, ), Q«« (🧭) COMPASS»», 34923, True ),
( (0x1F9ED,  0x3F, ), Q«« (🧭) COMPASS»», 34924, True ),
( (0x1F9ED,  0x61, ), Q«« (🧭) COMPASS»», 34925, True ),
( (0x1F9ED,  0x41, ), Q«« (🧭) COMPASS»», 34926, True ),
( (0x1F9ED,  0x62, ), Q«« (🧭) COMPASS»», 34927, True ),
( (0x1F9EE,  0x21, ), Q«« (🧮) ABACUS»», 34928, True ),
( (0x1F9EE,  0x3F, ), Q«« (🧮) ABACUS»», 34929, True ),
( (0x1F9EE,  0x61, ), Q«« (🧮) ABACUS»», 34930, True ),
( (0x1F9EE,  0x41, ), Q«« (🧮) ABACUS»», 34931, True ),
( (0x1F9EE,  0x62, ), Q«« (🧮) ABACUS»», 34932, True ),
( (0x1F9EF,  0x21, ), Q«« (🧯) FIRE EXTINGUISHER»», 34933, True ),
( (0x1F9EF,  0x3F, ), Q«« (🧯) FIRE EXTINGUISHER»», 34934, True ),
( (0x1F9EF,  0x61, ), Q«« (🧯) FIRE EXTINGUISHER»», 34935, True ),
( (0x1F9EF,  0x41, ), Q«« (🧯) FIRE EXTINGUISHER»», 34936, True ),
( (0x1F9EF,  0x62, ), Q«« (🧯) FIRE EXTINGUISHER»», 34937, True ),
( (0x1F9F0,  0x21, ), Q«« (🧰) TOOLBOX»», 34938, True ),
( (0x1F9F0,  0x3F, ), Q«« (🧰) TOOLBOX»», 34939, True ),
( (0x1F9F0,  0x61, ), Q«« (🧰) TOOLBOX»», 34940, True ),
( (0x1F9F0,  0x41, ), Q«« (🧰) TOOLBOX»», 34941, True ),
( (0x1F9F0,  0x62, ), Q«« (🧰) TOOLBOX»», 34942, True ),
( (0x1F9F1,  0x21, ), Q«« (🧱) BRICK»», 34943, True ),
( (0x1F9F1,  0x3F, ), Q«« (🧱) BRICK»», 34944, True ),
( (0x1F9F1,  0x61, ), Q«« (🧱) BRICK»», 34945, True ),
( (0x1F9F1,  0x41, ), Q«« (🧱) BRICK»», 34946, True ),
( (0x1F9F1,  0x62, ), Q«« (🧱) BRICK»», 34947, True ),
( (0x1F9F2,  0x21, ), Q«« (🧲) MAGNET»», 34948, True ),
( (0x1F9F2,  0x3F, ), Q«« (🧲) MAGNET»», 34949, True ),
( (0x1F9F2,  0x61, ), Q«« (🧲) MAGNET»», 34950, True ),
( (0x1F9F2,  0x41, ), Q«« (🧲) MAGNET»», 34951, True ),
( (0x1F9F2,  0x62, ), Q«« (🧲) MAGNET»», 34952, True ),
( (0x1F9F3,  0x21, ), Q«« (🧳) LUGGAGE»», 34953, True ),
( (0x1F9F3,  0x3F, ), Q«« (🧳) LUGGAGE»», 34954, True ),
( (0x1F9F3,  0x61, ), Q«« (🧳) LUGGAGE»», 34955, True ),
( (0x1F9F3,  0x41, ), Q«« (🧳) LUGGAGE»», 34956, True ),
( (0x1F9F3,  0x62, ), Q«« (🧳) LUGGAGE»», 34957, True ),
( (0x1F9F4,  0x21, ), Q«« (🧴) LOTION BOTTLE»», 34958, True ),
( (0x1F9F4,  0x3F, ), Q«« (🧴) LOTION BOTTLE»», 34959, True ),
( (0x1F9F4,  0x61, ), Q«« (🧴) LOTION BOTTLE»», 34960, True ),
( (0x1F9F4,  0x41, ), Q«« (🧴) LOTION BOTTLE»», 34961, True ),
( (0x1F9F4,  0x62, ), Q«« (🧴) LOTION BOTTLE»», 34962, True ),
( (0x1F9F5,  0x21, ), Q«« (🧵) SPOOL OF THREAD»», 34963, True ),
( (0x1F9F5,  0x3F, ), Q«« (🧵) SPOOL OF THREAD»», 34964, True ),
( (0x1F9F5,  0x61, ), Q«« (🧵) SPOOL OF THREAD»», 34965, True ),
( (0x1F9F5,  0x41, ), Q«« (🧵) SPOOL OF THREAD»», 34966, True ),
( (0x1F9F5,  0x62, ), Q«« (🧵) SPOOL OF THREAD»», 34967, True ),
( (0x1F9F6,  0x21, ), Q«« (🧶) BALL OF YARN»», 34968, True ),
( (0x1F9F6,  0x3F, ), Q«« (🧶) BALL OF YARN»», 34969, True ),
( (0x1F9F6,  0x61, ), Q«« (🧶) BALL OF YARN»», 34970, True ),
( (0x1F9F6,  0x41, ), Q«« (🧶) BALL OF YARN»», 34971, True ),
( (0x1F9F6,  0x62, ), Q«« (🧶) BALL OF YARN»», 34972, True ),
( (0x1F9F7,  0x21, ), Q«« (🧷) SAFETY PIN»», 34973, True ),
( (0x1F9F7,  0x3F, ), Q«« (🧷) SAFETY PIN»», 34974, True ),
( (0x1F9F7,  0x61, ), Q«« (🧷) SAFETY PIN»», 34975, True ),
( (0x1F9F7,  0x41, ), Q«« (🧷) SAFETY PIN»», 34976, True ),
( (0x1F9F7,  0x62, ), Q«« (🧷) SAFETY PIN»», 34977, True ),
( (0x1F9F8,  0x21, ), Q«« (🧸) TEDDY BEAR»», 34978, True ),
( (0x1F9F8,  0x3F, ), Q«« (🧸) TEDDY BEAR»», 34979, True ),
( (0x1F9F8,  0x61, ), Q«« (🧸) TEDDY BEAR»», 34980, True ),
( (0x1F9F8,  0x41, ), Q«« (🧸) TEDDY BEAR»», 34981, True ),
( (0x1F9F8,  0x62, ), Q«« (🧸) TEDDY BEAR»», 34982, True ),
( (0x1F9F9,  0x21, ), Q«« (🧹) BROOM»», 34983, True ),
( (0x1F9F9,  0x3F, ), Q«« (🧹) BROOM»», 34984, True ),
( (0x1F9F9,  0x61, ), Q«« (🧹) BROOM»», 34985, True ),
( (0x1F9F9,  0x41, ), Q«« (🧹) BROOM»», 34986, True ),
( (0x1F9F9,  0x62, ), Q«« (🧹) BROOM»», 34987, True ),
( (0x1F9FA,  0x21, ), Q«« (🧺) BASKET»», 34988, True ),
( (0x1F9FA,  0x3F, ), Q«« (🧺) BASKET»», 34989, True ),
( (0x1F9FA,  0x61, ), Q«« (🧺) BASKET»», 34990, True ),
( (0x1F9FA,  0x41, ), Q«« (🧺) BASKET»», 34991, True ),
( (0x1F9FA,  0x62, ), Q«« (🧺) BASKET»», 34992, True ),
( (0x1F9FB,  0x21, ), Q«« (🧻) ROLL OF PAPER»», 34993, True ),
( (0x1F9FB,  0x3F, ), Q«« (🧻) ROLL OF PAPER»», 34994, True ),
( (0x1F9FB,  0x61, ), Q«« (🧻) ROLL OF PAPER»», 34995, True ),
( (0x1F9FB,  0x41, ), Q«« (🧻) ROLL OF PAPER»», 34996, True ),
( (0x1F9FB,  0x62, ), Q«« (🧻) ROLL OF PAPER»», 34997, True ),
( (0x1F9FC,  0x21, ), Q«« (🧼) BAR OF SOAP»», 34998, True ),
( (0x1F9FC,  0x3F, ), Q«« (🧼) BAR OF SOAP»», 34999, True ),
( (0x1F9FC,  0x61, ), Q«« (🧼) BAR OF SOAP»», 35000, True ),
( (0x1F9FC,  0x41, ), Q«« (🧼) BAR OF SOAP»», 35001, True ),
( (0x1F9FC,  0x62, ), Q«« (🧼) BAR OF SOAP»», 35002, True ),
( (0x1F9FD,  0x21, ), Q«« (🧽) SPONGE»», 35003, True ),
( (0x1F9FD,  0x3F, ), Q«« (🧽) SPONGE»», 35004, True ),
( (0x1F9FD,  0x61, ), Q«« (🧽) SPONGE»», 35005, True ),
( (0x1F9FD,  0x41, ), Q«« (🧽) SPONGE»», 35006, True ),
( (0x1F9FD,  0x62, ), Q«« (🧽) SPONGE»», 35007, True ),
( (0x1F9FE,  0x21, ), Q«« (🧾) RECEIPT»», 35008, True ),
( (0x1F9FE,  0x3F, ), Q«« (🧾) RECEIPT»», 35009, True ),
( (0x1F9FE,  0x61, ), Q«« (🧾) RECEIPT»», 35010, True ),
( (0x1F9FE,  0x41, ), Q«« (🧾) RECEIPT»», 35011, True ),
( (0x1F9FE,  0x62, ), Q«« (🧾) RECEIPT»», 35012, True ),
( (0x1F9FF,  0x21, ), Q«« (🧿) NAZAR AMULET»», 35013, True ),
( (0x1F9FF,  0x3F, ), Q«« (🧿) NAZAR AMULET»», 35014, True ),
( (0x1F9FF,  0x61, ), Q«« (🧿) NAZAR AMULET»», 35015, True ),
( (0x1F9FF,  0x41, ), Q«« (🧿) NAZAR AMULET»», 35016, True ),
( (0x1F9FF,  0x62, ), Q«« (🧿) NAZAR AMULET»», 35017, True ),
( (0x1FA70,  0x21, ), Q«« (🩰) BALLET SHOES»», 35018, True ),
( (0x1FA70,  0x3F, ), Q«« (🩰) BALLET SHOES»», 35019, True ),
( (0x1FA70,  0x61, ), Q«« (🩰) BALLET SHOES»», 35020, True ),
( (0x1FA70,  0x41, ), Q«« (🩰) BALLET SHOES»», 35021, True ),
( (0x1FA70,  0x62, ), Q«« (🩰) BALLET SHOES»», 35022, True ),
( (0x1FA71,  0x21, ), Q«« (🩱) ONE-PIECE SWIMSUIT»», 35023, True ),
( (0x1FA71,  0x3F, ), Q«« (🩱) ONE-PIECE SWIMSUIT»», 35024, True ),
( (0x1FA71,  0x61, ), Q«« (🩱) ONE-PIECE SWIMSUIT»», 35025, True ),
( (0x1FA71,  0x41, ), Q«« (🩱) ONE-PIECE SWIMSUIT»», 35026, True ),
( (0x1FA71,  0x62, ), Q«« (🩱) ONE-PIECE SWIMSUIT»», 35027, True ),
( (0x1FA72,  0x21, ), Q«« (🩲) BRIEFS»», 35028, True ),
( (0x1FA72,  0x3F, ), Q«« (🩲) BRIEFS»», 35029, True ),
( (0x1FA72,  0x61, ), Q«« (🩲) BRIEFS»», 35030, True ),
( (0x1FA72,  0x41, ), Q«« (🩲) BRIEFS»», 35031, True ),
( (0x1FA72,  0x62, ), Q«« (🩲) BRIEFS»», 35032, True ),
( (0x1FA73,  0x21, ), Q«« (🩳) SHORTS»», 35033, True ),
( (0x1FA73,  0x3F, ), Q«« (🩳) SHORTS»», 35034, True ),
( (0x1FA73,  0x61, ), Q«« (🩳) SHORTS»», 35035, True ),
( (0x1FA73,  0x41, ), Q«« (🩳) SHORTS»», 35036, True ),
( (0x1FA73,  0x62, ), Q«« (🩳) SHORTS»», 35037, True ),
( (0x1FA74,  0x21, ), Q«« (🩴) THONG SANDAL»», 35038, True ),
( (0x1FA74,  0x3F, ), Q«« (🩴) THONG SANDAL»», 35039, True ),
( (0x1FA74,  0x61, ), Q«« (🩴) THONG SANDAL»», 35040, True ),
( (0x1FA74,  0x41, ), Q«« (🩴) THONG SANDAL»», 35041, True ),
( (0x1FA74,  0x62, ), Q«« (🩴) THONG SANDAL»», 35042, True ),
( (0x1FA78,  0x21, ), Q«« (🩸) DROP OF BLOOD»», 35043, True ),
( (0x1FA78,  0x3F, ), Q«« (🩸) DROP OF BLOOD»», 35044, True ),
( (0x1FA78,  0x61, ), Q«« (🩸) DROP OF BLOOD»», 35045, True ),
( (0x1FA78,  0x41, ), Q«« (🩸) DROP OF BLOOD»», 35046, True ),
( (0x1FA78,  0x62, ), Q«« (🩸) DROP OF BLOOD»», 35047, True ),
( (0x1FA79,  0x21, ), Q«« (🩹) ADHESIVE BANDAGE»», 35048, True ),
( (0x1FA79,  0x3F, ), Q«« (🩹) ADHESIVE BANDAGE»», 35049, True ),
( (0x1FA79,  0x61, ), Q«« (🩹) ADHESIVE BANDAGE»», 35050, True ),
( (0x1FA79,  0x41, ), Q«« (🩹) ADHESIVE BANDAGE»», 35051, True ),
( (0x1FA79,  0x62, ), Q«« (🩹) ADHESIVE BANDAGE»», 35052, True ),
( (0x1FA7A,  0x21, ), Q«« (🩺) STETHOSCOPE»», 35053, True ),
( (0x1FA7A,  0x3F, ), Q«« (🩺) STETHOSCOPE»», 35054, True ),
( (0x1FA7A,  0x61, ), Q«« (🩺) STETHOSCOPE»», 35055, True ),
( (0x1FA7A,  0x41, ), Q«« (🩺) STETHOSCOPE»», 35056, True ),
( (0x1FA7A,  0x62, ), Q«« (🩺) STETHOSCOPE»», 35057, True ),
( (0x1FA80,  0x21, ), Q«« (🪀) YO-YO»», 35058, True ),
( (0x1FA80,  0x3F, ), Q«« (🪀) YO-YO»», 35059, True ),
( (0x1FA80,  0x61, ), Q«« (🪀) YO-YO»», 35060, True ),
( (0x1FA80,  0x41, ), Q«« (🪀) YO-YO»», 35061, True ),
( (0x1FA80,  0x62, ), Q«« (🪀) YO-YO»», 35062, True ),
( (0x1FA81,  0x21, ), Q«« (🪁) KITE»», 35063, True ),
( (0x1FA81,  0x3F, ), Q«« (🪁) KITE»», 35064, True ),
( (0x1FA81,  0x61, ), Q«« (🪁) KITE»», 35065, True ),
( (0x1FA81,  0x41, ), Q«« (🪁) KITE»», 35066, True ),
( (0x1FA81,  0x62, ), Q«« (🪁) KITE»», 35067, True ),
( (0x1FA82,  0x21, ), Q«« (🪂) PARACHUTE»», 35068, True ),
( (0x1FA82,  0x3F, ), Q«« (🪂) PARACHUTE»», 35069, True ),
( (0x1FA82,  0x61, ), Q«« (🪂) PARACHUTE»», 35070, True ),
( (0x1FA82,  0x41, ), Q«« (🪂) PARACHUTE»», 35071, True ),
( (0x1FA82,  0x62, ), Q«« (🪂) PARACHUTE»», 35072, True ),
( (0x1FA83,  0x21, ), Q«« (🪃) BOOMERANG»», 35073, True ),
( (0x1FA83,  0x3F, ), Q«« (🪃) BOOMERANG»», 35074, True ),
( (0x1FA83,  0x61, ), Q«« (🪃) BOOMERANG»», 35075, True ),
( (0x1FA83,  0x41, ), Q«« (🪃) BOOMERANG»», 35076, True ),
( (0x1FA83,  0x62, ), Q«« (🪃) BOOMERANG»», 35077, True ),
( (0x1FA84,  0x21, ), Q«« (🪄) MAGIC WAND»», 35078, True ),
( (0x1FA84,  0x3F, ), Q«« (🪄) MAGIC WAND»», 35079, True ),
( (0x1FA84,  0x61, ), Q«« (🪄) MAGIC WAND»», 35080, True ),
( (0x1FA84,  0x41, ), Q«« (🪄) MAGIC WAND»», 35081, True ),
( (0x1FA84,  0x62, ), Q«« (🪄) MAGIC WAND»», 35082, True ),
( (0x1FA85,  0x21, ), Q«« (🪅) PINATA»», 35083, True ),
( (0x1FA85,  0x3F, ), Q«« (🪅) PINATA»», 35084, True ),
( (0x1FA85,  0x61, ), Q«« (🪅) PINATA»», 35085, True ),
( (0x1FA85,  0x41, ), Q«« (🪅) PINATA»», 35086, True ),
( (0x1FA85,  0x62, ), Q«« (🪅) PINATA»», 35087, True ),
( (0x1FA86,  0x21, ), Q«« (🪆) NESTING DOLLS»», 35088, True ),
( (0x1FA86,  0x3F, ), Q«« (🪆) NESTING DOLLS»», 35089, True ),
( (0x1FA86,  0x61, ), Q«« (🪆) NESTING DOLLS»», 35090, True ),
( (0x1FA86,  0x41, ), Q«« (🪆) NESTING DOLLS»», 35091, True ),
( (0x1FA86,  0x62, ), Q«« (🪆) NESTING DOLLS»», 35092, True ),
( (0x1FA90,  0x21, ), Q«« (🪐) RINGED PLANET»», 35093, True ),
( (0x1FA90,  0x3F, ), Q«« (🪐) RINGED PLANET»», 35094, True ),
( (0x1FA90,  0x61, ), Q«« (🪐) RINGED PLANET»», 35095, True ),
( (0x1FA90,  0x41, ), Q«« (🪐) RINGED PLANET»», 35096, True ),
( (0x1FA90,  0x62, ), Q«« (🪐) RINGED PLANET»», 35097, True ),
( (0x1FA91,  0x21, ), Q«« (🪑) CHAIR»», 35098, True ),
( (0x1FA91,  0x3F, ), Q«« (🪑) CHAIR»», 35099, True ),
( (0x1FA91,  0x61, ), Q«« (🪑) CHAIR»», 35100, True ),
( (0x1FA91,  0x41, ), Q«« (🪑) CHAIR»», 35101, True ),
( (0x1FA91,  0x62, ), Q«« (🪑) CHAIR»», 35102, True ),
( (0x1FA92,  0x21, ), Q«« (🪒) RAZOR»», 35103, True ),
( (0x1FA92,  0x3F, ), Q«« (🪒) RAZOR»», 35104, True ),
( (0x1FA92,  0x61, ), Q«« (🪒) RAZOR»», 35105, True ),
( (0x1FA92,  0x41, ), Q«« (🪒) RAZOR»», 35106, True ),
( (0x1FA92,  0x62, ), Q«« (🪒) RAZOR»», 35107, True ),
( (0x1FA93,  0x21, ), Q«« (🪓) AXE»», 35108, True ),
( (0x1FA93,  0x3F, ), Q«« (🪓) AXE»», 35109, True ),
( (0x1FA93,  0x61, ), Q«« (🪓) AXE»», 35110, True ),
( (0x1FA93,  0x41, ), Q«« (🪓) AXE»», 35111, True ),
( (0x1FA93,  0x62, ), Q«« (🪓) AXE»», 35112, True ),
( (0x1FA94,  0x21, ), Q«« (🪔) DIYA LAMP»», 35113, True ),
( (0x1FA94,  0x3F, ), Q«« (🪔) DIYA LAMP»», 35114, True ),
( (0x1FA94,  0x61, ), Q«« (🪔) DIYA LAMP»», 35115, True ),
( (0x1FA94,  0x41, ), Q«« (🪔) DIYA LAMP»», 35116, True ),
( (0x1FA94,  0x62, ), Q«« (🪔) DIYA LAMP»», 35117, True ),
( (0x1FA95,  0x21, ), Q«« (🪕) BANJO»», 35118, True ),
( (0x1FA95,  0x3F, ), Q«« (🪕) BANJO»», 35119, True ),
( (0x1FA95,  0x61, ), Q«« (🪕) BANJO»», 35120, True ),
( (0x1FA95,  0x41, ), Q«« (🪕) BANJO»», 35121, True ),
( (0x1FA95,  0x62, ), Q«« (🪕) BANJO»», 35122, True ),
( (0x1FA96,  0x21, ), Q«« (🪖) MILITARY HELMET»», 35123, True ),
( (0x1FA96,  0x3F, ), Q«« (🪖) MILITARY HELMET»», 35124, True ),
( (0x1FA96,  0x61, ), Q«« (🪖) MILITARY HELMET»», 35125, True ),
( (0x1FA96,  0x41, ), Q«« (🪖) MILITARY HELMET»», 35126, True ),
( (0x1FA96,  0x62, ), Q«« (🪖) MILITARY HELMET»», 35127, True ),
( (0x1FA97,  0x21, ), Q«« (🪗) ACCORDION»», 35128, True ),
( (0x1FA97,  0x3F, ), Q«« (🪗) ACCORDION»», 35129, True ),
( (0x1FA97,  0x61, ), Q«« (🪗) ACCORDION»», 35130, True ),
( (0x1FA97,  0x41, ), Q«« (🪗) ACCORDION»», 35131, True ),
( (0x1FA97,  0x62, ), Q«« (🪗) ACCORDION»», 35132, True ),
( (0x1FA98,  0x21, ), Q«« (🪘) LONG DRUM»», 35133, True ),
( (0x1FA98,  0x3F, ), Q«« (🪘) LONG DRUM»», 35134, True ),
( (0x1FA98,  0x61, ), Q«« (🪘) LONG DRUM»», 35135, True ),
( (0x1FA98,  0x41, ), Q«« (🪘) LONG DRUM»», 35136, True ),
( (0x1FA98,  0x62, ), Q«« (🪘) LONG DRUM»», 35137, True ),
( (0x1FA99,  0x21, ), Q«« (🪙) COIN»», 35138, True ),
( (0x1FA99,  0x3F, ), Q«« (🪙) COIN»», 35139, True ),
( (0x1FA99,  0x61, ), Q«« (🪙) COIN»», 35140, True ),
( (0x1FA99,  0x41, ), Q«« (🪙) COIN»», 35141, True ),
( (0x1FA99,  0x62, ), Q«« (🪙) COIN»», 35142, True ),
( (0x1FA9A,  0x21, ), Q«« (🪚) CARPENTRY SAW»», 35143, True ),
( (0x1FA9A,  0x3F, ), Q«« (🪚) CARPENTRY SAW»», 35144, True ),
( (0x1FA9A,  0x61, ), Q«« (🪚) CARPENTRY SAW»», 35145, True ),
( (0x1FA9A,  0x41, ), Q«« (🪚) CARPENTRY SAW»», 35146, True ),
( (0x1FA9A,  0x62, ), Q«« (🪚) CARPENTRY SAW»», 35147, True ),
( (0x1FA9B,  0x21, ), Q«« (🪛) SCREWDRIVER»», 35148, True ),
( (0x1FA9B,  0x3F, ), Q«« (🪛) SCREWDRIVER»», 35149, True ),
( (0x1FA9B,  0x61, ), Q«« (🪛) SCREWDRIVER»», 35150, True ),
( (0x1FA9B,  0x41, ), Q«« (🪛) SCREWDRIVER»», 35151, True ),
( (0x1FA9B,  0x62, ), Q«« (🪛) SCREWDRIVER»», 35152, True ),
( (0x1FA9C,  0x21, ), Q«« (🪜) LADDER»», 35153, True ),
( (0x1FA9C,  0x3F, ), Q«« (🪜) LADDER»», 35154, True ),
( (0x1FA9C,  0x61, ), Q«« (🪜) LADDER»», 35155, True ),
( (0x1FA9C,  0x41, ), Q«« (🪜) LADDER»», 35156, True ),
( (0x1FA9C,  0x62, ), Q«« (🪜) LADDER»», 35157, True ),
( (0x1FA9D,  0x21, ), Q«« (🪝) HOOK»», 35158, True ),
( (0x1FA9D,  0x3F, ), Q«« (🪝) HOOK»», 35159, True ),
( (0x1FA9D,  0x61, ), Q«« (🪝) HOOK»», 35160, True ),
( (0x1FA9D,  0x41, ), Q«« (🪝) HOOK»», 35161, True ),
( (0x1FA9D,  0x62, ), Q«« (🪝) HOOK»», 35162, True ),
( (0x1FA9E,  0x21, ), Q«« (🪞) MIRROR»», 35163, True ),
( (0x1FA9E,  0x3F, ), Q«« (🪞) MIRROR»», 35164, True ),
( (0x1FA9E,  0x61, ), Q«« (🪞) MIRROR»», 35165, True ),
( (0x1FA9E,  0x41, ), Q«« (🪞) MIRROR»», 35166, True ),
( (0x1FA9E,  0x62, ), Q«« (🪞) MIRROR»», 35167, True ),
( (0x1FA9F,  0x21, ), Q«« (🪟) WINDOW»», 35168, True ),
( (0x1FA9F,  0x3F, ), Q«« (🪟) WINDOW»», 35169, True ),
( (0x1FA9F,  0x61, ), Q«« (🪟) WINDOW»», 35170, True ),
( (0x1FA9F,  0x41, ), Q«« (🪟) WINDOW»», 35171, True ),
( (0x1FA9F,  0x62, ), Q«« (🪟) WINDOW»», 35172, True ),
( (0x1FAA0,  0x21, ), Q«« (🪠) PLUNGER»», 35173, True ),
( (0x1FAA0,  0x3F, ), Q«« (🪠) PLUNGER»», 35174, True ),
( (0x1FAA0,  0x61, ), Q«« (🪠) PLUNGER»», 35175, True ),
( (0x1FAA0,  0x41, ), Q«« (🪠) PLUNGER»», 35176, True ),
( (0x1FAA0,  0x62, ), Q«« (🪠) PLUNGER»», 35177, True ),
( (0x1FAA1,  0x21, ), Q«« (🪡) SEWING NEEDLE»», 35178, True ),
( (0x1FAA1,  0x3F, ), Q«« (🪡) SEWING NEEDLE»», 35179, True ),
( (0x1FAA1,  0x61, ), Q«« (🪡) SEWING NEEDLE»», 35180, True ),
( (0x1FAA1,  0x41, ), Q«« (🪡) SEWING NEEDLE»», 35181, True ),
( (0x1FAA1,  0x62, ), Q«« (🪡) SEWING NEEDLE»», 35182, True ),
( (0x1FAA2,  0x21, ), Q«« (🪢) KNOT»», 35183, True ),
( (0x1FAA2,  0x3F, ), Q«« (🪢) KNOT»», 35184, True ),
( (0x1FAA2,  0x61, ), Q«« (🪢) KNOT»», 35185, True ),
( (0x1FAA2,  0x41, ), Q«« (🪢) KNOT»», 35186, True ),
( (0x1FAA2,  0x62, ), Q«« (🪢) KNOT»», 35187, True ),
( (0x1FAA3,  0x21, ), Q«« (🪣) BUCKET»», 35188, True ),
( (0x1FAA3,  0x3F, ), Q«« (🪣) BUCKET»», 35189, True ),
( (0x1FAA3,  0x61, ), Q«« (🪣) BUCKET»», 35190, True ),
( (0x1FAA3,  0x41, ), Q«« (🪣) BUCKET»», 35191, True ),
( (0x1FAA3,  0x62, ), Q«« (🪣) BUCKET»», 35192, True ),
( (0x1FAA4,  0x21, ), Q«« (🪤) MOUSE TRAP»», 35193, True ),
( (0x1FAA4,  0x3F, ), Q«« (🪤) MOUSE TRAP»», 35194, True ),
( (0x1FAA4,  0x61, ), Q«« (🪤) MOUSE TRAP»», 35195, True ),
( (0x1FAA4,  0x41, ), Q«« (🪤) MOUSE TRAP»», 35196, True ),
( (0x1FAA4,  0x62, ), Q«« (🪤) MOUSE TRAP»», 35197, True ),
( (0x1FAA5,  0x21, ), Q«« (🪥) TOOTHBRUSH»», 35198, True ),
( (0x1FAA5,  0x3F, ), Q«« (🪥) TOOTHBRUSH»», 35199, True ),
( (0x1FAA5,  0x61, ), Q«« (🪥) TOOTHBRUSH»», 35200, True ),
( (0x1FAA5,  0x41, ), Q«« (🪥) TOOTHBRUSH»», 35201, True ),
( (0x1FAA5,  0x62, ), Q«« (🪥) TOOTHBRUSH»», 35202, True ),
( (0x1FAA6,  0x21, ), Q«« (🪦) HEADSTONE»», 35203, True ),
( (0x1FAA6,  0x3F, ), Q«« (🪦) HEADSTONE»», 35204, True ),
( (0x1FAA6,  0x61, ), Q«« (🪦) HEADSTONE»», 35205, True ),
( (0x1FAA6,  0x41, ), Q«« (🪦) HEADSTONE»», 35206, True ),
( (0x1FAA6,  0x62, ), Q«« (🪦) HEADSTONE»», 35207, True ),
( (0x1FAA7,  0x21, ), Q«« (🪧) PLACARD»», 35208, True ),
( (0x1FAA7,  0x3F, ), Q«« (🪧) PLACARD»», 35209, True ),
( (0x1FAA7,  0x61, ), Q«« (🪧) PLACARD»», 35210, True ),
( (0x1FAA7,  0x41, ), Q«« (🪧) PLACARD»», 35211, True ),
( (0x1FAA7,  0x62, ), Q«« (🪧) PLACARD»», 35212, True ),
( (0x1FAA8,  0x21, ), Q«« (🪨) ROCK»», 35213, True ),
( (0x1FAA8,  0x3F, ), Q«« (🪨) ROCK»», 35214, True ),
( (0x1FAA8,  0x61, ), Q«« (🪨) ROCK»», 35215, True ),
( (0x1FAA8,  0x41, ), Q«« (🪨) ROCK»», 35216, True ),
( (0x1FAA8,  0x62, ), Q«« (🪨) ROCK»», 35217, True ),
( (0x1FAB0,  0x21, ), Q«« (🪰) FLY»», 35218, True ),
( (0x1FAB0,  0x3F, ), Q«« (🪰) FLY»», 35219, True ),
( (0x1FAB0,  0x61, ), Q«« (🪰) FLY»», 35220, True ),
( (0x1FAB0,  0x41, ), Q«« (🪰) FLY»», 35221, True ),
( (0x1FAB0,  0x62, ), Q«« (🪰) FLY»», 35222, True ),
( (0x1FAB1,  0x21, ), Q«« (🪱) WORM»», 35223, True ),
( (0x1FAB1,  0x3F, ), Q«« (🪱) WORM»», 35224, True ),
( (0x1FAB1,  0x61, ), Q«« (🪱) WORM»», 35225, True ),
( (0x1FAB1,  0x41, ), Q«« (🪱) WORM»», 35226, True ),
( (0x1FAB1,  0x62, ), Q«« (🪱) WORM»», 35227, True ),
( (0x1FAB2,  0x21, ), Q«« (🪲) BEETLE»», 35228, True ),
( (0x1FAB2,  0x3F, ), Q«« (🪲) BEETLE»», 35229, True ),
( (0x1FAB2,  0x61, ), Q«« (🪲) BEETLE»», 35230, True ),
( (0x1FAB2,  0x41, ), Q«« (🪲) BEETLE»», 35231, True ),
( (0x1FAB2,  0x62, ), Q«« (🪲) BEETLE»», 35232, True ),
( (0x1FAB3,  0x21, ), Q«« (🪳) COCKROACH»», 35233, True ),
( (0x1FAB3,  0x3F, ), Q«« (🪳) COCKROACH»», 35234, True ),
( (0x1FAB3,  0x61, ), Q«« (🪳) COCKROACH»», 35235, True ),
( (0x1FAB3,  0x41, ), Q«« (🪳) COCKROACH»», 35236, True ),
( (0x1FAB3,  0x62, ), Q«« (🪳) COCKROACH»», 35237, True ),
( (0x1FAB4,  0x21, ), Q«« (🪴) POTTED PLANT»», 35238, True ),
( (0x1FAB4,  0x3F, ), Q«« (🪴) POTTED PLANT»», 35239, True ),
( (0x1FAB4,  0x61, ), Q«« (🪴) POTTED PLANT»», 35240, True ),
( (0x1FAB4,  0x41, ), Q«« (🪴) POTTED PLANT»», 35241, True ),
( (0x1FAB4,  0x62, ), Q«« (🪴) POTTED PLANT»», 35242, True ),
( (0x1FAB5,  0x21, ), Q«« (🪵) WOOD»», 35243, True ),
( (0x1FAB5,  0x3F, ), Q«« (🪵) WOOD»», 35244, True ),
( (0x1FAB5,  0x61, ), Q«« (🪵) WOOD»», 35245, True ),
( (0x1FAB5,  0x41, ), Q«« (🪵) WOOD»», 35246, True ),
( (0x1FAB5,  0x62, ), Q«« (🪵) WOOD»», 35247, True ),
( (0x1FAB6,  0x21, ), Q«« (🪶) FEATHER»», 35248, True ),
( (0x1FAB6,  0x3F, ), Q«« (🪶) FEATHER»», 35249, True ),
( (0x1FAB6,  0x61, ), Q«« (🪶) FEATHER»», 35250, True ),
( (0x1FAB6,  0x41, ), Q«« (🪶) FEATHER»», 35251, True ),
( (0x1FAB6,  0x62, ), Q«« (🪶) FEATHER»», 35252, True ),
( (0x1FAC0,  0x21, ), Q«« (🫀) ANATOMICAL HEART»», 35253, True ),
( (0x1FAC0,  0x3F, ), Q«« (🫀) ANATOMICAL HEART»», 35254, True ),
( (0x1FAC0,  0x61, ), Q«« (🫀) ANATOMICAL HEART»», 35255, True ),
( (0x1FAC0,  0x41, ), Q«« (🫀) ANATOMICAL HEART»», 35256, True ),
( (0x1FAC0,  0x62, ), Q«« (🫀) ANATOMICAL HEART»», 35257, True ),
( (0x1FAC1,  0x21, ), Q«« (🫁) LUNGS»», 35258, True ),
( (0x1FAC1,  0x3F, ), Q«« (🫁) LUNGS»», 35259, True ),
( (0x1FAC1,  0x61, ), Q«« (🫁) LUNGS»», 35260, True ),
( (0x1FAC1,  0x41, ), Q«« (🫁) LUNGS»», 35261, True ),
( (0x1FAC1,  0x62, ), Q«« (🫁) LUNGS»», 35262, True ),
( (0x1FAC2,  0x21, ), Q«« (🫂) PEOPLE HUGGING»», 35263, True ),
( (0x1FAC2,  0x3F, ), Q«« (🫂) PEOPLE HUGGING»», 35264, True ),
( (0x1FAC2,  0x61, ), Q«« (🫂) PEOPLE HUGGING»», 35265, True ),
( (0x1FAC2,  0x41, ), Q«« (🫂) PEOPLE HUGGING»», 35266, True ),
( (0x1FAC2,  0x62, ), Q«« (🫂) PEOPLE HUGGING»», 35267, True ),
( (0x1FAD0,  0x21, ), Q«« (🫐) BLUEBERRIES»», 35268, True ),
( (0x1FAD0,  0x3F, ), Q«« (🫐) BLUEBERRIES»», 35269, True ),
( (0x1FAD0,  0x61, ), Q«« (🫐) BLUEBERRIES»», 35270, True ),
( (0x1FAD0,  0x41, ), Q«« (🫐) BLUEBERRIES»», 35271, True ),
( (0x1FAD0,  0x62, ), Q«« (🫐) BLUEBERRIES»», 35272, True ),
( (0x1FAD1,  0x21, ), Q«« (🫑) BELL PEPPER»», 35273, True ),
( (0x1FAD1,  0x3F, ), Q«« (🫑) BELL PEPPER»», 35274, True ),
( (0x1FAD1,  0x61, ), Q«« (🫑) BELL PEPPER»», 35275, True ),
( (0x1FAD1,  0x41, ), Q«« (🫑) BELL PEPPER»», 35276, True ),
( (0x1FAD1,  0x62, ), Q«« (🫑) BELL PEPPER»», 35277, True ),
( (0x1FAD2,  0x21, ), Q«« (🫒) OLIVE»», 35278, True ),
( (0x1FAD2,  0x3F, ), Q«« (🫒) OLIVE»», 35279, True ),
( (0x1FAD2,  0x61, ), Q«« (🫒) OLIVE»», 35280, True ),
( (0x1FAD2,  0x41, ), Q«« (🫒) OLIVE»», 35281, True ),
( (0x1FAD2,  0x62, ), Q«« (🫒) OLIVE»», 35282, True ),
( (0x1FAD3,  0x21, ), Q«« (🫓) FLATBREAD»», 35283, True ),
( (0x1FAD3,  0x3F, ), Q«« (🫓) FLATBREAD»», 35284, True ),
( (0x1FAD3,  0x61, ), Q«« (🫓) FLATBREAD»», 35285, True ),
( (0x1FAD3,  0x41, ), Q«« (🫓) FLATBREAD»», 35286, True ),
( (0x1FAD3,  0x62, ), Q«« (🫓) FLATBREAD»», 35287, True ),
( (0x1FAD4,  0x21, ), Q«« (🫔) TAMALE»», 35288, True ),
( (0x1FAD4,  0x3F, ), Q«« (🫔) TAMALE»», 35289, True ),
( (0x1FAD4,  0x61, ), Q«« (🫔) TAMALE»», 35290, True ),
( (0x1FAD4,  0x41, ), Q«« (🫔) TAMALE»», 35291, True ),
( (0x1FAD4,  0x62, ), Q«« (🫔) TAMALE»», 35292, True ),
( (0x1FAD5,  0x21, ), Q«« (🫕) FONDUE»», 35293, True ),
( (0x1FAD5,  0x3F, ), Q«« (🫕) FONDUE»», 35294, True ),
( (0x1FAD5,  0x61, ), Q«« (🫕) FONDUE»», 35295, True ),
( (0x1FAD5,  0x41, ), Q«« (🫕) FONDUE»», 35296, True ),
( (0x1FAD5,  0x62, ), Q«« (🫕) FONDUE»», 35297, True ),
( (0x1FAD6,  0x21, ), Q«« (🫖) TEAPOT»», 35298, True ),
( (0x1FAD6,  0x3F, ), Q«« (🫖) TEAPOT»», 35299, True ),
( (0x1FAD6,  0x61, ), Q«« (🫖) TEAPOT»», 35300, True ),
( (0x1FAD6,  0x41, ), Q«« (🫖) TEAPOT»», 35301, True ),
( (0x1FAD6,  0x62, ), Q«« (🫖) TEAPOT»», 35302, True ),
( (0x1F600,  0x21, ), Q«« (😀) GRINNING FACE»», 35303, True ),
( (0x1F600,  0x3F, ), Q«« (😀) GRINNING FACE»», 35304, True ),
( (0x1F600,  0x61, ), Q«« (😀) GRINNING FACE»», 35305, True ),
( (0x1F600,  0x41, ), Q«« (😀) GRINNING FACE»», 35306, True ),
( (0x1F600,  0x62, ), Q«« (😀) GRINNING FACE»», 35307, True ),
( (0x1F601,  0x21, ), Q«« (😁) GRINNING FACE WITH SMILING EYES»», 35308, True ),
( (0x1F601,  0x3F, ), Q«« (😁) GRINNING FACE WITH SMILING EYES»», 35309, True ),
( (0x1F601,  0x61, ), Q«« (😁) GRINNING FACE WITH SMILING EYES»», 35310, True ),
( (0x1F601,  0x41, ), Q«« (😁) GRINNING FACE WITH SMILING EYES»», 35311, True ),
( (0x1F601,  0x62, ), Q«« (😁) GRINNING FACE WITH SMILING EYES»», 35312, True ),
( (0x1F602,  0x21, ), Q«« (😂) FACE WITH TEARS OF JOY»», 35313, True ),
( (0x1F602,  0x3F, ), Q«« (😂) FACE WITH TEARS OF JOY»», 35314, True ),
( (0x1F602,  0x61, ), Q«« (😂) FACE WITH TEARS OF JOY»», 35315, True ),
( (0x1F602,  0x41, ), Q«« (😂) FACE WITH TEARS OF JOY»», 35316, True ),
( (0x1F602,  0x62, ), Q«« (😂) FACE WITH TEARS OF JOY»», 35317, True ),
( (0x1F603,  0x21, ), Q«« (😃) SMILING FACE WITH OPEN MOUTH»», 35318, True ),
( (0x1F603,  0x3F, ), Q«« (😃) SMILING FACE WITH OPEN MOUTH»», 35319, True ),
( (0x1F603,  0x61, ), Q«« (😃) SMILING FACE WITH OPEN MOUTH»», 35320, True ),
( (0x1F603,  0x41, ), Q«« (😃) SMILING FACE WITH OPEN MOUTH»», 35321, True ),
( (0x1F603,  0x62, ), Q«« (😃) SMILING FACE WITH OPEN MOUTH»», 35322, True ),
( (0x1F604,  0x21, ), Q«« (😄) SMILING FACE WITH OPEN MOUTH AND SMILING EYES»», 35323, True ),
( (0x1F604,  0x3F, ), Q«« (😄) SMILING FACE WITH OPEN MOUTH AND SMILING EYES»», 35324, True ),
( (0x1F604,  0x61, ), Q«« (😄) SMILING FACE WITH OPEN MOUTH AND SMILING EYES»», 35325, True ),
( (0x1F604,  0x41, ), Q«« (😄) SMILING FACE WITH OPEN MOUTH AND SMILING EYES»», 35326, True ),
( (0x1F604,  0x62, ), Q«« (😄) SMILING FACE WITH OPEN MOUTH AND SMILING EYES»», 35327, True ),
( (0x1F605,  0x21, ), Q«« (😅) SMILING FACE WITH OPEN MOUTH AND COLD SWEAT»», 35328, True ),
( (0x1F605,  0x3F, ), Q«« (😅) SMILING FACE WITH OPEN MOUTH AND COLD SWEAT»», 35329, True ),
( (0x1F605,  0x61, ), Q«« (😅) SMILING FACE WITH OPEN MOUTH AND COLD SWEAT»», 35330, True ),
( (0x1F605,  0x41, ), Q«« (😅) SMILING FACE WITH OPEN MOUTH AND COLD SWEAT»», 35331, True ),
( (0x1F605,  0x62, ), Q«« (😅) SMILING FACE WITH OPEN MOUTH AND COLD SWEAT»», 35332, True ),
( (0x1F606,  0x21, ), Q«« (😆) SMILING FACE WITH OPEN MOUTH AND TIGHTLY-CLOSED EYES»», 35333, True ),
( (0x1F606,  0x3F, ), Q«« (😆) SMILING FACE WITH OPEN MOUTH AND TIGHTLY-CLOSED EYES»», 35334, True ),
( (0x1F606,  0x61, ), Q«« (😆) SMILING FACE WITH OPEN MOUTH AND TIGHTLY-CLOSED EYES»», 35335, True ),
( (0x1F606,  0x41, ), Q«« (😆) SMILING FACE WITH OPEN MOUTH AND TIGHTLY-CLOSED EYES»», 35336, True ),
( (0x1F606,  0x62, ), Q«« (😆) SMILING FACE WITH OPEN MOUTH AND TIGHTLY-CLOSED EYES»», 35337, True ),
( (0x1F607,  0x21, ), Q«« (😇) SMILING FACE WITH HALO»», 35338, True ),
( (0x1F607,  0x3F, ), Q«« (😇) SMILING FACE WITH HALO»», 35339, True ),
( (0x1F607,  0x61, ), Q«« (😇) SMILING FACE WITH HALO»», 35340, True ),
( (0x1F607,  0x41, ), Q«« (😇) SMILING FACE WITH HALO»», 35341, True ),
( (0x1F607,  0x62, ), Q«« (😇) SMILING FACE WITH HALO»», 35342, True ),
( (0x1F608,  0x21, ), Q«« (😈) SMILING FACE WITH HORNS»», 35343, True ),
( (0x1F608,  0x3F, ), Q«« (😈) SMILING FACE WITH HORNS»», 35344, True ),
( (0x1F608,  0x61, ), Q«« (😈) SMILING FACE WITH HORNS»», 35345, True ),
( (0x1F608,  0x41, ), Q«« (😈) SMILING FACE WITH HORNS»», 35346, True ),
( (0x1F608,  0x62, ), Q«« (😈) SMILING FACE WITH HORNS»», 35347, True ),
( (0x1F609,  0x21, ), Q«« (😉) WINKING FACE»», 35348, True ),
( (0x1F609,  0x3F, ), Q«« (😉) WINKING FACE»», 35349, True ),
( (0x1F609,  0x61, ), Q«« (😉) WINKING FACE»», 35350, True ),
( (0x1F609,  0x41, ), Q«« (😉) WINKING FACE»», 35351, True ),
( (0x1F609,  0x62, ), Q«« (😉) WINKING FACE»», 35352, True ),
( (0x1F60A,  0x21, ), Q«« (😊) SMILING FACE WITH SMILING EYES»», 35353, True ),
( (0x1F60A,  0x3F, ), Q«« (😊) SMILING FACE WITH SMILING EYES»», 35354, True ),
( (0x1F60A,  0x61, ), Q«« (😊) SMILING FACE WITH SMILING EYES»», 35355, True ),
( (0x1F60A,  0x41, ), Q«« (😊) SMILING FACE WITH SMILING EYES»», 35356, True ),
( (0x1F60A,  0x62, ), Q«« (😊) SMILING FACE WITH SMILING EYES»», 35357, True ),
( (0x1F60B,  0x21, ), Q«« (😋) FACE SAVOURING DELICIOUS FOOD»», 35358, True ),
( (0x1F60B,  0x3F, ), Q«« (😋) FACE SAVOURING DELICIOUS FOOD»», 35359, True ),
( (0x1F60B,  0x61, ), Q«« (😋) FACE SAVOURING DELICIOUS FOOD»», 35360, True ),
( (0x1F60B,  0x41, ), Q«« (😋) FACE SAVOURING DELICIOUS FOOD»», 35361, True ),
( (0x1F60B,  0x62, ), Q«« (😋) FACE SAVOURING DELICIOUS FOOD»», 35362, True ),
( (0x1F60C,  0x21, ), Q«« (😌) RELIEVED FACE»», 35363, True ),
( (0x1F60C,  0x3F, ), Q«« (😌) RELIEVED FACE»», 35364, True ),
( (0x1F60C,  0x61, ), Q«« (😌) RELIEVED FACE»», 35365, True ),
( (0x1F60C,  0x41, ), Q«« (😌) RELIEVED FACE»», 35366, True ),
( (0x1F60C,  0x62, ), Q«« (😌) RELIEVED FACE»», 35367, True ),
( (0x1F60D,  0x21, ), Q«« (😍) SMILING FACE WITH HEART-SHAPED EYES»», 35368, True ),
( (0x1F60D,  0x3F, ), Q«« (😍) SMILING FACE WITH HEART-SHAPED EYES»», 35369, True ),
( (0x1F60D,  0x61, ), Q«« (😍) SMILING FACE WITH HEART-SHAPED EYES»», 35370, True ),
( (0x1F60D,  0x41, ), Q«« (😍) SMILING FACE WITH HEART-SHAPED EYES»», 35371, True ),
( (0x1F60D,  0x62, ), Q«« (😍) SMILING FACE WITH HEART-SHAPED EYES»», 35372, True ),
( (0x1F60E,  0x21, ), Q«« (😎) SMILING FACE WITH SUNGLASSES»», 35373, True ),
( (0x1F60E,  0x3F, ), Q«« (😎) SMILING FACE WITH SUNGLASSES»», 35374, True ),
( (0x1F60E,  0x61, ), Q«« (😎) SMILING FACE WITH SUNGLASSES»», 35375, True ),
( (0x1F60E,  0x41, ), Q«« (😎) SMILING FACE WITH SUNGLASSES»», 35376, True ),
( (0x1F60E,  0x62, ), Q«« (😎) SMILING FACE WITH SUNGLASSES»», 35377, True ),
( (0x1F60F,  0x21, ), Q«« (😏) SMIRKING FACE»», 35378, True ),
( (0x1F60F,  0x3F, ), Q«« (😏) SMIRKING FACE»», 35379, True ),
( (0x1F60F,  0x61, ), Q«« (😏) SMIRKING FACE»», 35380, True ),
( (0x1F60F,  0x41, ), Q«« (😏) SMIRKING FACE»», 35381, True ),
( (0x1F60F,  0x62, ), Q«« (😏) SMIRKING FACE»», 35382, True ),
( (0x1F610,  0x21, ), Q«« (😐) NEUTRAL FACE»», 35383, True ),
( (0x1F610,  0x3F, ), Q«« (😐) NEUTRAL FACE»», 35384, True ),
( (0x1F610,  0x61, ), Q«« (😐) NEUTRAL FACE»», 35385, True ),
( (0x1F610,  0x41, ), Q«« (😐) NEUTRAL FACE»», 35386, True ),
( (0x1F610,  0x62, ), Q«« (😐) NEUTRAL FACE»», 35387, True ),
( (0x1F611,  0x21, ), Q«« (😑) EXPRESSIONLESS FACE»», 35388, True ),
( (0x1F611,  0x3F, ), Q«« (😑) EXPRESSIONLESS FACE»», 35389, True ),
( (0x1F611,  0x61, ), Q«« (😑) EXPRESSIONLESS FACE»», 35390, True ),
( (0x1F611,  0x41, ), Q«« (😑) EXPRESSIONLESS FACE»», 35391, True ),
( (0x1F611,  0x62, ), Q«« (😑) EXPRESSIONLESS FACE»», 35392, True ),
( (0x1F612,  0x21, ), Q«« (😒) UNAMUSED FACE»», 35393, True ),
( (0x1F612,  0x3F, ), Q«« (😒) UNAMUSED FACE»», 35394, True ),
( (0x1F612,  0x61, ), Q«« (😒) UNAMUSED FACE»», 35395, True ),
( (0x1F612,  0x41, ), Q«« (😒) UNAMUSED FACE»», 35396, True ),
( (0x1F612,  0x62, ), Q«« (😒) UNAMUSED FACE»», 35397, True ),
( (0x1F613,  0x21, ), Q«« (😓) FACE WITH COLD SWEAT»», 35398, True ),
( (0x1F613,  0x3F, ), Q«« (😓) FACE WITH COLD SWEAT»», 35399, True ),
( (0x1F613,  0x61, ), Q«« (😓) FACE WITH COLD SWEAT»», 35400, True ),
( (0x1F613,  0x41, ), Q«« (😓) FACE WITH COLD SWEAT»», 35401, True ),
( (0x1F613,  0x62, ), Q«« (😓) FACE WITH COLD SWEAT»», 35402, True ),
( (0x1F614,  0x21, ), Q«« (😔) PENSIVE FACE»», 35403, True ),
( (0x1F614,  0x3F, ), Q«« (😔) PENSIVE FACE»», 35404, True ),
( (0x1F614,  0x61, ), Q«« (😔) PENSIVE FACE»», 35405, True ),
( (0x1F614,  0x41, ), Q«« (😔) PENSIVE FACE»», 35406, True ),
( (0x1F614,  0x62, ), Q«« (😔) PENSIVE FACE»», 35407, True ),
( (0x1F615,  0x21, ), Q«« (😕) CONFUSED FACE»», 35408, True ),
( (0x1F615,  0x3F, ), Q«« (😕) CONFUSED FACE»», 35409, True ),
( (0x1F615,  0x61, ), Q«« (😕) CONFUSED FACE»», 35410, True ),
( (0x1F615,  0x41, ), Q«« (😕) CONFUSED FACE»», 35411, True ),
( (0x1F615,  0x62, ), Q«« (😕) CONFUSED FACE»», 35412, True ),
( (0x1F616,  0x21, ), Q«« (😖) CONFOUNDED FACE»», 35413, True ),
( (0x1F616,  0x3F, ), Q«« (😖) CONFOUNDED FACE»», 35414, True ),
( (0x1F616,  0x61, ), Q«« (😖) CONFOUNDED FACE»», 35415, True ),
( (0x1F616,  0x41, ), Q«« (😖) CONFOUNDED FACE»», 35416, True ),
( (0x1F616,  0x62, ), Q«« (😖) CONFOUNDED FACE»», 35417, True ),
( (0x1F617,  0x21, ), Q«« (😗) KISSING FACE»», 35418, True ),
( (0x1F617,  0x3F, ), Q«« (😗) KISSING FACE»», 35419, True ),
( (0x1F617,  0x61, ), Q«« (😗) KISSING FACE»», 35420, True ),
( (0x1F617,  0x41, ), Q«« (😗) KISSING FACE»», 35421, True ),
( (0x1F617,  0x62, ), Q«« (😗) KISSING FACE»», 35422, True ),
( (0x1F618,  0x21, ), Q«« (😘) FACE THROWING A KISS»», 35423, True ),
( (0x1F618,  0x3F, ), Q«« (😘) FACE THROWING A KISS»», 35424, True ),
( (0x1F618,  0x61, ), Q«« (😘) FACE THROWING A KISS»», 35425, True ),
( (0x1F618,  0x41, ), Q«« (😘) FACE THROWING A KISS»», 35426, True ),
( (0x1F618,  0x62, ), Q«« (😘) FACE THROWING A KISS»», 35427, True ),
( (0x1F619,  0x21, ), Q«« (😙) KISSING FACE WITH SMILING EYES»», 35428, True ),
( (0x1F619,  0x3F, ), Q«« (😙) KISSING FACE WITH SMILING EYES»», 35429, True ),
( (0x1F619,  0x61, ), Q«« (😙) KISSING FACE WITH SMILING EYES»», 35430, True ),
( (0x1F619,  0x41, ), Q«« (😙) KISSING FACE WITH SMILING EYES»», 35431, True ),
( (0x1F619,  0x62, ), Q«« (😙) KISSING FACE WITH SMILING EYES»», 35432, True ),
( (0x1F61A,  0x21, ), Q«« (😚) KISSING FACE WITH CLOSED EYES»», 35433, True ),
( (0x1F61A,  0x3F, ), Q«« (😚) KISSING FACE WITH CLOSED EYES»», 35434, True ),
( (0x1F61A,  0x61, ), Q«« (😚) KISSING FACE WITH CLOSED EYES»», 35435, True ),
( (0x1F61A,  0x41, ), Q«« (😚) KISSING FACE WITH CLOSED EYES»», 35436, True ),
( (0x1F61A,  0x62, ), Q«« (😚) KISSING FACE WITH CLOSED EYES»», 35437, True ),
( (0x1F61B,  0x21, ), Q«« (😛) FACE WITH STUCK-OUT TONGUE»», 35438, True ),
( (0x1F61B,  0x3F, ), Q«« (😛) FACE WITH STUCK-OUT TONGUE»», 35439, True ),
( (0x1F61B,  0x61, ), Q«« (😛) FACE WITH STUCK-OUT TONGUE»», 35440, True ),
( (0x1F61B,  0x41, ), Q«« (😛) FACE WITH STUCK-OUT TONGUE»», 35441, True ),
( (0x1F61B,  0x62, ), Q«« (😛) FACE WITH STUCK-OUT TONGUE»», 35442, True ),
( (0x1F61C,  0x21, ), Q«« (😜) FACE WITH STUCK-OUT TONGUE AND WINKING EYE»», 35443, True ),
( (0x1F61C,  0x3F, ), Q«« (😜) FACE WITH STUCK-OUT TONGUE AND WINKING EYE»», 35444, True ),
( (0x1F61C,  0x61, ), Q«« (😜) FACE WITH STUCK-OUT TONGUE AND WINKING EYE»», 35445, True ),
( (0x1F61C,  0x41, ), Q«« (😜) FACE WITH STUCK-OUT TONGUE AND WINKING EYE»», 35446, True ),
( (0x1F61C,  0x62, ), Q«« (😜) FACE WITH STUCK-OUT TONGUE AND WINKING EYE»», 35447, True ),
( (0x1F61D,  0x21, ), Q«« (😝) FACE WITH STUCK-OUT TONGUE AND TIGHTLY-CLOSED EYES»», 35448, True ),
( (0x1F61D,  0x3F, ), Q«« (😝) FACE WITH STUCK-OUT TONGUE AND TIGHTLY-CLOSED EYES»», 35449, True ),
( (0x1F61D,  0x61, ), Q«« (😝) FACE WITH STUCK-OUT TONGUE AND TIGHTLY-CLOSED EYES»», 35450, True ),
( (0x1F61D,  0x41, ), Q«« (😝) FACE WITH STUCK-OUT TONGUE AND TIGHTLY-CLOSED EYES»», 35451, True ),
( (0x1F61D,  0x62, ), Q«« (😝) FACE WITH STUCK-OUT TONGUE AND TIGHTLY-CLOSED EYES»», 35452, True ),
( (0x1F61E,  0x21, ), Q«« (😞) DISAPPOINTED FACE»», 35453, True ),
( (0x1F61E,  0x3F, ), Q«« (😞) DISAPPOINTED FACE»», 35454, True ),
( (0x1F61E,  0x61, ), Q«« (😞) DISAPPOINTED FACE»», 35455, True ),
( (0x1F61E,  0x41, ), Q«« (😞) DISAPPOINTED FACE»», 35456, True ),
( (0x1F61E,  0x62, ), Q«« (😞) DISAPPOINTED FACE»», 35457, True ),
( (0x1F61F,  0x21, ), Q«« (😟) WORRIED FACE»», 35458, True ),
( (0x1F61F,  0x3F, ), Q«« (😟) WORRIED FACE»», 35459, True ),
( (0x1F61F,  0x61, ), Q«« (😟) WORRIED FACE»», 35460, True ),
( (0x1F61F,  0x41, ), Q«« (😟) WORRIED FACE»», 35461, True ),
( (0x1F61F,  0x62, ), Q«« (😟) WORRIED FACE»», 35462, True ),
( (0x1F620,  0x21, ), Q«« (😠) ANGRY FACE»», 35463, True ),
( (0x1F620,  0x3F, ), Q«« (😠) ANGRY FACE»», 35464, True ),
( (0x1F620,  0x61, ), Q«« (😠) ANGRY FACE»», 35465, True ),
( (0x1F620,  0x41, ), Q«« (😠) ANGRY FACE»», 35466, True ),
( (0x1F620,  0x62, ), Q«« (😠) ANGRY FACE»», 35467, True ),
( (0x1F621,  0x21, ), Q«« (😡) POUTING FACE»», 35468, True ),
( (0x1F621,  0x3F, ), Q«« (😡) POUTING FACE»», 35469, True ),
( (0x1F621,  0x61, ), Q«« (😡) POUTING FACE»», 35470, True ),
( (0x1F621,  0x41, ), Q«« (😡) POUTING FACE»», 35471, True ),
( (0x1F621,  0x62, ), Q«« (😡) POUTING FACE»», 35472, True ),
( (0x1F622,  0x21, ), Q«« (😢) CRYING FACE»», 35473, True ),
( (0x1F622,  0x3F, ), Q«« (😢) CRYING FACE»», 35474, True ),
( (0x1F622,  0x61, ), Q«« (😢) CRYING FACE»», 35475, True ),
( (0x1F622,  0x41, ), Q«« (😢) CRYING FACE»», 35476, True ),
( (0x1F622,  0x62, ), Q«« (😢) CRYING FACE»», 35477, True ),
( (0x1F623,  0x21, ), Q«« (😣) PERSEVERING FACE»», 35478, True ),
( (0x1F623,  0x3F, ), Q«« (😣) PERSEVERING FACE»», 35479, True ),
( (0x1F623,  0x61, ), Q«« (😣) PERSEVERING FACE»», 35480, True ),
( (0x1F623,  0x41, ), Q«« (😣) PERSEVERING FACE»», 35481, True ),
( (0x1F623,  0x62, ), Q«« (😣) PERSEVERING FACE»», 35482, True ),
( (0x1F624,  0x21, ), Q«« (😤) FACE WITH LOOK OF TRIUMPH»», 35483, True ),
( (0x1F624,  0x3F, ), Q«« (😤) FACE WITH LOOK OF TRIUMPH»», 35484, True ),
( (0x1F624,  0x61, ), Q«« (😤) FACE WITH LOOK OF TRIUMPH»», 35485, True ),
( (0x1F624,  0x41, ), Q«« (😤) FACE WITH LOOK OF TRIUMPH»», 35486, True ),
( (0x1F624,  0x62, ), Q«« (😤) FACE WITH LOOK OF TRIUMPH»», 35487, True ),
( (0x1F625,  0x21, ), Q«« (😥) DISAPPOINTED BUT RELIEVED FACE»», 35488, True ),
( (0x1F625,  0x3F, ), Q«« (😥) DISAPPOINTED BUT RELIEVED FACE»», 35489, True ),
( (0x1F625,  0x61, ), Q«« (😥) DISAPPOINTED BUT RELIEVED FACE»», 35490, True ),
( (0x1F625,  0x41, ), Q«« (😥) DISAPPOINTED BUT RELIEVED FACE»», 35491, True ),
( (0x1F625,  0x62, ), Q«« (😥) DISAPPOINTED BUT RELIEVED FACE»», 35492, True ),
( (0x1F626,  0x21, ), Q«« (😦) FROWNING FACE WITH OPEN MOUTH»», 35493, True ),
( (0x1F626,  0x3F, ), Q«« (😦) FROWNING FACE WITH OPEN MOUTH»», 35494, True ),
( (0x1F626,  0x61, ), Q«« (😦) FROWNING FACE WITH OPEN MOUTH»», 35495, True ),
( (0x1F626,  0x41, ), Q«« (😦) FROWNING FACE WITH OPEN MOUTH»», 35496, True ),
( (0x1F626,  0x62, ), Q«« (😦) FROWNING FACE WITH OPEN MOUTH»», 35497, True ),
( (0x1F627,  0x21, ), Q«« (😧) ANGUISHED FACE»», 35498, True ),
( (0x1F627,  0x3F, ), Q«« (😧) ANGUISHED FACE»», 35499, True ),
( (0x1F627,  0x61, ), Q«« (😧) ANGUISHED FACE»», 35500, True ),
( (0x1F627,  0x41, ), Q«« (😧) ANGUISHED FACE»», 35501, True ),
( (0x1F627,  0x62, ), Q«« (😧) ANGUISHED FACE»», 35502, True ),
( (0x1F628,  0x21, ), Q«« (😨) FEARFUL FACE»», 35503, True ),
( (0x1F628,  0x3F, ), Q«« (😨) FEARFUL FACE»», 35504, True ),
( (0x1F628,  0x61, ), Q«« (😨) FEARFUL FACE»», 35505, True ),
( (0x1F628,  0x41, ), Q«« (😨) FEARFUL FACE»», 35506, True ),
( (0x1F628,  0x62, ), Q«« (😨) FEARFUL FACE»», 35507, True ),
( (0x1F629,  0x21, ), Q«« (😩) WEARY FACE»», 35508, True ),
( (0x1F629,  0x3F, ), Q«« (😩) WEARY FACE»», 35509, True ),
( (0x1F629,  0x61, ), Q«« (😩) WEARY FACE»», 35510, True ),
( (0x1F629,  0x41, ), Q«« (😩) WEARY FACE»», 35511, True ),
( (0x1F629,  0x62, ), Q«« (😩) WEARY FACE»», 35512, True ),
( (0x1F62A,  0x21, ), Q«« (😪) SLEEPY FACE»», 35513, True ),
( (0x1F62A,  0x3F, ), Q«« (😪) SLEEPY FACE»», 35514, True ),
( (0x1F62A,  0x61, ), Q«« (😪) SLEEPY FACE»», 35515, True ),
( (0x1F62A,  0x41, ), Q«« (😪) SLEEPY FACE»», 35516, True ),
( (0x1F62A,  0x62, ), Q«« (😪) SLEEPY FACE»», 35517, True ),
( (0x1F62B,  0x21, ), Q«« (😫) TIRED FACE»», 35518, True ),
( (0x1F62B,  0x3F, ), Q«« (😫) TIRED FACE»», 35519, True ),
( (0x1F62B,  0x61, ), Q«« (😫) TIRED FACE»», 35520, True ),
( (0x1F62B,  0x41, ), Q«« (😫) TIRED FACE»», 35521, True ),
( (0x1F62B,  0x62, ), Q«« (😫) TIRED FACE»», 35522, True ),
( (0x1F62C,  0x21, ), Q«« (😬) GRIMACING FACE»», 35523, True ),
( (0x1F62C,  0x3F, ), Q«« (😬) GRIMACING FACE»», 35524, True ),
( (0x1F62C,  0x61, ), Q«« (😬) GRIMACING FACE»», 35525, True ),
( (0x1F62C,  0x41, ), Q«« (😬) GRIMACING FACE»», 35526, True ),
( (0x1F62C,  0x62, ), Q«« (😬) GRIMACING FACE»», 35527, True ),
( (0x1F62D,  0x21, ), Q«« (😭) LOUDLY CRYING FACE»», 35528, True ),
( (0x1F62D,  0x3F, ), Q«« (😭) LOUDLY CRYING FACE»», 35529, True ),
( (0x1F62D,  0x61, ), Q«« (😭) LOUDLY CRYING FACE»», 35530, True ),
( (0x1F62D,  0x41, ), Q«« (😭) LOUDLY CRYING FACE»», 35531, True ),
( (0x1F62D,  0x62, ), Q«« (😭) LOUDLY CRYING FACE»», 35532, True ),
( (0x1F62E,  0x21, ), Q«« (😮) FACE WITH OPEN MOUTH»», 35533, True ),
( (0x1F62E,  0x3F, ), Q«« (😮) FACE WITH OPEN MOUTH»», 35534, True ),
( (0x1F62E,  0x61, ), Q«« (😮) FACE WITH OPEN MOUTH»», 35535, True ),
( (0x1F62E,  0x41, ), Q«« (😮) FACE WITH OPEN MOUTH»», 35536, True ),
( (0x1F62E,  0x62, ), Q«« (😮) FACE WITH OPEN MOUTH»», 35537, True ),
( (0x1F62F,  0x21, ), Q«« (😯) HUSHED FACE»», 35538, True ),
( (0x1F62F,  0x3F, ), Q«« (😯) HUSHED FACE»», 35539, True ),
( (0x1F62F,  0x61, ), Q«« (😯) HUSHED FACE»», 35540, True ),
( (0x1F62F,  0x41, ), Q«« (😯) HUSHED FACE»», 35541, True ),
( (0x1F62F,  0x62, ), Q«« (😯) HUSHED FACE»», 35542, True ),
( (0x1F630,  0x21, ), Q«« (😰) FACE WITH OPEN MOUTH AND COLD SWEAT»», 35543, True ),
( (0x1F630,  0x3F, ), Q«« (😰) FACE WITH OPEN MOUTH AND COLD SWEAT»», 35544, True ),
( (0x1F630,  0x61, ), Q«« (😰) FACE WITH OPEN MOUTH AND COLD SWEAT»», 35545, True ),
( (0x1F630,  0x41, ), Q«« (😰) FACE WITH OPEN MOUTH AND COLD SWEAT»», 35546, True ),
( (0x1F630,  0x62, ), Q«« (😰) FACE WITH OPEN MOUTH AND COLD SWEAT»», 35547, True ),
( (0x1F631,  0x21, ), Q«« (😱) FACE SCREAMING IN FEAR»», 35548, True ),
( (0x1F631,  0x3F, ), Q«« (😱) FACE SCREAMING IN FEAR»», 35549, True ),
( (0x1F631,  0x61, ), Q«« (😱) FACE SCREAMING IN FEAR»», 35550, True ),
( (0x1F631,  0x41, ), Q«« (😱) FACE SCREAMING IN FEAR»», 35551, True ),
( (0x1F631,  0x62, ), Q«« (😱) FACE SCREAMING IN FEAR»», 35552, True ),
( (0x1F632,  0x21, ), Q«« (😲) ASTONISHED FACE»», 35553, True ),
( (0x1F632,  0x3F, ), Q«« (😲) ASTONISHED FACE»», 35554, True ),
( (0x1F632,  0x61, ), Q«« (😲) ASTONISHED FACE»», 35555, True ),
( (0x1F632,  0x41, ), Q«« (😲) ASTONISHED FACE»», 35556, True ),
( (0x1F632,  0x62, ), Q«« (😲) ASTONISHED FACE»», 35557, True ),
( (0x1F633,  0x21, ), Q«« (😳) FLUSHED FACE»», 35558, True ),
( (0x1F633,  0x3F, ), Q«« (😳) FLUSHED FACE»», 35559, True ),
( (0x1F633,  0x61, ), Q«« (😳) FLUSHED FACE»», 35560, True ),
( (0x1F633,  0x41, ), Q«« (😳) FLUSHED FACE»», 35561, True ),
( (0x1F633,  0x62, ), Q«« (😳) FLUSHED FACE»», 35562, True ),
( (0x1F634,  0x21, ), Q«« (😴) SLEEPING FACE»», 35563, True ),
( (0x1F634,  0x3F, ), Q«« (😴) SLEEPING FACE»», 35564, True ),
( (0x1F634,  0x61, ), Q«« (😴) SLEEPING FACE»», 35565, True ),
( (0x1F634,  0x41, ), Q«« (😴) SLEEPING FACE»», 35566, True ),
( (0x1F634,  0x62, ), Q«« (😴) SLEEPING FACE»», 35567, True ),
( (0x1F635,  0x21, ), Q«« (😵) DIZZY FACE»», 35568, True ),
( (0x1F635,  0x3F, ), Q«« (😵) DIZZY FACE»», 35569, True ),
( (0x1F635,  0x61, ), Q«« (😵) DIZZY FACE»», 35570, True ),
( (0x1F635,  0x41, ), Q«« (😵) DIZZY FACE»», 35571, True ),
( (0x1F635,  0x62, ), Q«« (😵) DIZZY FACE»», 35572, True ),
( (0x1F636,  0x21, ), Q«« (😶) FACE WITHOUT MOUTH»», 35573, True ),
( (0x1F636,  0x3F, ), Q«« (😶) FACE WITHOUT MOUTH»», 35574, True ),
( (0x1F636,  0x61, ), Q«« (😶) FACE WITHOUT MOUTH»», 35575, True ),
( (0x1F636,  0x41, ), Q«« (😶) FACE WITHOUT MOUTH»», 35576, True ),
( (0x1F636,  0x62, ), Q«« (😶) FACE WITHOUT MOUTH»», 35577, True ),
( (0x1F637,  0x21, ), Q«« (😷) FACE WITH MEDICAL MASK»», 35578, True ),
( (0x1F637,  0x3F, ), Q«« (😷) FACE WITH MEDICAL MASK»», 35579, True ),
( (0x1F637,  0x61, ), Q«« (😷) FACE WITH MEDICAL MASK»», 35580, True ),
( (0x1F637,  0x41, ), Q«« (😷) FACE WITH MEDICAL MASK»», 35581, True ),
( (0x1F637,  0x62, ), Q«« (😷) FACE WITH MEDICAL MASK»», 35582, True ),
( (0x1F638,  0x21, ), Q«« (😸) GRINNING CAT FACE WITH SMILING EYES»», 35583, True ),
( (0x1F638,  0x3F, ), Q«« (😸) GRINNING CAT FACE WITH SMILING EYES»», 35584, True ),
( (0x1F638,  0x61, ), Q«« (😸) GRINNING CAT FACE WITH SMILING EYES»», 35585, True ),
( (0x1F638,  0x41, ), Q«« (😸) GRINNING CAT FACE WITH SMILING EYES»», 35586, True ),
( (0x1F638,  0x62, ), Q«« (😸) GRINNING CAT FACE WITH SMILING EYES»», 35587, True ),
( (0x1F639,  0x21, ), Q«« (😹) CAT FACE WITH TEARS OF JOY»», 35588, True ),
( (0x1F639,  0x3F, ), Q«« (😹) CAT FACE WITH TEARS OF JOY»», 35589, True ),
( (0x1F639,  0x61, ), Q«« (😹) CAT FACE WITH TEARS OF JOY»», 35590, True ),
( (0x1F639,  0x41, ), Q«« (😹) CAT FACE WITH TEARS OF JOY»», 35591, True ),
( (0x1F639,  0x62, ), Q«« (😹) CAT FACE WITH TEARS OF JOY»», 35592, True ),
( (0x1F63A,  0x21, ), Q«« (😺) SMILING CAT FACE WITH OPEN MOUTH»», 35593, True ),
( (0x1F63A,  0x3F, ), Q«« (😺) SMILING CAT FACE WITH OPEN MOUTH»», 35594, True ),
( (0x1F63A,  0x61, ), Q«« (😺) SMILING CAT FACE WITH OPEN MOUTH»», 35595, True ),
( (0x1F63A,  0x41, ), Q«« (😺) SMILING CAT FACE WITH OPEN MOUTH»», 35596, True ),
( (0x1F63A,  0x62, ), Q«« (😺) SMILING CAT FACE WITH OPEN MOUTH»», 35597, True ),
( (0x1F63B,  0x21, ), Q«« (😻) SMILING CAT FACE WITH HEART-SHAPED EYES»», 35598, True ),
( (0x1F63B,  0x3F, ), Q«« (😻) SMILING CAT FACE WITH HEART-SHAPED EYES»», 35599, True ),
( (0x1F63B,  0x61, ), Q«« (😻) SMILING CAT FACE WITH HEART-SHAPED EYES»», 35600, True ),
( (0x1F63B,  0x41, ), Q«« (😻) SMILING CAT FACE WITH HEART-SHAPED EYES»», 35601, True ),
( (0x1F63B,  0x62, ), Q«« (😻) SMILING CAT FACE WITH HEART-SHAPED EYES»», 35602, True ),
( (0x1F63C,  0x21, ), Q«« (😼) CAT FACE WITH WRY SMILE»», 35603, True ),
( (0x1F63C,  0x3F, ), Q«« (😼) CAT FACE WITH WRY SMILE»», 35604, True ),
( (0x1F63C,  0x61, ), Q«« (😼) CAT FACE WITH WRY SMILE»», 35605, True ),
( (0x1F63C,  0x41, ), Q«« (😼) CAT FACE WITH WRY SMILE»», 35606, True ),
( (0x1F63C,  0x62, ), Q«« (😼) CAT FACE WITH WRY SMILE»», 35607, True ),
( (0x1F63D,  0x21, ), Q«« (😽) KISSING CAT FACE WITH CLOSED EYES»», 35608, True ),
( (0x1F63D,  0x3F, ), Q«« (😽) KISSING CAT FACE WITH CLOSED EYES»», 35609, True ),
( (0x1F63D,  0x61, ), Q«« (😽) KISSING CAT FACE WITH CLOSED EYES»», 35610, True ),
( (0x1F63D,  0x41, ), Q«« (😽) KISSING CAT FACE WITH CLOSED EYES»», 35611, True ),
( (0x1F63D,  0x62, ), Q«« (😽) KISSING CAT FACE WITH CLOSED EYES»», 35612, True ),
( (0x1F63E,  0x21, ), Q«« (😾) POUTING CAT FACE»», 35613, True ),
( (0x1F63E,  0x3F, ), Q«« (😾) POUTING CAT FACE»», 35614, True ),
( (0x1F63E,  0x61, ), Q«« (😾) POUTING CAT FACE»», 35615, True ),
( (0x1F63E,  0x41, ), Q«« (😾) POUTING CAT FACE»», 35616, True ),
( (0x1F63E,  0x62, ), Q«« (😾) POUTING CAT FACE»», 35617, True ),
( (0x1F63F,  0x21, ), Q«« (😿) CRYING CAT FACE»», 35618, True ),
( (0x1F63F,  0x3F, ), Q«« (😿) CRYING CAT FACE»», 35619, True ),
( (0x1F63F,  0x61, ), Q«« (😿) CRYING CAT FACE»», 35620, True ),
( (0x1F63F,  0x41, ), Q«« (😿) CRYING CAT FACE»», 35621, True ),
( (0x1F63F,  0x62, ), Q«« (😿) CRYING CAT FACE»», 35622, True ),
( (0x1F640,  0x21, ), Q«« (🙀) WEARY CAT FACE»», 35623, True ),
( (0x1F640,  0x3F, ), Q«« (🙀) WEARY CAT FACE»», 35624, True ),
( (0x1F640,  0x61, ), Q«« (🙀) WEARY CAT FACE»», 35625, True ),
( (0x1F640,  0x41, ), Q«« (🙀) WEARY CAT FACE»», 35626, True ),
( (0x1F640,  0x62, ), Q«« (🙀) WEARY CAT FACE»», 35627, True ),
( (0x1F641,  0x21, ), Q«« (🙁) SLIGHTLY FROWNING FACE»», 35628, True ),
( (0x1F641,  0x3F, ), Q«« (🙁) SLIGHTLY FROWNING FACE»», 35629, True ),
( (0x1F641,  0x61, ), Q«« (🙁) SLIGHTLY FROWNING FACE»», 35630, True ),
( (0x1F641,  0x41, ), Q«« (🙁) SLIGHTLY FROWNING FACE»», 35631, True ),
( (0x1F641,  0x62, ), Q«« (🙁) SLIGHTLY FROWNING FACE»», 35632, True ),
( (0x1F642,  0x21, ), Q«« (🙂) SLIGHTLY SMILING FACE»», 35633, True ),
( (0x1F642,  0x3F, ), Q«« (🙂) SLIGHTLY SMILING FACE»», 35634, True ),
( (0x1F642,  0x61, ), Q«« (🙂) SLIGHTLY SMILING FACE»», 35635, True ),
( (0x1F642,  0x41, ), Q«« (🙂) SLIGHTLY SMILING FACE»», 35636, True ),
( (0x1F642,  0x62, ), Q«« (🙂) SLIGHTLY SMILING FACE»», 35637, True ),
( (0x1F643,  0x21, ), Q«« (🙃) UPSIDE-DOWN FACE»», 35638, True ),
( (0x1F643,  0x3F, ), Q«« (🙃) UPSIDE-DOWN FACE»», 35639, True ),
( (0x1F643,  0x61, ), Q«« (🙃) UPSIDE-DOWN FACE»», 35640, True ),
( (0x1F643,  0x41, ), Q«« (🙃) UPSIDE-DOWN FACE»», 35641, True ),
( (0x1F643,  0x62, ), Q«« (🙃) UPSIDE-DOWN FACE»», 35642, True ),
( (0x1F644,  0x21, ), Q«« (🙄) FACE WITH ROLLING EYES»», 35643, True ),
( (0x1F644,  0x3F, ), Q«« (🙄) FACE WITH ROLLING EYES»», 35644, True ),
( (0x1F644,  0x61, ), Q«« (🙄) FACE WITH ROLLING EYES»», 35645, True ),
( (0x1F644,  0x41, ), Q«« (🙄) FACE WITH ROLLING EYES»», 35646, True ),
( (0x1F644,  0x62, ), Q«« (🙄) FACE WITH ROLLING EYES»», 35647, True ),
( (0x1F645,  0x21, ), Q«« (🙅) FACE WITH NO GOOD GESTURE»», 35648, True ),
( (0x1F645,  0x3F, ), Q«« (🙅) FACE WITH NO GOOD GESTURE»», 35649, True ),
( (0x1F645,  0x61, ), Q«« (🙅) FACE WITH NO GOOD GESTURE»», 35650, True ),
( (0x1F645,  0x41, ), Q«« (🙅) FACE WITH NO GOOD GESTURE»», 35651, True ),
( (0x1F645,  0x62, ), Q«« (🙅) FACE WITH NO GOOD GESTURE»», 35652, True ),
( (0x1F646,  0x21, ), Q«« (🙆) FACE WITH OK GESTURE»», 35653, True ),
( (0x1F646,  0x3F, ), Q«« (🙆) FACE WITH OK GESTURE»», 35654, True ),
( (0x1F646,  0x61, ), Q«« (🙆) FACE WITH OK GESTURE»», 35655, True ),
( (0x1F646,  0x41, ), Q«« (🙆) FACE WITH OK GESTURE»», 35656, True ),
( (0x1F646,  0x62, ), Q«« (🙆) FACE WITH OK GESTURE»», 35657, True ),
( (0x1F647,  0x21, ), Q«« (🙇) PERSON BOWING DEEPLY»», 35658, True ),
( (0x1F647,  0x3F, ), Q«« (🙇) PERSON BOWING DEEPLY»», 35659, True ),
( (0x1F647,  0x61, ), Q«« (🙇) PERSON BOWING DEEPLY»», 35660, True ),
( (0x1F647,  0x41, ), Q«« (🙇) PERSON BOWING DEEPLY»», 35661, True ),
( (0x1F647,  0x62, ), Q«« (🙇) PERSON BOWING DEEPLY»», 35662, True ),
( (0x1F648,  0x21, ), Q«« (🙈) SEE-NO-EVIL MONKEY»», 35663, True ),
( (0x1F648,  0x3F, ), Q«« (🙈) SEE-NO-EVIL MONKEY»», 35664, True ),
( (0x1F648,  0x61, ), Q«« (🙈) SEE-NO-EVIL MONKEY»», 35665, True ),
( (0x1F648,  0x41, ), Q«« (🙈) SEE-NO-EVIL MONKEY»», 35666, True ),
( (0x1F648,  0x62, ), Q«« (🙈) SEE-NO-EVIL MONKEY»», 35667, True ),
( (0x1F649,  0x21, ), Q«« (🙉) HEAR-NO-EVIL MONKEY»», 35668, True ),
( (0x1F649,  0x3F, ), Q«« (🙉) HEAR-NO-EVIL MONKEY»», 35669, True ),
( (0x1F649,  0x61, ), Q«« (🙉) HEAR-NO-EVIL MONKEY»», 35670, True ),
( (0x1F649,  0x41, ), Q«« (🙉) HEAR-NO-EVIL MONKEY»», 35671, True ),
( (0x1F649,  0x62, ), Q«« (🙉) HEAR-NO-EVIL MONKEY»», 35672, True ),
( (0x1F64A,  0x21, ), Q«« (🙊) SPEAK-NO-EVIL MONKEY»», 35673, True ),
( (0x1F64A,  0x3F, ), Q«« (🙊) SPEAK-NO-EVIL MONKEY»», 35674, True ),
( (0x1F64A,  0x61, ), Q«« (🙊) SPEAK-NO-EVIL MONKEY»», 35675, True ),
( (0x1F64A,  0x41, ), Q«« (🙊) SPEAK-NO-EVIL MONKEY»», 35676, True ),
( (0x1F64A,  0x62, ), Q«« (🙊) SPEAK-NO-EVIL MONKEY»», 35677, True ),
( (0x1F64B,  0x21, ), Q«« (🙋) HAPPY PERSON RAISING ONE HAND»», 35678, True ),
( (0x1F64B,  0x3F, ), Q«« (🙋) HAPPY PERSON RAISING ONE HAND»», 35679, True ),
( (0x1F64B,  0x61, ), Q«« (🙋) HAPPY PERSON RAISING ONE HAND»», 35680, True ),
( (0x1F64B,  0x41, ), Q«« (🙋) HAPPY PERSON RAISING ONE HAND»», 35681, True ),
( (0x1F64B,  0x62, ), Q«« (🙋) HAPPY PERSON RAISING ONE HAND»», 35682, True ),
( (0x1F64C,  0x21, ), Q«« (🙌) PERSON RAISING BOTH HANDS IN CELEBRATION»», 35683, True ),
( (0x1F64C,  0x3F, ), Q«« (🙌) PERSON RAISING BOTH HANDS IN CELEBRATION»», 35684, True ),
( (0x1F64C,  0x61, ), Q«« (🙌) PERSON RAISING BOTH HANDS IN CELEBRATION»», 35685, True ),
( (0x1F64C,  0x41, ), Q«« (🙌) PERSON RAISING BOTH HANDS IN CELEBRATION»», 35686, True ),
( (0x1F64C,  0x62, ), Q«« (🙌) PERSON RAISING BOTH HANDS IN CELEBRATION»», 35687, True ),
( (0x1F64D,  0x21, ), Q«« (🙍) PERSON FROWNING»», 35688, True ),
( (0x1F64D,  0x3F, ), Q«« (🙍) PERSON FROWNING»», 35689, True ),
( (0x1F64D,  0x61, ), Q«« (🙍) PERSON FROWNING»», 35690, True ),
( (0x1F64D,  0x41, ), Q«« (🙍) PERSON FROWNING»», 35691, True ),
( (0x1F64D,  0x62, ), Q«« (🙍) PERSON FROWNING»», 35692, True ),
( (0x1F64E,  0x21, ), Q«« (🙎) PERSON WITH POUTING FACE»», 35693, True ),
( (0x1F64E,  0x3F, ), Q«« (🙎) PERSON WITH POUTING FACE»», 35694, True ),
( (0x1F64E,  0x61, ), Q«« (🙎) PERSON WITH POUTING FACE»», 35695, True ),
( (0x1F64E,  0x41, ), Q«« (🙎) PERSON WITH POUTING FACE»», 35696, True ),
( (0x1F64E,  0x62, ), Q«« (🙎) PERSON WITH POUTING FACE»», 35697, True ),
( (0x1F64F,  0x21, ), Q«« (🙏) PERSON WITH FOLDED HANDS»», 35698, True ),
( (0x1F64F,  0x3F, ), Q«« (🙏) PERSON WITH FOLDED HANDS»», 35699, True ),
( (0x1F64F,  0x61, ), Q«« (🙏) PERSON WITH FOLDED HANDS»», 35700, True ),
( (0x1F64F,  0x41, ), Q«« (🙏) PERSON WITH FOLDED HANDS»», 35701, True ),
( (0x1F64F,  0x62, ), Q«« (🙏) PERSON WITH FOLDED HANDS»», 35702, True ),
( (0x1F650,  0x21, ), Q«« (🙐) NORTH WEST POINTING LEAF»», 35703, True ),
( (0x1F650,  0x3F, ), Q«« (🙐) NORTH WEST POINTING LEAF»», 35704, True ),
( (0x1F650,  0x61, ), Q«« (🙐) NORTH WEST POINTING LEAF»», 35705, True ),
( (0x1F650,  0x41, ), Q«« (🙐) NORTH WEST POINTING LEAF»», 35706, True ),
( (0x1F650,  0x62, ), Q«« (🙐) NORTH WEST POINTING LEAF»», 35707, True ),
( (0x1F651,  0x21, ), Q«« (🙑) SOUTH WEST POINTING LEAF»», 35708, True ),
( (0x1F651,  0x3F, ), Q«« (🙑) SOUTH WEST POINTING LEAF»», 35709, True ),
( (0x1F651,  0x61, ), Q«« (🙑) SOUTH WEST POINTING LEAF»», 35710, True ),
( (0x1F651,  0x41, ), Q«« (🙑) SOUTH WEST POINTING LEAF»», 35711, True ),
( (0x1F651,  0x62, ), Q«« (🙑) SOUTH WEST POINTING LEAF»», 35712, True ),
( (0x1F652,  0x21, ), Q«« (🙒) NORTH EAST POINTING LEAF»», 35713, True ),
( (0x1F652,  0x3F, ), Q«« (🙒) NORTH EAST POINTING LEAF»», 35714, True ),
( (0x1F652,  0x61, ), Q«« (🙒) NORTH EAST POINTING LEAF»», 35715, True ),
( (0x1F652,  0x41, ), Q«« (🙒) NORTH EAST POINTING LEAF»», 35716, True ),
( (0x1F652,  0x62, ), Q«« (🙒) NORTH EAST POINTING LEAF»», 35717, True ),
( (0x1F653,  0x21, ), Q«« (🙓) SOUTH EAST POINTING LEAF»», 35718, True ),
( (0x1F653,  0x3F, ), Q«« (🙓) SOUTH EAST POINTING LEAF»», 35719, True ),
( (0x1F653,  0x61, ), Q«« (🙓) SOUTH EAST POINTING LEAF»», 35720, True ),
( (0x1F653,  0x41, ), Q«« (🙓) SOUTH EAST POINTING LEAF»», 35721, True ),
( (0x1F653,  0x62, ), Q«« (🙓) SOUTH EAST POINTING LEAF»», 35722, True ),
( (0x1F654,  0x21, ), Q«« (🙔) TURNED NORTH WEST POINTING LEAF»», 35723, True ),
( (0x1F654,  0x3F, ), Q«« (🙔) TURNED NORTH WEST POINTING LEAF»», 35724, True ),
( (0x1F654,  0x61, ), Q«« (🙔) TURNED NORTH WEST POINTING LEAF»», 35725, True ),
( (0x1F654,  0x41, ), Q«« (🙔) TURNED NORTH WEST POINTING LEAF»», 35726, True ),
( (0x1F654,  0x62, ), Q«« (🙔) TURNED NORTH WEST POINTING LEAF»», 35727, True ),
( (0x1F655,  0x21, ), Q«« (🙕) TURNED SOUTH WEST POINTING LEAF»», 35728, True ),
( (0x1F655,  0x3F, ), Q«« (🙕) TURNED SOUTH WEST POINTING LEAF»», 35729, True ),
( (0x1F655,  0x61, ), Q«« (🙕) TURNED SOUTH WEST POINTING LEAF»», 35730, True ),
( (0x1F655,  0x41, ), Q«« (🙕) TURNED SOUTH WEST POINTING LEAF»», 35731, True ),
( (0x1F655,  0x62, ), Q«« (🙕) TURNED SOUTH WEST POINTING LEAF»», 35732, True ),
( (0x1F656,  0x21, ), Q«« (🙖) TURNED NORTH EAST POINTING LEAF»», 35733, True ),
( (0x1F656,  0x3F, ), Q«« (🙖) TURNED NORTH EAST POINTING LEAF»», 35734, True ),
( (0x1F656,  0x61, ), Q«« (🙖) TURNED NORTH EAST POINTING LEAF»», 35735, True ),
( (0x1F656,  0x41, ), Q«« (🙖) TURNED NORTH EAST POINTING LEAF»», 35736, True ),
( (0x1F656,  0x62, ), Q«« (🙖) TURNED NORTH EAST POINTING LEAF»», 35737, True ),
( (0x1F657,  0x21, ), Q«« (🙗) TURNED SOUTH EAST POINTING LEAF»», 35738, True ),
( (0x1F657,  0x3F, ), Q«« (🙗) TURNED SOUTH EAST POINTING LEAF»», 35739, True ),
( (0x1F657,  0x61, ), Q«« (🙗) TURNED SOUTH EAST POINTING LEAF»», 35740, True ),
( (0x1F657,  0x41, ), Q«« (🙗) TURNED SOUTH EAST POINTING LEAF»», 35741, True ),
( (0x1F657,  0x62, ), Q«« (🙗) TURNED SOUTH EAST POINTING LEAF»», 35742, True ),
( (0x1F658,  0x21, ), Q«« (🙘) NORTH WEST POINTING VINE LEAF»», 35743, True ),
( (0x1F658,  0x3F, ), Q«« (🙘) NORTH WEST POINTING VINE LEAF»», 35744, True ),
( (0x1F658,  0x61, ), Q«« (🙘) NORTH WEST POINTING VINE LEAF»», 35745, True ),
( (0x1F658,  0x41, ), Q«« (🙘) NORTH WEST POINTING VINE LEAF»», 35746, True ),
( (0x1F658,  0x62, ), Q«« (🙘) NORTH WEST POINTING VINE LEAF»», 35747, True ),
( (0x1F659,  0x21, ), Q«« (🙙) SOUTH WEST POINTING VINE LEAF»», 35748, True ),
( (0x1F659,  0x3F, ), Q«« (🙙) SOUTH WEST POINTING VINE LEAF»», 35749, True ),
( (0x1F659,  0x61, ), Q«« (🙙) SOUTH WEST POINTING VINE LEAF»», 35750, True ),
( (0x1F659,  0x41, ), Q«« (🙙) SOUTH WEST POINTING VINE LEAF»», 35751, True ),
( (0x1F659,  0x62, ), Q«« (🙙) SOUTH WEST POINTING VINE LEAF»», 35752, True ),
( (0x1F65A,  0x21, ), Q«« (🙚) NORTH EAST POINTING VINE LEAF»», 35753, True ),
( (0x1F65A,  0x3F, ), Q«« (🙚) NORTH EAST POINTING VINE LEAF»», 35754, True ),
( (0x1F65A,  0x61, ), Q«« (🙚) NORTH EAST POINTING VINE LEAF»», 35755, True ),
( (0x1F65A,  0x41, ), Q«« (🙚) NORTH EAST POINTING VINE LEAF»», 35756, True ),
( (0x1F65A,  0x62, ), Q«« (🙚) NORTH EAST POINTING VINE LEAF»», 35757, True ),
( (0x1F65B,  0x21, ), Q«« (🙛) SOUTH EAST POINTING VINE LEAF»», 35758, True ),
( (0x1F65B,  0x3F, ), Q«« (🙛) SOUTH EAST POINTING VINE LEAF»», 35759, True ),
( (0x1F65B,  0x61, ), Q«« (🙛) SOUTH EAST POINTING VINE LEAF»», 35760, True ),
( (0x1F65B,  0x41, ), Q«« (🙛) SOUTH EAST POINTING VINE LEAF»», 35761, True ),
( (0x1F65B,  0x62, ), Q«« (🙛) SOUTH EAST POINTING VINE LEAF»», 35762, True ),
( (0x1F65C,  0x21, ), Q«« (🙜) HEAVY NORTH WEST POINTING VINE LEAF»», 35763, True ),
( (0x1F65C,  0x3F, ), Q«« (🙜) HEAVY NORTH WEST POINTING VINE LEAF»», 35764, True ),
( (0x1F65C,  0x61, ), Q«« (🙜) HEAVY NORTH WEST POINTING VINE LEAF»», 35765, True ),
( (0x1F65C,  0x41, ), Q«« (🙜) HEAVY NORTH WEST POINTING VINE LEAF»», 35766, True ),
( (0x1F65C,  0x62, ), Q«« (🙜) HEAVY NORTH WEST POINTING VINE LEAF»», 35767, True ),
( (0x1F65D,  0x21, ), Q«« (🙝) HEAVY SOUTH WEST POINTING VINE LEAF»», 35768, True ),
( (0x1F65D,  0x3F, ), Q«« (🙝) HEAVY SOUTH WEST POINTING VINE LEAF»», 35769, True ),
( (0x1F65D,  0x61, ), Q«« (🙝) HEAVY SOUTH WEST POINTING VINE LEAF»», 35770, True ),
( (0x1F65D,  0x41, ), Q«« (🙝) HEAVY SOUTH WEST POINTING VINE LEAF»», 35771, True ),
( (0x1F65D,  0x62, ), Q«« (🙝) HEAVY SOUTH WEST POINTING VINE LEAF»», 35772, True ),
( (0x1F65E,  0x21, ), Q«« (🙞) HEAVY NORTH EAST POINTING VINE LEAF»», 35773, True ),
( (0x1F65E,  0x3F, ), Q«« (🙞) HEAVY NORTH EAST POINTING VINE LEAF»», 35774, True ),
( (0x1F65E,  0x61, ), Q«« (🙞) HEAVY NORTH EAST POINTING VINE LEAF»», 35775, True ),
( (0x1F65E,  0x41, ), Q«« (🙞) HEAVY NORTH EAST POINTING VINE LEAF»», 35776, True ),
( (0x1F65E,  0x62, ), Q«« (🙞) HEAVY NORTH EAST POINTING VINE LEAF»», 35777, True ),
( (0x1F65F,  0x21, ), Q«« (🙟) HEAVY SOUTH EAST POINTING VINE LEAF»», 35778, True ),
( (0x1F65F,  0x3F, ), Q«« (🙟) HEAVY SOUTH EAST POINTING VINE LEAF»», 35779, True ),
( (0x1F65F,  0x61, ), Q«« (🙟) HEAVY SOUTH EAST POINTING VINE LEAF»», 35780, True ),
( (0x1F65F,  0x41, ), Q«« (🙟) HEAVY SOUTH EAST POINTING VINE LEAF»», 35781, True ),
( (0x1F65F,  0x62, ), Q«« (🙟) HEAVY SOUTH EAST POINTING VINE LEAF»», 35782, True ),
( (0x1F660,  0x21, ), Q«« (🙠) NORTH WEST POINTING BUD»», 35783, True ),
( (0x1F660,  0x3F, ), Q«« (🙠) NORTH WEST POINTING BUD»», 35784, True ),
( (0x1F660,  0x61, ), Q«« (🙠) NORTH WEST POINTING BUD»», 35785, True ),
( (0x1F660,  0x41, ), Q«« (🙠) NORTH WEST POINTING BUD»», 35786, True ),
( (0x1F660,  0x62, ), Q«« (🙠) NORTH WEST POINTING BUD»», 35787, True ),
( (0x1F661,  0x21, ), Q«« (🙡) SOUTH WEST POINTING BUD»», 35788, True ),
( (0x1F661,  0x3F, ), Q«« (🙡) SOUTH WEST POINTING BUD»», 35789, True ),
( (0x1F661,  0x61, ), Q«« (🙡) SOUTH WEST POINTING BUD»», 35790, True ),
( (0x1F661,  0x41, ), Q«« (🙡) SOUTH WEST POINTING BUD»», 35791, True ),
( (0x1F661,  0x62, ), Q«« (🙡) SOUTH WEST POINTING BUD»», 35792, True ),
( (0x1F662,  0x21, ), Q«« (🙢) NORTH EAST POINTING BUD»», 35793, True ),
( (0x1F662,  0x3F, ), Q«« (🙢) NORTH EAST POINTING BUD»», 35794, True ),
( (0x1F662,  0x61, ), Q«« (🙢) NORTH EAST POINTING BUD»», 35795, True ),
( (0x1F662,  0x41, ), Q«« (🙢) NORTH EAST POINTING BUD»», 35796, True ),
( (0x1F662,  0x62, ), Q«« (🙢) NORTH EAST POINTING BUD»», 35797, True ),
( (0x1F663,  0x21, ), Q«« (🙣) SOUTH EAST POINTING BUD»», 35798, True ),
( (0x1F663,  0x3F, ), Q«« (🙣) SOUTH EAST POINTING BUD»», 35799, True ),
( (0x1F663,  0x61, ), Q«« (🙣) SOUTH EAST POINTING BUD»», 35800, True ),
( (0x1F663,  0x41, ), Q«« (🙣) SOUTH EAST POINTING BUD»», 35801, True ),
( (0x1F663,  0x62, ), Q«« (🙣) SOUTH EAST POINTING BUD»», 35802, True ),
( (0x1F664,  0x21, ), Q«« (🙤) HEAVY NORTH WEST POINTING BUD»», 35803, True ),
( (0x1F664,  0x3F, ), Q«« (🙤) HEAVY NORTH WEST POINTING BUD»», 35804, True ),
( (0x1F664,  0x61, ), Q«« (🙤) HEAVY NORTH WEST POINTING BUD»», 35805, True ),
( (0x1F664,  0x41, ), Q«« (🙤) HEAVY NORTH WEST POINTING BUD»», 35806, True ),
( (0x1F664,  0x62, ), Q«« (🙤) HEAVY NORTH WEST POINTING BUD»», 35807, True ),
( (0x1F665,  0x21, ), Q«« (🙥) HEAVY SOUTH WEST POINTING BUD»», 35808, True ),
( (0x1F665,  0x3F, ), Q«« (🙥) HEAVY SOUTH WEST POINTING BUD»», 35809, True ),
( (0x1F665,  0x61, ), Q«« (🙥) HEAVY SOUTH WEST POINTING BUD»», 35810, True ),
( (0x1F665,  0x41, ), Q«« (🙥) HEAVY SOUTH WEST POINTING BUD»», 35811, True ),
( (0x1F665,  0x62, ), Q«« (🙥) HEAVY SOUTH WEST POINTING BUD»», 35812, True ),
( (0x1F666,  0x21, ), Q«« (🙦) HEAVY NORTH EAST POINTING BUD»», 35813, True ),
( (0x1F666,  0x3F, ), Q«« (🙦) HEAVY NORTH EAST POINTING BUD»», 35814, True ),
( (0x1F666,  0x61, ), Q«« (🙦) HEAVY NORTH EAST POINTING BUD»», 35815, True ),
( (0x1F666,  0x41, ), Q«« (🙦) HEAVY NORTH EAST POINTING BUD»», 35816, True ),
( (0x1F666,  0x62, ), Q«« (🙦) HEAVY NORTH EAST POINTING BUD»», 35817, True ),
( (0x1F667,  0x21, ), Q«« (🙧) HEAVY SOUTH EAST POINTING BUD»», 35818, True ),
( (0x1F667,  0x3F, ), Q«« (🙧) HEAVY SOUTH EAST POINTING BUD»», 35819, True ),
( (0x1F667,  0x61, ), Q«« (🙧) HEAVY SOUTH EAST POINTING BUD»», 35820, True ),
( (0x1F667,  0x41, ), Q«« (🙧) HEAVY SOUTH EAST POINTING BUD»», 35821, True ),
( (0x1F667,  0x62, ), Q«« (🙧) HEAVY SOUTH EAST POINTING BUD»», 35822, True ),
( (0x1F668,  0x21, ), Q«« (🙨) HOLLOW QUILT SQUARE ORNAMENT»», 35823, True ),
( (0x1F668,  0x3F, ), Q«« (🙨) HOLLOW QUILT SQUARE ORNAMENT»», 35824, True ),
( (0x1F668,  0x61, ), Q«« (🙨) HOLLOW QUILT SQUARE ORNAMENT»», 35825, True ),
( (0x1F668,  0x41, ), Q«« (🙨) HOLLOW QUILT SQUARE ORNAMENT»», 35826, True ),
( (0x1F668,  0x62, ), Q«« (🙨) HOLLOW QUILT SQUARE ORNAMENT»», 35827, True ),
( (0x1F669,  0x21, ), Q«« (🙩) HOLLOW QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35828, True ),
( (0x1F669,  0x3F, ), Q«« (🙩) HOLLOW QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35829, True ),
( (0x1F669,  0x61, ), Q«« (🙩) HOLLOW QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35830, True ),
( (0x1F669,  0x41, ), Q«« (🙩) HOLLOW QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35831, True ),
( (0x1F669,  0x62, ), Q«« (🙩) HOLLOW QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35832, True ),
( (0x1F66A,  0x21, ), Q«« (🙪) SOLID QUILT SQUARE ORNAMENT»», 35833, True ),
( (0x1F66A,  0x3F, ), Q«« (🙪) SOLID QUILT SQUARE ORNAMENT»», 35834, True ),
( (0x1F66A,  0x61, ), Q«« (🙪) SOLID QUILT SQUARE ORNAMENT»», 35835, True ),
( (0x1F66A,  0x41, ), Q«« (🙪) SOLID QUILT SQUARE ORNAMENT»», 35836, True ),
( (0x1F66A,  0x62, ), Q«« (🙪) SOLID QUILT SQUARE ORNAMENT»», 35837, True ),
( (0x1F66B,  0x21, ), Q«« (🙫) SOLID QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35838, True ),
( (0x1F66B,  0x3F, ), Q«« (🙫) SOLID QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35839, True ),
( (0x1F66B,  0x61, ), Q«« (🙫) SOLID QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35840, True ),
( (0x1F66B,  0x41, ), Q«« (🙫) SOLID QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35841, True ),
( (0x1F66B,  0x62, ), Q«« (🙫) SOLID QUILT SQUARE ORNAMENT IN BLACK SQUARE»», 35842, True ),
( (0x1F66C,  0x21, ), Q«« (🙬) LEFTWARDS ROCKET»», 35843, True ),
( (0x1F66C,  0x3F, ), Q«« (🙬) LEFTWARDS ROCKET»», 35844, True ),
( (0x1F66C,  0x61, ), Q«« (🙬) LEFTWARDS ROCKET»», 35845, True ),
( (0x1F66C,  0x41, ), Q«« (🙬) LEFTWARDS ROCKET»», 35846, True ),
( (0x1F66C,  0x62, ), Q«« (🙬) LEFTWARDS ROCKET»», 35847, True ),
( (0x1F66D,  0x21, ), Q«« (🙭) UPWARDS ROCKET»», 35848, True ),
( (0x1F66D,  0x3F, ), Q«« (🙭) UPWARDS ROCKET»», 35849, True ),
( (0x1F66D,  0x61, ), Q«« (🙭) UPWARDS ROCKET»», 35850, True ),
( (0x1F66D,  0x41, ), Q«« (🙭) UPWARDS ROCKET»», 35851, True ),
( (0x1F66D,  0x62, ), Q«« (🙭) UPWARDS ROCKET»», 35852, True ),
( (0x1F66E,  0x21, ), Q«« (🙮) RIGHTWARDS ROCKET»», 35853, True ),
( (0x1F66E,  0x3F, ), Q«« (🙮) RIGHTWARDS ROCKET»», 35854, True ),
( (0x1F66E,  0x61, ), Q«« (🙮) RIGHTWARDS ROCKET»», 35855, True ),
( (0x1F66E,  0x41, ), Q«« (🙮) RIGHTWARDS ROCKET»», 35856, True ),
( (0x1F66E,  0x62, ), Q«« (🙮) RIGHTWARDS ROCKET»», 35857, True ),
( (0x1F66F,  0x21, ), Q«« (🙯) DOWNWARDS ROCKET»», 35858, True ),
( (0x1F66F,  0x3F, ), Q«« (🙯) DOWNWARDS ROCKET»», 35859, True ),
( (0x1F66F,  0x61, ), Q«« (🙯) DOWNWARDS ROCKET»», 35860, True ),
( (0x1F66F,  0x41, ), Q«« (🙯) DOWNWARDS ROCKET»», 35861, True ),
( (0x1F66F,  0x62, ), Q«« (🙯) DOWNWARDS ROCKET»», 35862, True ),
( (0x1F670,  0x21, ), Q«« (🙰) SCRIPT LIGATURE ET ORNAMENT»», 35863, True ),
( (0x1F670,  0x3F, ), Q«« (🙰) SCRIPT LIGATURE ET ORNAMENT»», 35864, True ),
( (0x1F670,  0x61, ), Q«« (🙰) SCRIPT LIGATURE ET ORNAMENT»», 35865, True ),
( (0x1F670,  0x41, ), Q«« (🙰) SCRIPT LIGATURE ET ORNAMENT»», 35866, True ),
( (0x1F670,  0x62, ), Q«« (🙰) SCRIPT LIGATURE ET ORNAMENT»», 35867, True ),
( (0x1F671,  0x21, ), Q«« (🙱) HEAVY SCRIPT LIGATURE ET ORNAMENT»», 35868, True ),
( (0x1F671,  0x3F, ), Q«« (🙱) HEAVY SCRIPT LIGATURE ET ORNAMENT»», 35869, True ),
( (0x1F671,  0x61, ), Q«« (🙱) HEAVY SCRIPT LIGATURE ET ORNAMENT»», 35870, True ),
( (0x1F671,  0x41, ), Q«« (🙱) HEAVY SCRIPT LIGATURE ET ORNAMENT»», 35871, True ),
( (0x1F671,  0x62, ), Q«« (🙱) HEAVY SCRIPT LIGATURE ET ORNAMENT»», 35872, True ),
( (0x1F672,  0x21, ), Q«« (🙲) LIGATURE OPEN ET ORNAMENT»», 35873, True ),
( (0x1F672,  0x3F, ), Q«« (🙲) LIGATURE OPEN ET ORNAMENT»», 35874, True ),
( (0x1F672,  0x61, ), Q«« (🙲) LIGATURE OPEN ET ORNAMENT»», 35875, True ),
( (0x1F672,  0x41, ), Q«« (🙲) LIGATURE OPEN ET ORNAMENT»», 35876, True ),
( (0x1F672,  0x62, ), Q«« (🙲) LIGATURE OPEN ET ORNAMENT»», 35877, True ),
( (0x1F673,  0x21, ), Q«« (🙳) HEAVY LIGATURE OPEN ET ORNAMENT»», 35878, True ),
( (0x1F673,  0x3F, ), Q«« (🙳) HEAVY LIGATURE OPEN ET ORNAMENT»», 35879, True ),
( (0x1F673,  0x61, ), Q«« (🙳) HEAVY LIGATURE OPEN ET ORNAMENT»», 35880, True ),
( (0x1F673,  0x41, ), Q«« (🙳) HEAVY LIGATURE OPEN ET ORNAMENT»», 35881, True ),
( (0x1F673,  0x62, ), Q«« (🙳) HEAVY LIGATURE OPEN ET ORNAMENT»», 35882, True ),
( (0x1F674,  0x21, ), Q«« (🙴) HEAVY AMPERSAND ORNAMENT»», 35883, True ),
( (0x1F674,  0x3F, ), Q«« (🙴) HEAVY AMPERSAND ORNAMENT»», 35884, True ),
( (0x1F674,  0x61, ), Q«« (🙴) HEAVY AMPERSAND ORNAMENT»», 35885, True ),
( (0x1F674,  0x41, ), Q«« (🙴) HEAVY AMPERSAND ORNAMENT»», 35886, True ),
( (0x1F674,  0x62, ), Q«« (🙴) HEAVY AMPERSAND ORNAMENT»», 35887, True ),
( (0x1F675,  0x21, ), Q«« (🙵) SWASH AMPERSAND ORNAMENT»», 35888, True ),
( (0x1F675,  0x3F, ), Q«« (🙵) SWASH AMPERSAND ORNAMENT»», 35889, True ),
( (0x1F675,  0x61, ), Q«« (🙵) SWASH AMPERSAND ORNAMENT»», 35890, True ),
( (0x1F675,  0x41, ), Q«« (🙵) SWASH AMPERSAND ORNAMENT»», 35891, True ),
( (0x1F675,  0x62, ), Q«« (🙵) SWASH AMPERSAND ORNAMENT»», 35892, True ),
( (0x1F676,  0x21, ), Q«« (🙶) SANS-SERIF HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT»», 35893, True ),
( (0x1F676,  0x3F, ), Q«« (🙶) SANS-SERIF HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT»», 35894, True ),
( (0x1F676,  0x61, ), Q«« (🙶) SANS-SERIF HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT»», 35895, True ),
( (0x1F676,  0x41, ), Q«« (🙶) SANS-SERIF HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT»», 35896, True ),
( (0x1F676,  0x62, ), Q«« (🙶) SANS-SERIF HEAVY DOUBLE TURNED COMMA QUOTATION MARK ORNAMENT»», 35897, True ),
( (0x1F677,  0x21, ), Q«« (🙷) SANS-SERIF HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35898, True ),
( (0x1F677,  0x3F, ), Q«« (🙷) SANS-SERIF HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35899, True ),
( (0x1F677,  0x61, ), Q«« (🙷) SANS-SERIF HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35900, True ),
( (0x1F677,  0x41, ), Q«« (🙷) SANS-SERIF HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35901, True ),
( (0x1F677,  0x62, ), Q«« (🙷) SANS-SERIF HEAVY DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35902, True ),
( (0x1F678,  0x21, ), Q«« (🙸) SANS-SERIF HEAVY LOW DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35903, True ),
( (0x1F678,  0x3F, ), Q«« (🙸) SANS-SERIF HEAVY LOW DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35904, True ),
( (0x1F678,  0x61, ), Q«« (🙸) SANS-SERIF HEAVY LOW DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35905, True ),
( (0x1F678,  0x41, ), Q«« (🙸) SANS-SERIF HEAVY LOW DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35906, True ),
( (0x1F678,  0x62, ), Q«« (🙸) SANS-SERIF HEAVY LOW DOUBLE COMMA QUOTATION MARK ORNAMENT»», 35907, True ),
( (0x1F679,  0x21, ), Q«« (🙹) HEAVY INTERROBANG ORNAMENT»», 35908, True ),
( (0x1F679,  0x3F, ), Q«« (🙹) HEAVY INTERROBANG ORNAMENT»», 35909, True ),
( (0x1F679,  0x61, ), Q«« (🙹) HEAVY INTERROBANG ORNAMENT»», 35910, True ),
( (0x1F679,  0x41, ), Q«« (🙹) HEAVY INTERROBANG ORNAMENT»», 35911, True ),
( (0x1F679,  0x62, ), Q«« (🙹) HEAVY INTERROBANG ORNAMENT»», 35912, True ),
( (0x1F67A,  0x21, ), Q«« (🙺) SANS-SERIF INTERROBANG ORNAMENT»», 35913, True ),
( (0x1F67A,  0x3F, ), Q«« (🙺) SANS-SERIF INTERROBANG ORNAMENT»», 35914, True ),
( (0x1F67A,  0x61, ), Q«« (🙺) SANS-SERIF INTERROBANG ORNAMENT»», 35915, True ),
( (0x1F67A,  0x41, ), Q«« (🙺) SANS-SERIF INTERROBANG ORNAMENT»», 35916, True ),
( (0x1F67A,  0x62, ), Q«« (🙺) SANS-SERIF INTERROBANG ORNAMENT»», 35917, True ),
( (0x1F67B,  0x21, ), Q«« (🙻) HEAVY SANS-SERIF INTERROBANG ORNAMENT»», 35918, True ),
( (0x1F67B,  0x3F, ), Q«« (🙻) HEAVY SANS-SERIF INTERROBANG ORNAMENT»», 35919, True ),
( (0x1F67B,  0x61, ), Q«« (🙻) HEAVY SANS-SERIF INTERROBANG ORNAMENT»», 35920, True ),
( (0x1F67B,  0x41, ), Q«« (🙻) HEAVY SANS-SERIF INTERROBANG ORNAMENT»», 35921, True ),
( (0x1F67B,  0x62, ), Q«« (🙻) HEAVY SANS-SERIF INTERROBANG ORNAMENT»», 35922, True ),
( (0x1F67C,  0x21, ), Q«« (🙼) VERY HEAVY SOLIDUS»», 35923, True ),
( (0x1F67C,  0x3F, ), Q«« (🙼) VERY HEAVY SOLIDUS»», 35924, True ),
( (0x1F67C,  0x61, ), Q«« (🙼) VERY HEAVY SOLIDUS»», 35925, True ),
( (0x1F67C,  0x41, ), Q«« (🙼) VERY HEAVY SOLIDUS»», 35926, True ),
( (0x1F67C,  0x62, ), Q«« (🙼) VERY HEAVY SOLIDUS»», 35927, True ),
( (0x1F67D,  0x21, ), Q«« (🙽) VERY HEAVY REVERSE SOLIDUS»», 35928, True ),
( (0x1F67D,  0x3F, ), Q«« (🙽) VERY HEAVY REVERSE SOLIDUS»», 35929, True ),
( (0x1F67D,  0x61, ), Q«« (🙽) VERY HEAVY REVERSE SOLIDUS»», 35930, True ),
( (0x1F67D,  0x41, ), Q«« (🙽) VERY HEAVY REVERSE SOLIDUS»», 35931, True ),
( (0x1F67D,  0x62, ), Q«« (🙽) VERY HEAVY REVERSE SOLIDUS»», 35932, True ),
( (0x1F67E,  0x21, ), Q«« (🙾) CHECKER BOARD»», 35933, True ),
( (0x1F67E,  0x3F, ), Q«« (🙾) CHECKER BOARD»», 35934, True ),
( (0x1F67E,  0x61, ), Q«« (🙾) CHECKER BOARD»», 35935, True ),
( (0x1F67E,  0x41, ), Q«« (🙾) CHECKER BOARD»», 35936, True ),
( (0x1F67E,  0x62, ), Q«« (🙾) CHECKER BOARD»», 35937, True ),
( (0x1F67F,  0x21, ), Q«« (🙿) REVERSE CHECKER BOARD»», 35938, True ),
( (0x1F67F,  0x3F, ), Q«« (🙿) REVERSE CHECKER BOARD»», 35939, True ),
( (0x1F67F,  0x61, ), Q«« (🙿) REVERSE CHECKER BOARD»», 35940, True ),
( (0x1F67F,  0x41, ), Q«« (🙿) REVERSE CHECKER BOARD»», 35941, True ),
( (0x1F67F,  0x62, ), Q«« (🙿) REVERSE CHECKER BOARD»», 35942, True ),
( (0x1F680,  0x21, ), Q«« (🚀) ROCKET»», 35943, True ),
( (0x1F680,  0x3F, ), Q«« (🚀) ROCKET»», 35944, True ),
( (0x1F680,  0x61, ), Q«« (🚀) ROCKET»», 35945, True ),
( (0x1F680,  0x41, ), Q«« (🚀) ROCKET»», 35946, True ),
( (0x1F680,  0x62, ), Q«« (🚀) ROCKET»», 35947, True ),
( (0x1F681,  0x21, ), Q«« (🚁) HELICOPTER»», 35948, True ),
( (0x1F681,  0x3F, ), Q«« (🚁) HELICOPTER»», 35949, True ),
( (0x1F681,  0x61, ), Q«« (🚁) HELICOPTER»», 35950, True ),
( (0x1F681,  0x41, ), Q«« (🚁) HELICOPTER»», 35951, True ),
( (0x1F681,  0x62, ), Q«« (🚁) HELICOPTER»», 35952, True ),
( (0x1F682,  0x21, ), Q«« (🚂) STEAM LOCOMOTIVE»», 35953, True ),
( (0x1F682,  0x3F, ), Q«« (🚂) STEAM LOCOMOTIVE»», 35954, True ),
( (0x1F682,  0x61, ), Q«« (🚂) STEAM LOCOMOTIVE»», 35955, True ),
( (0x1F682,  0x41, ), Q«« (🚂) STEAM LOCOMOTIVE»», 35956, True ),
( (0x1F682,  0x62, ), Q«« (🚂) STEAM LOCOMOTIVE»», 35957, True ),
( (0x1F683,  0x21, ), Q«« (🚃) RAILWAY CAR»», 35958, True ),
( (0x1F683,  0x3F, ), Q«« (🚃) RAILWAY CAR»», 35959, True ),
( (0x1F683,  0x61, ), Q«« (🚃) RAILWAY CAR»», 35960, True ),
( (0x1F683,  0x41, ), Q«« (🚃) RAILWAY CAR»», 35961, True ),
( (0x1F683,  0x62, ), Q«« (🚃) RAILWAY CAR»», 35962, True ),
( (0x1F684,  0x21, ), Q«« (🚄) HIGH-SPEED TRAIN»», 35963, True ),
( (0x1F684,  0x3F, ), Q«« (🚄) HIGH-SPEED TRAIN»», 35964, True ),
( (0x1F684,  0x61, ), Q«« (🚄) HIGH-SPEED TRAIN»», 35965, True ),
( (0x1F684,  0x41, ), Q«« (🚄) HIGH-SPEED TRAIN»», 35966, True ),
( (0x1F684,  0x62, ), Q«« (🚄) HIGH-SPEED TRAIN»», 35967, True ),
( (0x1F685,  0x21, ), Q«« (🚅) HIGH-SPEED TRAIN WITH BULLET NOSE»», 35968, True ),
( (0x1F685,  0x3F, ), Q«« (🚅) HIGH-SPEED TRAIN WITH BULLET NOSE»», 35969, True ),
( (0x1F685,  0x61, ), Q«« (🚅) HIGH-SPEED TRAIN WITH BULLET NOSE»», 35970, True ),
( (0x1F685,  0x41, ), Q«« (🚅) HIGH-SPEED TRAIN WITH BULLET NOSE»», 35971, True ),
( (0x1F685,  0x62, ), Q«« (🚅) HIGH-SPEED TRAIN WITH BULLET NOSE»», 35972, True ),
( (0x1F686,  0x21, ), Q«« (🚆) TRAIN»», 35973, True ),
( (0x1F686,  0x3F, ), Q«« (🚆) TRAIN»», 35974, True ),
( (0x1F686,  0x61, ), Q«« (🚆) TRAIN»», 35975, True ),
( (0x1F686,  0x41, ), Q«« (🚆) TRAIN»», 35976, True ),
( (0x1F686,  0x62, ), Q«« (🚆) TRAIN»», 35977, True ),
( (0x1F687,  0x21, ), Q«« (🚇) METRO»», 35978, True ),
( (0x1F687,  0x3F, ), Q«« (🚇) METRO»», 35979, True ),
( (0x1F687,  0x61, ), Q«« (🚇) METRO»», 35980, True ),
( (0x1F687,  0x41, ), Q«« (🚇) METRO»», 35981, True ),
( (0x1F687,  0x62, ), Q«« (🚇) METRO»», 35982, True ),
( (0x1F688,  0x21, ), Q«« (🚈) LIGHT RAIL»», 35983, True ),
( (0x1F688,  0x3F, ), Q«« (🚈) LIGHT RAIL»», 35984, True ),
( (0x1F688,  0x61, ), Q«« (🚈) LIGHT RAIL»», 35985, True ),
( (0x1F688,  0x41, ), Q«« (🚈) LIGHT RAIL»», 35986, True ),
( (0x1F688,  0x62, ), Q«« (🚈) LIGHT RAIL»», 35987, True ),
( (0x1F689,  0x21, ), Q«« (🚉) STATION»», 35988, True ),
( (0x1F689,  0x3F, ), Q«« (🚉) STATION»», 35989, True ),
( (0x1F689,  0x61, ), Q«« (🚉) STATION»», 35990, True ),
( (0x1F689,  0x41, ), Q«« (🚉) STATION»», 35991, True ),
( (0x1F689,  0x62, ), Q«« (🚉) STATION»», 35992, True ),
( (0x1F68A,  0x21, ), Q«« (🚊) TRAM»», 35993, True ),
( (0x1F68A,  0x3F, ), Q«« (🚊) TRAM»», 35994, True ),
( (0x1F68A,  0x61, ), Q«« (🚊) TRAM»», 35995, True ),
( (0x1F68A,  0x41, ), Q«« (🚊) TRAM»», 35996, True ),
( (0x1F68A,  0x62, ), Q«« (🚊) TRAM»», 35997, True ),
( (0x1F68B,  0x21, ), Q«« (🚋) TRAM CAR»», 35998, True ),
( (0x1F68B,  0x3F, ), Q«« (🚋) TRAM CAR»», 35999, True ),
( (0x1F68B,  0x61, ), Q«« (🚋) TRAM CAR»», 36000, True ),
( (0x1F68B,  0x41, ), Q«« (🚋) TRAM CAR»», 36001, True ),
( (0x1F68B,  0x62, ), Q«« (🚋) TRAM CAR»», 36002, True ),
( (0x1F68C,  0x21, ), Q«« (🚌) BUS»», 36003, True ),
( (0x1F68C,  0x3F, ), Q«« (🚌) BUS»», 36004, True ),
( (0x1F68C,  0x61, ), Q«« (🚌) BUS»», 36005, True ),
( (0x1F68C,  0x41, ), Q«« (🚌) BUS»», 36006, True ),
( (0x1F68C,  0x62, ), Q«« (🚌) BUS»», 36007, True ),
( (0x1F68D,  0x21, ), Q«« (🚍) ONCOMING BUS»», 36008, True ),
( (0x1F68D,  0x3F, ), Q«« (🚍) ONCOMING BUS»», 36009, True ),
( (0x1F68D,  0x61, ), Q«« (🚍) ONCOMING BUS»», 36010, True ),
( (0x1F68D,  0x41, ), Q«« (🚍) ONCOMING BUS»», 36011, True ),
( (0x1F68D,  0x62, ), Q«« (🚍) ONCOMING BUS»», 36012, True ),
( (0x1F68E,  0x21, ), Q«« (🚎) TROLLEYBUS»», 36013, True ),
( (0x1F68E,  0x3F, ), Q«« (🚎) TROLLEYBUS»», 36014, True ),
( (0x1F68E,  0x61, ), Q«« (🚎) TROLLEYBUS»», 36015, True ),
( (0x1F68E,  0x41, ), Q«« (🚎) TROLLEYBUS»», 36016, True ),
( (0x1F68E,  0x62, ), Q«« (🚎) TROLLEYBUS»», 36017, True ),
( (0x1F68F,  0x21, ), Q«« (🚏) BUS STOP»», 36018, True ),
( (0x1F68F,  0x3F, ), Q«« (🚏) BUS STOP»», 36019, True ),
( (0x1F68F,  0x61, ), Q«« (🚏) BUS STOP»», 36020, True ),
( (0x1F68F,  0x41, ), Q«« (🚏) BUS STOP»», 36021, True ),
( (0x1F68F,  0x62, ), Q«« (🚏) BUS STOP»», 36022, True ),
( (0x1F690,  0x21, ), Q«« (🚐) MINIBUS»», 36023, True ),
( (0x1F690,  0x3F, ), Q«« (🚐) MINIBUS»», 36024, True ),
( (0x1F690,  0x61, ), Q«« (🚐) MINIBUS»», 36025, True ),
( (0x1F690,  0x41, ), Q«« (🚐) MINIBUS»», 36026, True ),
( (0x1F690,  0x62, ), Q«« (🚐) MINIBUS»», 36027, True ),
( (0x1F691,  0x21, ), Q«« (🚑) AMBULANCE»», 36028, True ),
( (0x1F691,  0x3F, ), Q«« (🚑) AMBULANCE»», 36029, True ),
( (0x1F691,  0x61, ), Q«« (🚑) AMBULANCE»», 36030, True ),
( (0x1F691,  0x41, ), Q«« (🚑) AMBULANCE»», 36031, True ),
( (0x1F691,  0x62, ), Q«« (🚑) AMBULANCE»», 36032, True ),
( (0x1F692,  0x21, ), Q«« (🚒) FIRE ENGINE»», 36033, True ),
( (0x1F692,  0x3F, ), Q«« (🚒) FIRE ENGINE»», 36034, True ),
( (0x1F692,  0x61, ), Q«« (🚒) FIRE ENGINE»», 36035, True ),
( (0x1F692,  0x41, ), Q«« (🚒) FIRE ENGINE»», 36036, True ),
( (0x1F692,  0x62, ), Q«« (🚒) FIRE ENGINE»», 36037, True ),
( (0x1F693,  0x21, ), Q«« (🚓) POLICE CAR»», 36038, True ),
( (0x1F693,  0x3F, ), Q«« (🚓) POLICE CAR»», 36039, True ),
( (0x1F693,  0x61, ), Q«« (🚓) POLICE CAR»», 36040, True ),
( (0x1F693,  0x41, ), Q«« (🚓) POLICE CAR»», 36041, True ),
( (0x1F693,  0x62, ), Q«« (🚓) POLICE CAR»», 36042, True ),
( (0x1F694,  0x21, ), Q«« (🚔) ONCOMING POLICE CAR»», 36043, True ),
( (0x1F694,  0x3F, ), Q«« (🚔) ONCOMING POLICE CAR»», 36044, True ),
( (0x1F694,  0x61, ), Q«« (🚔) ONCOMING POLICE CAR»», 36045, True ),
( (0x1F694,  0x41, ), Q«« (🚔) ONCOMING POLICE CAR»», 36046, True ),
( (0x1F694,  0x62, ), Q«« (🚔) ONCOMING POLICE CAR»», 36047, True ),
( (0x1F695,  0x21, ), Q«« (🚕) TAXI»», 36048, True ),
( (0x1F695,  0x3F, ), Q«« (🚕) TAXI»», 36049, True ),
( (0x1F695,  0x61, ), Q«« (🚕) TAXI»», 36050, True ),
( (0x1F695,  0x41, ), Q«« (🚕) TAXI»», 36051, True ),
( (0x1F695,  0x62, ), Q«« (🚕) TAXI»», 36052, True ),
( (0x1F696,  0x21, ), Q«« (🚖) ONCOMING TAXI»», 36053, True ),
( (0x1F696,  0x3F, ), Q«« (🚖) ONCOMING TAXI»», 36054, True ),
( (0x1F696,  0x61, ), Q«« (🚖) ONCOMING TAXI»», 36055, True ),
( (0x1F696,  0x41, ), Q«« (🚖) ONCOMING TAXI»», 36056, True ),
( (0x1F696,  0x62, ), Q«« (🚖) ONCOMING TAXI»», 36057, True ),
( (0x1F697,  0x21, ), Q«« (🚗) AUTOMOBILE»», 36058, True ),
( (0x1F697,  0x3F, ), Q«« (🚗) AUTOMOBILE»», 36059, True ),
( (0x1F697,  0x61, ), Q«« (🚗) AUTOMOBILE»», 36060, True ),
( (0x1F697,  0x41, ), Q«« (🚗) AUTOMOBILE»», 36061, True ),
( (0x1F697,  0x62, ), Q«« (🚗) AUTOMOBILE»», 36062, True ),
( (0x1F698,  0x21, ), Q«« (🚘) ONCOMING AUTOMOBILE»», 36063, True ),
( (0x1F698,  0x3F, ), Q«« (🚘) ONCOMING AUTOMOBILE»», 36064, True ),
( (0x1F698,  0x61, ), Q«« (🚘) ONCOMING AUTOMOBILE»», 36065, True ),
( (0x1F698,  0x41, ), Q«« (🚘) ONCOMING AUTOMOBILE»», 36066, True ),
( (0x1F698,  0x62, ), Q«« (🚘) ONCOMING AUTOMOBILE»», 36067, True ),
( (0x1F699,  0x21, ), Q«« (🚙) RECREATIONAL VEHICLE»», 36068, True ),
( (0x1F699,  0x3F, ), Q«« (🚙) RECREATIONAL VEHICLE»», 36069, True ),
( (0x1F699,  0x61, ), Q«« (🚙) RECREATIONAL VEHICLE»», 36070, True ),
( (0x1F699,  0x41, ), Q«« (🚙) RECREATIONAL VEHICLE»», 36071, True ),
( (0x1F699,  0x62, ), Q«« (🚙) RECREATIONAL VEHICLE»», 36072, True ),
( (0x1F69A,  0x21, ), Q«« (🚚) DELIVERY TRUCK»», 36073, True ),
( (0x1F69A,  0x3F, ), Q«« (🚚) DELIVERY TRUCK»», 36074, True ),
( (0x1F69A,  0x61, ), Q«« (🚚) DELIVERY TRUCK»», 36075, True ),
( (0x1F69A,  0x41, ), Q«« (🚚) DELIVERY TRUCK»», 36076, True ),
( (0x1F69A,  0x62, ), Q«« (🚚) DELIVERY TRUCK»», 36077, True ),
( (0x1F69B,  0x21, ), Q«« (🚛) ARTICULATED LORRY»», 36078, True ),
( (0x1F69B,  0x3F, ), Q«« (🚛) ARTICULATED LORRY»», 36079, True ),
( (0x1F69B,  0x61, ), Q«« (🚛) ARTICULATED LORRY»», 36080, True ),
( (0x1F69B,  0x41, ), Q«« (🚛) ARTICULATED LORRY»», 36081, True ),
( (0x1F69B,  0x62, ), Q«« (🚛) ARTICULATED LORRY»», 36082, True ),
( (0x1F69C,  0x21, ), Q«« (🚜) TRACTOR»», 36083, True ),
( (0x1F69C,  0x3F, ), Q«« (🚜) TRACTOR»», 36084, True ),
( (0x1F69C,  0x61, ), Q«« (🚜) TRACTOR»», 36085, True ),
( (0x1F69C,  0x41, ), Q«« (🚜) TRACTOR»», 36086, True ),
( (0x1F69C,  0x62, ), Q«« (🚜) TRACTOR»», 36087, True ),
( (0x1F69D,  0x21, ), Q«« (🚝) MONORAIL»», 36088, True ),
( (0x1F69D,  0x3F, ), Q«« (🚝) MONORAIL»», 36089, True ),
( (0x1F69D,  0x61, ), Q«« (🚝) MONORAIL»», 36090, True ),
( (0x1F69D,  0x41, ), Q«« (🚝) MONORAIL»», 36091, True ),
( (0x1F69D,  0x62, ), Q«« (🚝) MONORAIL»», 36092, True ),
( (0x1F69E,  0x21, ), Q«« (🚞) MOUNTAIN RAILWAY»», 36093, True ),
( (0x1F69E,  0x3F, ), Q«« (🚞) MOUNTAIN RAILWAY»», 36094, True ),
( (0x1F69E,  0x61, ), Q«« (🚞) MOUNTAIN RAILWAY»», 36095, True ),
( (0x1F69E,  0x41, ), Q«« (🚞) MOUNTAIN RAILWAY»», 36096, True ),
( (0x1F69E,  0x62, ), Q«« (🚞) MOUNTAIN RAILWAY»», 36097, True ),
( (0x1F69F,  0x21, ), Q«« (🚟) SUSPENSION RAILWAY»», 36098, True ),
( (0x1F69F,  0x3F, ), Q«« (🚟) SUSPENSION RAILWAY»», 36099, True ),
( (0x1F69F,  0x61, ), Q«« (🚟) SUSPENSION RAILWAY»», 36100, True ),
( (0x1F69F,  0x41, ), Q«« (🚟) SUSPENSION RAILWAY»», 36101, True ),
( (0x1F69F,  0x62, ), Q«« (🚟) SUSPENSION RAILWAY»», 36102, True ),
( (0x1F6A0,  0x21, ), Q«« (🚠) MOUNTAIN CABLEWAY»», 36103, True ),
( (0x1F6A0,  0x3F, ), Q«« (🚠) MOUNTAIN CABLEWAY»», 36104, True ),
( (0x1F6A0,  0x61, ), Q«« (🚠) MOUNTAIN CABLEWAY»», 36105, True ),
( (0x1F6A0,  0x41, ), Q«« (🚠) MOUNTAIN CABLEWAY»», 36106, True ),
( (0x1F6A0,  0x62, ), Q«« (🚠) MOUNTAIN CABLEWAY»», 36107, True ),
( (0x1F6A1,  0x21, ), Q«« (🚡) AERIAL TRAMWAY»», 36108, True ),
( (0x1F6A1,  0x3F, ), Q«« (🚡) AERIAL TRAMWAY»», 36109, True ),
( (0x1F6A1,  0x61, ), Q«« (🚡) AERIAL TRAMWAY»», 36110, True ),
( (0x1F6A1,  0x41, ), Q«« (🚡) AERIAL TRAMWAY»», 36111, True ),
( (0x1F6A1,  0x62, ), Q«« (🚡) AERIAL TRAMWAY»», 36112, True ),
( (0x1F6A2,  0x21, ), Q«« (🚢) SHIP»», 36113, True ),
( (0x1F6A2,  0x3F, ), Q«« (🚢) SHIP»», 36114, True ),
( (0x1F6A2,  0x61, ), Q«« (🚢) SHIP»», 36115, True ),
( (0x1F6A2,  0x41, ), Q«« (🚢) SHIP»», 36116, True ),
( (0x1F6A2,  0x62, ), Q«« (🚢) SHIP»», 36117, True ),
( (0x1F6A3,  0x21, ), Q«« (🚣) ROWBOAT»», 36118, True ),
( (0x1F6A3,  0x3F, ), Q«« (🚣) ROWBOAT»», 36119, True ),
( (0x1F6A3,  0x61, ), Q«« (🚣) ROWBOAT»», 36120, True ),
( (0x1F6A3,  0x41, ), Q«« (🚣) ROWBOAT»», 36121, True ),
( (0x1F6A3,  0x62, ), Q«« (🚣) ROWBOAT»», 36122, True ),
( (0x1F6A4,  0x21, ), Q«« (🚤) SPEEDBOAT»», 36123, True ),
( (0x1F6A4,  0x3F, ), Q«« (🚤) SPEEDBOAT»», 36124, True ),
( (0x1F6A4,  0x61, ), Q«« (🚤) SPEEDBOAT»», 36125, True ),
( (0x1F6A4,  0x41, ), Q«« (🚤) SPEEDBOAT»», 36126, True ),
( (0x1F6A4,  0x62, ), Q«« (🚤) SPEEDBOAT»», 36127, True ),
( (0x1F6A5,  0x21, ), Q«« (🚥) HORIZONTAL TRAFFIC LIGHT»», 36128, True ),
( (0x1F6A5,  0x3F, ), Q«« (🚥) HORIZONTAL TRAFFIC LIGHT»», 36129, True ),
( (0x1F6A5,  0x61, ), Q«« (🚥) HORIZONTAL TRAFFIC LIGHT»», 36130, True ),
( (0x1F6A5,  0x41, ), Q«« (🚥) HORIZONTAL TRAFFIC LIGHT»», 36131, True ),
( (0x1F6A5,  0x62, ), Q«« (🚥) HORIZONTAL TRAFFIC LIGHT»», 36132, True ),
( (0x1F6A6,  0x21, ), Q«« (🚦) VERTICAL TRAFFIC LIGHT»», 36133, True ),
( (0x1F6A6,  0x3F, ), Q«« (🚦) VERTICAL TRAFFIC LIGHT»», 36134, True ),
( (0x1F6A6,  0x61, ), Q«« (🚦) VERTICAL TRAFFIC LIGHT»», 36135, True ),
( (0x1F6A6,  0x41, ), Q«« (🚦) VERTICAL TRAFFIC LIGHT»», 36136, True ),
( (0x1F6A6,  0x62, ), Q«« (🚦) VERTICAL TRAFFIC LIGHT»», 36137, True ),
( (0x1F6A7,  0x21, ), Q«« (🚧) CONSTRUCTION SIGN»», 36138, True ),
( (0x1F6A7,  0x3F, ), Q«« (🚧) CONSTRUCTION SIGN»», 36139, True ),
( (0x1F6A7,  0x61, ), Q«« (🚧) CONSTRUCTION SIGN»», 36140, True ),
( (0x1F6A7,  0x41, ), Q«« (🚧) CONSTRUCTION SIGN»», 36141, True ),
( (0x1F6A7,  0x62, ), Q«« (🚧) CONSTRUCTION SIGN»», 36142, True ),
( (0x1F6A8,  0x21, ), Q«« (🚨) POLICE CARS REVOLVING LIGHT»», 36143, True ),
( (0x1F6A8,  0x3F, ), Q«« (🚨) POLICE CARS REVOLVING LIGHT»», 36144, True ),
( (0x1F6A8,  0x61, ), Q«« (🚨) POLICE CARS REVOLVING LIGHT»», 36145, True ),
( (0x1F6A8,  0x41, ), Q«« (🚨) POLICE CARS REVOLVING LIGHT»», 36146, True ),
( (0x1F6A8,  0x62, ), Q«« (🚨) POLICE CARS REVOLVING LIGHT»», 36147, True ),
( (0x1F6A9,  0x21, ), Q«« (🚩) TRIANGULAR FLAG ON POST»», 36148, True ),
( (0x1F6A9,  0x3F, ), Q«« (🚩) TRIANGULAR FLAG ON POST»», 36149, True ),
( (0x1F6A9,  0x61, ), Q«« (🚩) TRIANGULAR FLAG ON POST»», 36150, True ),
( (0x1F6A9,  0x41, ), Q«« (🚩) TRIANGULAR FLAG ON POST»», 36151, True ),
( (0x1F6A9,  0x62, ), Q«« (🚩) TRIANGULAR FLAG ON POST»», 36152, True ),
( (0x1F6AA,  0x21, ), Q«« (🚪) DOOR»», 36153, True ),
( (0x1F6AA,  0x3F, ), Q«« (🚪) DOOR»», 36154, True ),
( (0x1F6AA,  0x61, ), Q«« (🚪) DOOR»», 36155, True ),
( (0x1F6AA,  0x41, ), Q«« (🚪) DOOR»», 36156, True ),
( (0x1F6AA,  0x62, ), Q«« (🚪) DOOR»», 36157, True ),
( (0x1F6AB,  0x21, ), Q«« (🚫) NO ENTRY SIGN»», 36158, True ),
( (0x1F6AB,  0x3F, ), Q«« (🚫) NO ENTRY SIGN»», 36159, True ),
( (0x1F6AB,  0x61, ), Q«« (🚫) NO ENTRY SIGN»», 36160, True ),
( (0x1F6AB,  0x41, ), Q«« (🚫) NO ENTRY SIGN»», 36161, True ),
( (0x1F6AB,  0x62, ), Q«« (🚫) NO ENTRY SIGN»», 36162, True ),
( (0x1F6AC,  0x21, ), Q«« (🚬) SMOKING SYMBOL»», 36163, True ),
( (0x1F6AC,  0x3F, ), Q«« (🚬) SMOKING SYMBOL»», 36164, True ),
( (0x1F6AC,  0x61, ), Q«« (🚬) SMOKING SYMBOL»», 36165, True ),
( (0x1F6AC,  0x41, ), Q«« (🚬) SMOKING SYMBOL»», 36166, True ),
( (0x1F6AC,  0x62, ), Q«« (🚬) SMOKING SYMBOL»», 36167, True ),
( (0x1F6AD,  0x21, ), Q«« (🚭) NO SMOKING SYMBOL»», 36168, True ),
( (0x1F6AD,  0x3F, ), Q«« (🚭) NO SMOKING SYMBOL»», 36169, True ),
( (0x1F6AD,  0x61, ), Q«« (🚭) NO SMOKING SYMBOL»», 36170, True ),
( (0x1F6AD,  0x41, ), Q«« (🚭) NO SMOKING SYMBOL»», 36171, True ),
( (0x1F6AD,  0x62, ), Q«« (🚭) NO SMOKING SYMBOL»», 36172, True ),
( (0x1F6AE,  0x21, ), Q«« (🚮) PUT LITTER IN ITS PLACE SYMBOL»», 36173, True ),
( (0x1F6AE,  0x3F, ), Q«« (🚮) PUT LITTER IN ITS PLACE SYMBOL»», 36174, True ),
( (0x1F6AE,  0x61, ), Q«« (🚮) PUT LITTER IN ITS PLACE SYMBOL»», 36175, True ),
( (0x1F6AE,  0x41, ), Q«« (🚮) PUT LITTER IN ITS PLACE SYMBOL»», 36176, True ),
( (0x1F6AE,  0x62, ), Q«« (🚮) PUT LITTER IN ITS PLACE SYMBOL»», 36177, True ),
( (0x1F6AF,  0x21, ), Q«« (🚯) DO NOT LITTER SYMBOL»», 36178, True ),
( (0x1F6AF,  0x3F, ), Q«« (🚯) DO NOT LITTER SYMBOL»», 36179, True ),
( (0x1F6AF,  0x61, ), Q«« (🚯) DO NOT LITTER SYMBOL»», 36180, True ),
( (0x1F6AF,  0x41, ), Q«« (🚯) DO NOT LITTER SYMBOL»», 36181, True ),
( (0x1F6AF,  0x62, ), Q«« (🚯) DO NOT LITTER SYMBOL»», 36182, True ),
( (0x1F6B0,  0x21, ), Q«« (🚰) POTABLE WATER SYMBOL»», 36183, True ),
( (0x1F6B0,  0x3F, ), Q«« (🚰) POTABLE WATER SYMBOL»», 36184, True ),
( (0x1F6B0,  0x61, ), Q«« (🚰) POTABLE WATER SYMBOL»», 36185, True ),
( (0x1F6B0,  0x41, ), Q«« (🚰) POTABLE WATER SYMBOL»», 36186, True ),
( (0x1F6B0,  0x62, ), Q«« (🚰) POTABLE WATER SYMBOL»», 36187, True ),
( (0x1F6B1,  0x21, ), Q«« (🚱) NON-POTABLE WATER SYMBOL»», 36188, True ),
( (0x1F6B1,  0x3F, ), Q«« (🚱) NON-POTABLE WATER SYMBOL»», 36189, True ),
( (0x1F6B1,  0x61, ), Q«« (🚱) NON-POTABLE WATER SYMBOL»», 36190, True ),
( (0x1F6B1,  0x41, ), Q«« (🚱) NON-POTABLE WATER SYMBOL»», 36191, True ),
( (0x1F6B1,  0x62, ), Q«« (🚱) NON-POTABLE WATER SYMBOL»», 36192, True ),
( (0x1F6B2,  0x21, ), Q«« (🚲) BICYCLE»», 36193, True ),
( (0x1F6B2,  0x3F, ), Q«« (🚲) BICYCLE»», 36194, True ),
( (0x1F6B2,  0x61, ), Q«« (🚲) BICYCLE»», 36195, True ),
( (0x1F6B2,  0x41, ), Q«« (🚲) BICYCLE»», 36196, True ),
( (0x1F6B2,  0x62, ), Q«« (🚲) BICYCLE»», 36197, True ),
( (0x1F6B3,  0x21, ), Q«« (🚳) NO BICYCLES»», 36198, True ),
( (0x1F6B3,  0x3F, ), Q«« (🚳) NO BICYCLES»», 36199, True ),
( (0x1F6B3,  0x61, ), Q«« (🚳) NO BICYCLES»», 36200, True ),
( (0x1F6B3,  0x41, ), Q«« (🚳) NO BICYCLES»», 36201, True ),
( (0x1F6B3,  0x62, ), Q«« (🚳) NO BICYCLES»», 36202, True ),
( (0x1F6B4,  0x21, ), Q«« (🚴) BICYCLIST»», 36203, True ),
( (0x1F6B4,  0x3F, ), Q«« (🚴) BICYCLIST»», 36204, True ),
( (0x1F6B4,  0x61, ), Q«« (🚴) BICYCLIST»», 36205, True ),
( (0x1F6B4,  0x41, ), Q«« (🚴) BICYCLIST»», 36206, True ),
( (0x1F6B4,  0x62, ), Q«« (🚴) BICYCLIST»», 36207, True ),
( (0x1F6B5,  0x21, ), Q«« (🚵) MOUNTAIN BICYCLIST»», 36208, True ),
( (0x1F6B5,  0x3F, ), Q«« (🚵) MOUNTAIN BICYCLIST»», 36209, True ),
( (0x1F6B5,  0x61, ), Q«« (🚵) MOUNTAIN BICYCLIST»», 36210, True ),
( (0x1F6B5,  0x41, ), Q«« (🚵) MOUNTAIN BICYCLIST»», 36211, True ),
( (0x1F6B5,  0x62, ), Q«« (🚵) MOUNTAIN BICYCLIST»», 36212, True ),
( (0x1F6B6,  0x21, ), Q«« (🚶) PEDESTRIAN»», 36213, True ),
( (0x1F6B6,  0x3F, ), Q«« (🚶) PEDESTRIAN»», 36214, True ),
( (0x1F6B6,  0x61, ), Q«« (🚶) PEDESTRIAN»», 36215, True ),
( (0x1F6B6,  0x41, ), Q«« (🚶) PEDESTRIAN»», 36216, True ),
( (0x1F6B6,  0x62, ), Q«« (🚶) PEDESTRIAN»», 36217, True ),
( (0x1F6B7,  0x21, ), Q«« (🚷) NO PEDESTRIANS»», 36218, True ),
( (0x1F6B7,  0x3F, ), Q«« (🚷) NO PEDESTRIANS»», 36219, True ),
( (0x1F6B7,  0x61, ), Q«« (🚷) NO PEDESTRIANS»», 36220, True ),
( (0x1F6B7,  0x41, ), Q«« (🚷) NO PEDESTRIANS»», 36221, True ),
( (0x1F6B7,  0x62, ), Q«« (🚷) NO PEDESTRIANS»», 36222, True ),
( (0x1F6B8,  0x21, ), Q«« (🚸) CHILDREN CROSSING»», 36223, True ),
( (0x1F6B8,  0x3F, ), Q«« (🚸) CHILDREN CROSSING»», 36224, True ),
( (0x1F6B8,  0x61, ), Q«« (🚸) CHILDREN CROSSING»», 36225, True ),
( (0x1F6B8,  0x41, ), Q«« (🚸) CHILDREN CROSSING»», 36226, True ),
( (0x1F6B8,  0x62, ), Q«« (🚸) CHILDREN CROSSING»», 36227, True ),
( (0x1F6B9,  0x21, ), Q«« (🚹) MENS SYMBOL»», 36228, True ),
( (0x1F6B9,  0x3F, ), Q«« (🚹) MENS SYMBOL»», 36229, True ),
( (0x1F6B9,  0x61, ), Q«« (🚹) MENS SYMBOL»», 36230, True ),
( (0x1F6B9,  0x41, ), Q«« (🚹) MENS SYMBOL»», 36231, True ),
( (0x1F6B9,  0x62, ), Q«« (🚹) MENS SYMBOL»», 36232, True ),
( (0x1F6BA,  0x21, ), Q«« (🚺) WOMENS SYMBOL»», 36233, True ),
( (0x1F6BA,  0x3F, ), Q«« (🚺) WOMENS SYMBOL»», 36234, True ),
( (0x1F6BA,  0x61, ), Q«« (🚺) WOMENS SYMBOL»», 36235, True ),
( (0x1F6BA,  0x41, ), Q«« (🚺) WOMENS SYMBOL»», 36236, True ),
( (0x1F6BA,  0x62, ), Q«« (🚺) WOMENS SYMBOL»», 36237, True ),
( (0x1F6BB,  0x21, ), Q«« (🚻) RESTROOM»», 36238, True ),
( (0x1F6BB,  0x3F, ), Q«« (🚻) RESTROOM»», 36239, True ),
( (0x1F6BB,  0x61, ), Q«« (🚻) RESTROOM»», 36240, True ),
( (0x1F6BB,  0x41, ), Q«« (🚻) RESTROOM»», 36241, True ),
( (0x1F6BB,  0x62, ), Q«« (🚻) RESTROOM»», 36242, True ),
( (0x1F6BC,  0x21, ), Q«« (🚼) BABY SYMBOL»», 36243, True ),
( (0x1F6BC,  0x3F, ), Q«« (🚼) BABY SYMBOL»», 36244, True ),
( (0x1F6BC,  0x61, ), Q«« (🚼) BABY SYMBOL»», 36245, True ),
( (0x1F6BC,  0x41, ), Q«« (🚼) BABY SYMBOL»», 36246, True ),
( (0x1F6BC,  0x62, ), Q«« (🚼) BABY SYMBOL»», 36247, True ),
( (0x1F6BD,  0x21, ), Q«« (🚽) TOILET»», 36248, True ),
( (0x1F6BD,  0x3F, ), Q«« (🚽) TOILET»», 36249, True ),
( (0x1F6BD,  0x61, ), Q«« (🚽) TOILET»», 36250, True ),
( (0x1F6BD,  0x41, ), Q«« (🚽) TOILET»», 36251, True ),
( (0x1F6BD,  0x62, ), Q«« (🚽) TOILET»», 36252, True ),
( (0x1F6BE,  0x21, ), Q«« (🚾) WATER CLOSET»», 36253, True ),
( (0x1F6BE,  0x3F, ), Q«« (🚾) WATER CLOSET»», 36254, True ),
( (0x1F6BE,  0x61, ), Q«« (🚾) WATER CLOSET»», 36255, True ),
( (0x1F6BE,  0x41, ), Q«« (🚾) WATER CLOSET»», 36256, True ),
( (0x1F6BE,  0x62, ), Q«« (🚾) WATER CLOSET»», 36257, True ),
( (0x1F6BF,  0x21, ), Q«« (🚿) SHOWER»», 36258, True ),
( (0x1F6BF,  0x3F, ), Q«« (🚿) SHOWER»», 36259, True ),
( (0x1F6BF,  0x61, ), Q«« (🚿) SHOWER»», 36260, True ),
( (0x1F6BF,  0x41, ), Q«« (🚿) SHOWER»», 36261, True ),
( (0x1F6BF,  0x62, ), Q«« (🚿) SHOWER»», 36262, True ),
( (0x1F6C0,  0x21, ), Q«« (🛀) BATH»», 36263, True ),
( (0x1F6C0,  0x3F, ), Q«« (🛀) BATH»», 36264, True ),
( (0x1F6C0,  0x61, ), Q«« (🛀) BATH»», 36265, True ),
( (0x1F6C0,  0x41, ), Q«« (🛀) BATH»», 36266, True ),
( (0x1F6C0,  0x62, ), Q«« (🛀) BATH»», 36267, True ),
( (0x1F6C1,  0x21, ), Q«« (🛁) BATHTUB»», 36268, True ),
( (0x1F6C1,  0x3F, ), Q«« (🛁) BATHTUB»», 36269, True ),
( (0x1F6C1,  0x61, ), Q«« (🛁) BATHTUB»», 36270, True ),
( (0x1F6C1,  0x41, ), Q«« (🛁) BATHTUB»», 36271, True ),
( (0x1F6C1,  0x62, ), Q«« (🛁) BATHTUB»», 36272, True ),
( (0x1F6C2,  0x21, ), Q«« (🛂) PASSPORT CONTROL»», 36273, True ),
( (0x1F6C2,  0x3F, ), Q«« (🛂) PASSPORT CONTROL»», 36274, True ),
( (0x1F6C2,  0x61, ), Q«« (🛂) PASSPORT CONTROL»», 36275, True ),
( (0x1F6C2,  0x41, ), Q«« (🛂) PASSPORT CONTROL»», 36276, True ),
( (0x1F6C2,  0x62, ), Q«« (🛂) PASSPORT CONTROL»», 36277, True ),
( (0x1F6C3,  0x21, ), Q«« (🛃) CUSTOMS»», 36278, True ),
( (0x1F6C3,  0x3F, ), Q«« (🛃) CUSTOMS»», 36279, True ),
( (0x1F6C3,  0x61, ), Q«« (🛃) CUSTOMS»», 36280, True ),
( (0x1F6C3,  0x41, ), Q«« (🛃) CUSTOMS»», 36281, True ),
( (0x1F6C3,  0x62, ), Q«« (🛃) CUSTOMS»», 36282, True ),
( (0x1F6C4,  0x21, ), Q«« (🛄) BAGGAGE CLAIM»», 36283, True ),
( (0x1F6C4,  0x3F, ), Q«« (🛄) BAGGAGE CLAIM»», 36284, True ),
( (0x1F6C4,  0x61, ), Q«« (🛄) BAGGAGE CLAIM»», 36285, True ),
( (0x1F6C4,  0x41, ), Q«« (🛄) BAGGAGE CLAIM»», 36286, True ),
( (0x1F6C4,  0x62, ), Q«« (🛄) BAGGAGE CLAIM»», 36287, True ),
( (0x1F6C5,  0x21, ), Q«« (🛅) LEFT LUGGAGE»», 36288, True ),
( (0x1F6C5,  0x3F, ), Q«« (🛅) LEFT LUGGAGE»», 36289, True ),
( (0x1F6C5,  0x61, ), Q«« (🛅) LEFT LUGGAGE»», 36290, True ),
( (0x1F6C5,  0x41, ), Q«« (🛅) LEFT LUGGAGE»», 36291, True ),
( (0x1F6C5,  0x62, ), Q«« (🛅) LEFT LUGGAGE»», 36292, True ),
( (0x1F6C6,  0x21, ), Q«« (🛆) TRIANGLE WITH ROUNDED CORNERS»», 36293, True ),
( (0x1F6C6,  0x3F, ), Q«« (🛆) TRIANGLE WITH ROUNDED CORNERS»», 36294, True ),
( (0x1F6C6,  0x61, ), Q«« (🛆) TRIANGLE WITH ROUNDED CORNERS»», 36295, True ),
( (0x1F6C6,  0x41, ), Q«« (🛆) TRIANGLE WITH ROUNDED CORNERS»», 36296, True ),
( (0x1F6C6,  0x62, ), Q«« (🛆) TRIANGLE WITH ROUNDED CORNERS»», 36297, True ),
( (0x1F6C7,  0x21, ), Q«« (🛇) PROHIBITED SIGN»», 36298, True ),
( (0x1F6C7,  0x3F, ), Q«« (🛇) PROHIBITED SIGN»», 36299, True ),
( (0x1F6C7,  0x61, ), Q«« (🛇) PROHIBITED SIGN»», 36300, True ),
( (0x1F6C7,  0x41, ), Q«« (🛇) PROHIBITED SIGN»», 36301, True ),
( (0x1F6C7,  0x62, ), Q«« (🛇) PROHIBITED SIGN»», 36302, True ),
( (0x1F6C8,  0x21, ), Q«« (🛈) CIRCLED INFORMATION SOURCE»», 36303, True ),
( (0x1F6C8,  0x3F, ), Q«« (🛈) CIRCLED INFORMATION SOURCE»», 36304, True ),
( (0x1F6C8,  0x61, ), Q«« (🛈) CIRCLED INFORMATION SOURCE»», 36305, True ),
( (0x1F6C8,  0x41, ), Q«« (🛈) CIRCLED INFORMATION SOURCE»», 36306, True ),
( (0x1F6C8,  0x62, ), Q«« (🛈) CIRCLED INFORMATION SOURCE»», 36307, True ),
( (0x1F6C9,  0x21, ), Q«« (🛉) BOYS SYMBOL»», 36308, True ),
( (0x1F6C9,  0x3F, ), Q«« (🛉) BOYS SYMBOL»», 36309, True ),
( (0x1F6C9,  0x61, ), Q«« (🛉) BOYS SYMBOL»», 36310, True ),
( (0x1F6C9,  0x41, ), Q«« (🛉) BOYS SYMBOL»», 36311, True ),
( (0x1F6C9,  0x62, ), Q«« (🛉) BOYS SYMBOL»», 36312, True ),
( (0x1F6CA,  0x21, ), Q«« (🛊) GIRLS SYMBOL»», 36313, True ),
( (0x1F6CA,  0x3F, ), Q«« (🛊) GIRLS SYMBOL»», 36314, True ),
( (0x1F6CA,  0x61, ), Q«« (🛊) GIRLS SYMBOL»», 36315, True ),
( (0x1F6CA,  0x41, ), Q«« (🛊) GIRLS SYMBOL»», 36316, True ),
( (0x1F6CA,  0x62, ), Q«« (🛊) GIRLS SYMBOL»», 36317, True ),
( (0x1F6CB,  0x21, ), Q«« (🛋) COUCH AND LAMP»», 36318, True ),
( (0x1F6CB,  0x3F, ), Q«« (🛋) COUCH AND LAMP»», 36319, True ),
( (0x1F6CB,  0x61, ), Q«« (🛋) COUCH AND LAMP»», 36320, True ),
( (0x1F6CB,  0x41, ), Q«« (🛋) COUCH AND LAMP»», 36321, True ),
( (0x1F6CB,  0x62, ), Q«« (🛋) COUCH AND LAMP»», 36322, True ),
( (0x1F6CC,  0x21, ), Q«« (🛌) SLEEPING ACCOMMODATION»», 36323, True ),
( (0x1F6CC,  0x3F, ), Q«« (🛌) SLEEPING ACCOMMODATION»», 36324, True ),
( (0x1F6CC,  0x61, ), Q«« (🛌) SLEEPING ACCOMMODATION»», 36325, True ),
( (0x1F6CC,  0x41, ), Q«« (🛌) SLEEPING ACCOMMODATION»», 36326, True ),
( (0x1F6CC,  0x62, ), Q«« (🛌) SLEEPING ACCOMMODATION»», 36327, True ),
( (0x1F6CD,  0x21, ), Q«« (🛍) SHOPPING BAGS»», 36328, True ),
( (0x1F6CD,  0x3F, ), Q«« (🛍) SHOPPING BAGS»», 36329, True ),
( (0x1F6CD,  0x61, ), Q«« (🛍) SHOPPING BAGS»», 36330, True ),
( (0x1F6CD,  0x41, ), Q«« (🛍) SHOPPING BAGS»», 36331, True ),
( (0x1F6CD,  0x62, ), Q«« (🛍) SHOPPING BAGS»», 36332, True ),
( (0x1F6CE,  0x21, ), Q«« (🛎) BELLHOP BELL»», 36333, True ),
( (0x1F6CE,  0x3F, ), Q«« (🛎) BELLHOP BELL»», 36334, True ),
( (0x1F6CE,  0x61, ), Q«« (🛎) BELLHOP BELL»», 36335, True ),
( (0x1F6CE,  0x41, ), Q«« (🛎) BELLHOP BELL»», 36336, True ),
( (0x1F6CE,  0x62, ), Q«« (🛎) BELLHOP BELL»», 36337, True ),
( (0x1F6CF,  0x21, ), Q«« (🛏) BED»», 36338, True ),
( (0x1F6CF,  0x3F, ), Q«« (🛏) BED»», 36339, True ),
( (0x1F6CF,  0x61, ), Q«« (🛏) BED»», 36340, True ),
( (0x1F6CF,  0x41, ), Q«« (🛏) BED»», 36341, True ),
( (0x1F6CF,  0x62, ), Q«« (🛏) BED»», 36342, True ),
( (0x1F6D0,  0x21, ), Q«« (🛐) PLACE OF WORSHIP»», 36343, True ),
( (0x1F6D0,  0x3F, ), Q«« (🛐) PLACE OF WORSHIP»», 36344, True ),
( (0x1F6D0,  0x61, ), Q«« (🛐) PLACE OF WORSHIP»», 36345, True ),
( (0x1F6D0,  0x41, ), Q«« (🛐) PLACE OF WORSHIP»», 36346, True ),
( (0x1F6D0,  0x62, ), Q«« (🛐) PLACE OF WORSHIP»», 36347, True ),
( (0x1F6D1,  0x21, ), Q«« (🛑) OCTAGONAL SIGN»», 36348, True ),
( (0x1F6D1,  0x3F, ), Q«« (🛑) OCTAGONAL SIGN»», 36349, True ),
( (0x1F6D1,  0x61, ), Q«« (🛑) OCTAGONAL SIGN»», 36350, True ),
( (0x1F6D1,  0x41, ), Q«« (🛑) OCTAGONAL SIGN»», 36351, True ),
( (0x1F6D1,  0x62, ), Q«« (🛑) OCTAGONAL SIGN»», 36352, True ),
( (0x1F6D2,  0x21, ), Q«« (🛒) SHOPPING TROLLEY»», 36353, True ),
( (0x1F6D2,  0x3F, ), Q«« (🛒) SHOPPING TROLLEY»», 36354, True ),
( (0x1F6D2,  0x61, ), Q«« (🛒) SHOPPING TROLLEY»», 36355, True ),
( (0x1F6D2,  0x41, ), Q«« (🛒) SHOPPING TROLLEY»», 36356, True ),
( (0x1F6D2,  0x62, ), Q«« (🛒) SHOPPING TROLLEY»», 36357, True ),
( (0x1F6D3,  0x21, ), Q«« (🛓) STUPA»», 36358, True ),
( (0x1F6D3,  0x3F, ), Q«« (🛓) STUPA»», 36359, True ),
( (0x1F6D3,  0x61, ), Q«« (🛓) STUPA»», 36360, True ),
( (0x1F6D3,  0x41, ), Q«« (🛓) STUPA»», 36361, True ),
( (0x1F6D3,  0x62, ), Q«« (🛓) STUPA»», 36362, True ),
( (0x1F6D4,  0x21, ), Q«« (🛔) PAGODA»», 36363, True ),
( (0x1F6D4,  0x3F, ), Q«« (🛔) PAGODA»», 36364, True ),
( (0x1F6D4,  0x61, ), Q«« (🛔) PAGODA»», 36365, True ),
( (0x1F6D4,  0x41, ), Q«« (🛔) PAGODA»», 36366, True ),
( (0x1F6D4,  0x62, ), Q«« (🛔) PAGODA»», 36367, True ),
( (0x1F6D5,  0x21, ), Q«« (🛕) HINDU TEMPLE»», 36368, True ),
( (0x1F6D5,  0x3F, ), Q«« (🛕) HINDU TEMPLE»», 36369, True ),
( (0x1F6D5,  0x61, ), Q«« (🛕) HINDU TEMPLE»», 36370, True ),
( (0x1F6D5,  0x41, ), Q«« (🛕) HINDU TEMPLE»», 36371, True ),
( (0x1F6D5,  0x62, ), Q«« (🛕) HINDU TEMPLE»», 36372, True ),
( (0x1F6D6,  0x21, ), Q«« (🛖) HUT»», 36373, True ),
( (0x1F6D6,  0x3F, ), Q«« (🛖) HUT»», 36374, True ),
( (0x1F6D6,  0x61, ), Q«« (🛖) HUT»», 36375, True ),
( (0x1F6D6,  0x41, ), Q«« (🛖) HUT»», 36376, True ),
( (0x1F6D6,  0x62, ), Q«« (🛖) HUT»», 36377, True ),
( (0x1F6D7,  0x21, ), Q«« (🛗) ELEVATOR»», 36378, True ),
( (0x1F6D7,  0x3F, ), Q«« (🛗) ELEVATOR»», 36379, True ),
( (0x1F6D7,  0x61, ), Q«« (🛗) ELEVATOR»», 36380, True ),
( (0x1F6D7,  0x41, ), Q«« (🛗) ELEVATOR»», 36381, True ),
( (0x1F6D7,  0x62, ), Q«« (🛗) ELEVATOR»», 36382, True ),
( (0x1F6E0,  0x21, ), Q«« (🛠) HAMMER AND WRENCH»», 36383, True ),
( (0x1F6E0,  0x3F, ), Q«« (🛠) HAMMER AND WRENCH»», 36384, True ),
( (0x1F6E0,  0x61, ), Q«« (🛠) HAMMER AND WRENCH»», 36385, True ),
( (0x1F6E0,  0x41, ), Q«« (🛠) HAMMER AND WRENCH»», 36386, True ),
( (0x1F6E0,  0x62, ), Q«« (🛠) HAMMER AND WRENCH»», 36387, True ),
( (0x1F6E1,  0x21, ), Q«« (🛡) SHIELD»», 36388, True ),
( (0x1F6E1,  0x3F, ), Q«« (🛡) SHIELD»», 36389, True ),
( (0x1F6E1,  0x61, ), Q«« (🛡) SHIELD»», 36390, True ),
( (0x1F6E1,  0x41, ), Q«« (🛡) SHIELD»», 36391, True ),
( (0x1F6E1,  0x62, ), Q«« (🛡) SHIELD»», 36392, True ),
( (0x1F6E2,  0x21, ), Q«« (🛢) OIL DRUM»», 36393, True ),
( (0x1F6E2,  0x3F, ), Q«« (🛢) OIL DRUM»», 36394, True ),
( (0x1F6E2,  0x61, ), Q«« (🛢) OIL DRUM»», 36395, True ),
( (0x1F6E2,  0x41, ), Q«« (🛢) OIL DRUM»», 36396, True ),
( (0x1F6E2,  0x62, ), Q«« (🛢) OIL DRUM»», 36397, True ),
( (0x1F6E3,  0x21, ), Q«« (🛣) MOTORWAY»», 36398, True ),
( (0x1F6E3,  0x3F, ), Q«« (🛣) MOTORWAY»», 36399, True ),
( (0x1F6E3,  0x61, ), Q«« (🛣) MOTORWAY»», 36400, True ),
( (0x1F6E3,  0x41, ), Q«« (🛣) MOTORWAY»», 36401, True ),
( (0x1F6E3,  0x62, ), Q«« (🛣) MOTORWAY»», 36402, True ),
( (0x1F6E4,  0x21, ), Q«« (🛤) RAILWAY TRACK»», 36403, True ),
( (0x1F6E4,  0x3F, ), Q«« (🛤) RAILWAY TRACK»», 36404, True ),
( (0x1F6E4,  0x61, ), Q«« (🛤) RAILWAY TRACK»», 36405, True ),
( (0x1F6E4,  0x41, ), Q«« (🛤) RAILWAY TRACK»», 36406, True ),
( (0x1F6E4,  0x62, ), Q«« (🛤) RAILWAY TRACK»», 36407, True ),
( (0x1F6E5,  0x21, ), Q«« (🛥) MOTOR BOAT»», 36408, True ),
( (0x1F6E5,  0x3F, ), Q«« (🛥) MOTOR BOAT»», 36409, True ),
( (0x1F6E5,  0x61, ), Q«« (🛥) MOTOR BOAT»», 36410, True ),
( (0x1F6E5,  0x41, ), Q«« (🛥) MOTOR BOAT»», 36411, True ),
( (0x1F6E5,  0x62, ), Q«« (🛥) MOTOR BOAT»», 36412, True ),
( (0x1F6E6,  0x21, ), Q«« (🛦) UP-POINTING MILITARY AIRPLANE»», 36413, True ),
( (0x1F6E6,  0x3F, ), Q«« (🛦) UP-POINTING MILITARY AIRPLANE»», 36414, True ),
( (0x1F6E6,  0x61, ), Q«« (🛦) UP-POINTING MILITARY AIRPLANE»», 36415, True ),
( (0x1F6E6,  0x41, ), Q«« (🛦) UP-POINTING MILITARY AIRPLANE»», 36416, True ),
( (0x1F6E6,  0x62, ), Q«« (🛦) UP-POINTING MILITARY AIRPLANE»», 36417, True ),
( (0x1F6E7,  0x21, ), Q«« (🛧) UP-POINTING AIRPLANE»», 36418, True ),
( (0x1F6E7,  0x3F, ), Q«« (🛧) UP-POINTING AIRPLANE»», 36419, True ),
( (0x1F6E7,  0x61, ), Q«« (🛧) UP-POINTING AIRPLANE»», 36420, True ),
( (0x1F6E7,  0x41, ), Q«« (🛧) UP-POINTING AIRPLANE»», 36421, True ),
( (0x1F6E7,  0x62, ), Q«« (🛧) UP-POINTING AIRPLANE»», 36422, True ),
( (0x1F6E8,  0x21, ), Q«« (🛨) UP-POINTING SMALL AIRPLANE»», 36423, True ),
( (0x1F6E8,  0x3F, ), Q«« (🛨) UP-POINTING SMALL AIRPLANE»», 36424, True ),
( (0x1F6E8,  0x61, ), Q«« (🛨) UP-POINTING SMALL AIRPLANE»», 36425, True ),
( (0x1F6E8,  0x41, ), Q«« (🛨) UP-POINTING SMALL AIRPLANE»», 36426, True ),
( (0x1F6E8,  0x62, ), Q«« (🛨) UP-POINTING SMALL AIRPLANE»», 36427, True ),
( (0x1F6E9,  0x21, ), Q«« (🛩) SMALL AIRPLANE»», 36428, True ),
( (0x1F6E9,  0x3F, ), Q«« (🛩) SMALL AIRPLANE»», 36429, True ),
( (0x1F6E9,  0x61, ), Q«« (🛩) SMALL AIRPLANE»», 36430, True ),
( (0x1F6E9,  0x41, ), Q«« (🛩) SMALL AIRPLANE»», 36431, True ),
( (0x1F6E9,  0x62, ), Q«« (🛩) SMALL AIRPLANE»», 36432, True ),
( (0x1F6EA,  0x21, ), Q«« (🛪) NORTHEAST-POINTING AIRPLANE»», 36433, True ),
( (0x1F6EA,  0x3F, ), Q«« (🛪) NORTHEAST-POINTING AIRPLANE»», 36434, True ),
( (0x1F6EA,  0x61, ), Q«« (🛪) NORTHEAST-POINTING AIRPLANE»», 36435, True ),
( (0x1F6EA,  0x41, ), Q«« (🛪) NORTHEAST-POINTING AIRPLANE»», 36436, True ),
( (0x1F6EA,  0x62, ), Q«« (🛪) NORTHEAST-POINTING AIRPLANE»», 36437, True ),
( (0x1F6EB,  0x21, ), Q«« (🛫) AIRPLANE DEPARTURE»», 36438, True ),
( (0x1F6EB,  0x3F, ), Q«« (🛫) AIRPLANE DEPARTURE»», 36439, True ),
( (0x1F6EB,  0x61, ), Q«« (🛫) AIRPLANE DEPARTURE»», 36440, True ),
( (0x1F6EB,  0x41, ), Q«« (🛫) AIRPLANE DEPARTURE»», 36441, True ),
( (0x1F6EB,  0x62, ), Q«« (🛫) AIRPLANE DEPARTURE»», 36442, True ),
( (0x1F6EC,  0x21, ), Q«« (🛬) AIRPLANE ARRIVING»», 36443, True ),
( (0x1F6EC,  0x3F, ), Q«« (🛬) AIRPLANE ARRIVING»», 36444, True ),
( (0x1F6EC,  0x61, ), Q«« (🛬) AIRPLANE ARRIVING»», 36445, True ),
( (0x1F6EC,  0x41, ), Q«« (🛬) AIRPLANE ARRIVING»», 36446, True ),
( (0x1F6EC,  0x62, ), Q«« (🛬) AIRPLANE ARRIVING»», 36447, True ),
( (0x1F6F0,  0x21, ), Q«« (🛰) SATELLITE»», 36448, True ),
( (0x1F6F0,  0x3F, ), Q«« (🛰) SATELLITE»», 36449, True ),
( (0x1F6F0,  0x61, ), Q«« (🛰) SATELLITE»», 36450, True ),
( (0x1F6F0,  0x41, ), Q«« (🛰) SATELLITE»», 36451, True ),
( (0x1F6F0,  0x62, ), Q«« (🛰) SATELLITE»», 36452, True ),
( (0x1F6F1,  0x21, ), Q«« (🛱) ONCOMING FIRE ENGINE»», 36453, True ),
( (0x1F6F1,  0x3F, ), Q«« (🛱) ONCOMING FIRE ENGINE»», 36454, True ),
( (0x1F6F1,  0x61, ), Q«« (🛱) ONCOMING FIRE ENGINE»», 36455, True ),
( (0x1F6F1,  0x41, ), Q«« (🛱) ONCOMING FIRE ENGINE»», 36456, True ),
( (0x1F6F1,  0x62, ), Q«« (🛱) ONCOMING FIRE ENGINE»», 36457, True ),
( (0x1F6F2,  0x21, ), Q«« (🛲) DIESEL LOCOMOTIVE»», 36458, True ),
( (0x1F6F2,  0x3F, ), Q«« (🛲) DIESEL LOCOMOTIVE»», 36459, True ),
( (0x1F6F2,  0x61, ), Q«« (🛲) DIESEL LOCOMOTIVE»», 36460, True ),
( (0x1F6F2,  0x41, ), Q«« (🛲) DIESEL LOCOMOTIVE»», 36461, True ),
( (0x1F6F2,  0x62, ), Q«« (🛲) DIESEL LOCOMOTIVE»», 36462, True ),
( (0x1F6F3,  0x21, ), Q«« (🛳) PASSENGER SHIP»», 36463, True ),
( (0x1F6F3,  0x3F, ), Q«« (🛳) PASSENGER SHIP»», 36464, True ),
( (0x1F6F3,  0x61, ), Q«« (🛳) PASSENGER SHIP»», 36465, True ),
( (0x1F6F3,  0x41, ), Q«« (🛳) PASSENGER SHIP»», 36466, True ),
( (0x1F6F3,  0x62, ), Q«« (🛳) PASSENGER SHIP»», 36467, True ),
( (0x1F6F4,  0x21, ), Q«« (🛴) SCOOTER»», 36468, True ),
( (0x1F6F4,  0x3F, ), Q«« (🛴) SCOOTER»», 36469, True ),
( (0x1F6F4,  0x61, ), Q«« (🛴) SCOOTER»», 36470, True ),
( (0x1F6F4,  0x41, ), Q«« (🛴) SCOOTER»», 36471, True ),
( (0x1F6F4,  0x62, ), Q«« (🛴) SCOOTER»», 36472, True ),
( (0x1F6F5,  0x21, ), Q«« (🛵) MOTOR SCOOTER»», 36473, True ),
( (0x1F6F5,  0x3F, ), Q«« (🛵) MOTOR SCOOTER»», 36474, True ),
( (0x1F6F5,  0x61, ), Q«« (🛵) MOTOR SCOOTER»», 36475, True ),
( (0x1F6F5,  0x41, ), Q«« (🛵) MOTOR SCOOTER»», 36476, True ),
( (0x1F6F5,  0x62, ), Q«« (🛵) MOTOR SCOOTER»», 36477, True ),
( (0x1F6F6,  0x21, ), Q«« (🛶) CANOE»», 36478, True ),
( (0x1F6F6,  0x3F, ), Q«« (🛶) CANOE»», 36479, True ),
( (0x1F6F6,  0x61, ), Q«« (🛶) CANOE»», 36480, True ),
( (0x1F6F6,  0x41, ), Q«« (🛶) CANOE»», 36481, True ),
( (0x1F6F6,  0x62, ), Q«« (🛶) CANOE»», 36482, True ),
( (0x1F6F7,  0x21, ), Q«« (🛷) SLED»», 36483, True ),
( (0x1F6F7,  0x3F, ), Q«« (🛷) SLED»», 36484, True ),
( (0x1F6F7,  0x61, ), Q«« (🛷) SLED»», 36485, True ),
( (0x1F6F7,  0x41, ), Q«« (🛷) SLED»», 36486, True ),
( (0x1F6F7,  0x62, ), Q«« (🛷) SLED»», 36487, True ),
( (0x1F6F8,  0x21, ), Q«« (🛸) FLYING SAUCER»», 36488, True ),
( (0x1F6F8,  0x3F, ), Q«« (🛸) FLYING SAUCER»», 36489, True ),
( (0x1F6F8,  0x61, ), Q«« (🛸) FLYING SAUCER»», 36490, True ),
( (0x1F6F8,  0x41, ), Q«« (🛸) FLYING SAUCER»», 36491, True ),
( (0x1F6F8,  0x62, ), Q«« (🛸) FLYING SAUCER»», 36492, True ),
( (0x1F6F9,  0x21, ), Q«« (🛹) SKATEBOARD»», 36493, True ),
( (0x1F6F9,  0x3F, ), Q«« (🛹) SKATEBOARD»», 36494, True ),
( (0x1F6F9,  0x61, ), Q«« (🛹) SKATEBOARD»», 36495, True ),
( (0x1F6F9,  0x41, ), Q«« (🛹) SKATEBOARD»», 36496, True ),
( (0x1F6F9,  0x62, ), Q«« (🛹) SKATEBOARD»», 36497, True ),
( (0x1F6FA,  0x21, ), Q«« (🛺) AUTO RICKSHAW»», 36498, True ),
( (0x1F6FA,  0x3F, ), Q«« (🛺) AUTO RICKSHAW»», 36499, True ),
( (0x1F6FA,  0x61, ), Q«« (🛺) AUTO RICKSHAW»», 36500, True ),
( (0x1F6FA,  0x41, ), Q«« (🛺) AUTO RICKSHAW»», 36501, True ),
( (0x1F6FA,  0x62, ), Q«« (🛺) AUTO RICKSHAW»», 36502, True ),
( (0x1F6FB,  0x21, ), Q«« (🛻) PICKUP TRUCK»», 36503, True ),
( (0x1F6FB,  0x3F, ), Q«« (🛻) PICKUP TRUCK»», 36504, True ),
( (0x1F6FB,  0x61, ), Q«« (🛻) PICKUP TRUCK»», 36505, True ),
( (0x1F6FB,  0x41, ), Q«« (🛻) PICKUP TRUCK»», 36506, True ),
( (0x1F6FB,  0x62, ), Q«« (🛻) PICKUP TRUCK»», 36507, True ),
( (0x1F6FC,  0x21, ), Q«« (🛼) ROLLER SKATE»», 36508, True ),
( (0x1F6FC,  0x3F, ), Q«« (🛼) ROLLER SKATE»», 36509, True ),
( (0x1F6FC,  0x61, ), Q«« (🛼) ROLLER SKATE»», 36510, True ),
( (0x1F6FC,  0x41, ), Q«« (🛼) ROLLER SKATE»», 36511, True ),
( (0x1F6FC,  0x62, ), Q«« (🛼) ROLLER SKATE»», 36512, True ),
( (0x1F700,  0x21, ), Q«« (🜀) ALCHEMICAL SYMBOL FOR QUINTESSENCE»», 36513, True ),
( (0x1F700,  0x3F, ), Q«« (🜀) ALCHEMICAL SYMBOL FOR QUINTESSENCE»», 36514, True ),
( (0x1F700,  0x61, ), Q«« (🜀) ALCHEMICAL SYMBOL FOR QUINTESSENCE»», 36515, True ),
( (0x1F700,  0x41, ), Q«« (🜀) ALCHEMICAL SYMBOL FOR QUINTESSENCE»», 36516, True ),
( (0x1F700,  0x62, ), Q«« (🜀) ALCHEMICAL SYMBOL FOR QUINTESSENCE»», 36517, True ),
( (0x1F701,  0x21, ), Q«« (🜁) ALCHEMICAL SYMBOL FOR AIR»», 36518, True ),
( (0x1F701,  0x3F, ), Q«« (🜁) ALCHEMICAL SYMBOL FOR AIR»», 36519, True ),
( (0x1F701,  0x61, ), Q«« (🜁) ALCHEMICAL SYMBOL FOR AIR»», 36520, True ),
( (0x1F701,  0x41, ), Q«« (🜁) ALCHEMICAL SYMBOL FOR AIR»», 36521, True ),
( (0x1F701,  0x62, ), Q«« (🜁) ALCHEMICAL SYMBOL FOR AIR»», 36522, True ),
( (0x1F702,  0x21, ), Q«« (🜂) ALCHEMICAL SYMBOL FOR FIRE»», 36523, True ),
( (0x1F702,  0x3F, ), Q«« (🜂) ALCHEMICAL SYMBOL FOR FIRE»», 36524, True ),
( (0x1F702,  0x61, ), Q«« (🜂) ALCHEMICAL SYMBOL FOR FIRE»», 36525, True ),
( (0x1F702,  0x41, ), Q«« (🜂) ALCHEMICAL SYMBOL FOR FIRE»», 36526, True ),
( (0x1F702,  0x62, ), Q«« (🜂) ALCHEMICAL SYMBOL FOR FIRE»», 36527, True ),
( (0x1F703,  0x21, ), Q«« (🜃) ALCHEMICAL SYMBOL FOR EARTH»», 36528, True ),
( (0x1F703,  0x3F, ), Q«« (🜃) ALCHEMICAL SYMBOL FOR EARTH»», 36529, True ),
( (0x1F703,  0x61, ), Q«« (🜃) ALCHEMICAL SYMBOL FOR EARTH»», 36530, True ),
( (0x1F703,  0x41, ), Q«« (🜃) ALCHEMICAL SYMBOL FOR EARTH»», 36531, True ),
( (0x1F703,  0x62, ), Q«« (🜃) ALCHEMICAL SYMBOL FOR EARTH»», 36532, True ),
( (0x1F704,  0x21, ), Q«« (🜄) ALCHEMICAL SYMBOL FOR WATER»», 36533, True ),
( (0x1F704,  0x3F, ), Q«« (🜄) ALCHEMICAL SYMBOL FOR WATER»», 36534, True ),
( (0x1F704,  0x61, ), Q«« (🜄) ALCHEMICAL SYMBOL FOR WATER»», 36535, True ),
( (0x1F704,  0x41, ), Q«« (🜄) ALCHEMICAL SYMBOL FOR WATER»», 36536, True ),
( (0x1F704,  0x62, ), Q«« (🜄) ALCHEMICAL SYMBOL FOR WATER»», 36537, True ),
( (0x1F705,  0x21, ), Q«« (🜅) ALCHEMICAL SYMBOL FOR AQUAFORTIS»», 36538, True ),
( (0x1F705,  0x3F, ), Q«« (🜅) ALCHEMICAL SYMBOL FOR AQUAFORTIS»», 36539, True ),
( (0x1F705,  0x61, ), Q«« (🜅) ALCHEMICAL SYMBOL FOR AQUAFORTIS»», 36540, True ),
( (0x1F705,  0x41, ), Q«« (🜅) ALCHEMICAL SYMBOL FOR AQUAFORTIS»», 36541, True ),
( (0x1F705,  0x62, ), Q«« (🜅) ALCHEMICAL SYMBOL FOR AQUAFORTIS»», 36542, True ),
( (0x1F706,  0x21, ), Q«« (🜆) ALCHEMICAL SYMBOL FOR AQUA REGIA»», 36543, True ),
( (0x1F706,  0x3F, ), Q«« (🜆) ALCHEMICAL SYMBOL FOR AQUA REGIA»», 36544, True ),
( (0x1F706,  0x61, ), Q«« (🜆) ALCHEMICAL SYMBOL FOR AQUA REGIA»», 36545, True ),
( (0x1F706,  0x41, ), Q«« (🜆) ALCHEMICAL SYMBOL FOR AQUA REGIA»», 36546, True ),
( (0x1F706,  0x62, ), Q«« (🜆) ALCHEMICAL SYMBOL FOR AQUA REGIA»», 36547, True ),
( (0x1F707,  0x21, ), Q«« (🜇) ALCHEMICAL SYMBOL FOR AQUA REGIA-2»», 36548, True ),
( (0x1F707,  0x3F, ), Q«« (🜇) ALCHEMICAL SYMBOL FOR AQUA REGIA-2»», 36549, True ),
( (0x1F707,  0x61, ), Q«« (🜇) ALCHEMICAL SYMBOL FOR AQUA REGIA-2»», 36550, True ),
( (0x1F707,  0x41, ), Q«« (🜇) ALCHEMICAL SYMBOL FOR AQUA REGIA-2»», 36551, True ),
( (0x1F707,  0x62, ), Q«« (🜇) ALCHEMICAL SYMBOL FOR AQUA REGIA-2»», 36552, True ),
( (0x1F708,  0x21, ), Q«« (🜈) ALCHEMICAL SYMBOL FOR AQUA VITAE»», 36553, True ),
( (0x1F708,  0x3F, ), Q«« (🜈) ALCHEMICAL SYMBOL FOR AQUA VITAE»», 36554, True ),
( (0x1F708,  0x61, ), Q«« (🜈) ALCHEMICAL SYMBOL FOR AQUA VITAE»», 36555, True ),
( (0x1F708,  0x41, ), Q«« (🜈) ALCHEMICAL SYMBOL FOR AQUA VITAE»», 36556, True ),
( (0x1F708,  0x62, ), Q«« (🜈) ALCHEMICAL SYMBOL FOR AQUA VITAE»», 36557, True ),
( (0x1F709,  0x21, ), Q«« (🜉) ALCHEMICAL SYMBOL FOR AQUA VITAE-2»», 36558, True ),
( (0x1F709,  0x3F, ), Q«« (🜉) ALCHEMICAL SYMBOL FOR AQUA VITAE-2»», 36559, True ),
( (0x1F709,  0x61, ), Q«« (🜉) ALCHEMICAL SYMBOL FOR AQUA VITAE-2»», 36560, True ),
( (0x1F709,  0x41, ), Q«« (🜉) ALCHEMICAL SYMBOL FOR AQUA VITAE-2»», 36561, True ),
( (0x1F709,  0x62, ), Q«« (🜉) ALCHEMICAL SYMBOL FOR AQUA VITAE-2»», 36562, True ),
( (0x1F70A,  0x21, ), Q«« (🜊) ALCHEMICAL SYMBOL FOR VINEGAR»», 36563, True ),
( (0x1F70A,  0x3F, ), Q«« (🜊) ALCHEMICAL SYMBOL FOR VINEGAR»», 36564, True ),
( (0x1F70A,  0x61, ), Q«« (🜊) ALCHEMICAL SYMBOL FOR VINEGAR»», 36565, True ),
( (0x1F70A,  0x41, ), Q«« (🜊) ALCHEMICAL SYMBOL FOR VINEGAR»», 36566, True ),
( (0x1F70A,  0x62, ), Q«« (🜊) ALCHEMICAL SYMBOL FOR VINEGAR»», 36567, True ),
( (0x1F70B,  0x21, ), Q«« (🜋) ALCHEMICAL SYMBOL FOR VINEGAR-2»», 36568, True ),
( (0x1F70B,  0x3F, ), Q«« (🜋) ALCHEMICAL SYMBOL FOR VINEGAR-2»», 36569, True ),
( (0x1F70B,  0x61, ), Q«« (🜋) ALCHEMICAL SYMBOL FOR VINEGAR-2»», 36570, True ),
( (0x1F70B,  0x41, ), Q«« (🜋) ALCHEMICAL SYMBOL FOR VINEGAR-2»», 36571, True ),
( (0x1F70B,  0x62, ), Q«« (🜋) ALCHEMICAL SYMBOL FOR VINEGAR-2»», 36572, True ),
( (0x1F70C,  0x21, ), Q«« (🜌) ALCHEMICAL SYMBOL FOR VINEGAR-3»», 36573, True ),
( (0x1F70C,  0x3F, ), Q«« (🜌) ALCHEMICAL SYMBOL FOR VINEGAR-3»», 36574, True ),
( (0x1F70C,  0x61, ), Q«« (🜌) ALCHEMICAL SYMBOL FOR VINEGAR-3»», 36575, True ),
( (0x1F70C,  0x41, ), Q«« (🜌) ALCHEMICAL SYMBOL FOR VINEGAR-3»», 36576, True ),
( (0x1F70C,  0x62, ), Q«« (🜌) ALCHEMICAL SYMBOL FOR VINEGAR-3»», 36577, True ),
( (0x1F70D,  0x21, ), Q«« (🜍) ALCHEMICAL SYMBOL FOR SULFUR»», 36578, True ),
( (0x1F70D,  0x3F, ), Q«« (🜍) ALCHEMICAL SYMBOL FOR SULFUR»», 36579, True ),
( (0x1F70D,  0x61, ), Q«« (🜍) ALCHEMICAL SYMBOL FOR SULFUR»», 36580, True ),
( (0x1F70D,  0x41, ), Q«« (🜍) ALCHEMICAL SYMBOL FOR SULFUR»», 36581, True ),
( (0x1F70D,  0x62, ), Q«« (🜍) ALCHEMICAL SYMBOL FOR SULFUR»», 36582, True ),
( (0x1F70E,  0x21, ), Q«« (🜎) ALCHEMICAL SYMBOL FOR PHILOSOPHERS SULFUR»», 36583, True ),
( (0x1F70E,  0x3F, ), Q«« (🜎) ALCHEMICAL SYMBOL FOR PHILOSOPHERS SULFUR»», 36584, True ),
( (0x1F70E,  0x61, ), Q«« (🜎) ALCHEMICAL SYMBOL FOR PHILOSOPHERS SULFUR»», 36585, True ),
( (0x1F70E,  0x41, ), Q«« (🜎) ALCHEMICAL SYMBOL FOR PHILOSOPHERS SULFUR»», 36586, True ),
( (0x1F70E,  0x62, ), Q«« (🜎) ALCHEMICAL SYMBOL FOR PHILOSOPHERS SULFUR»», 36587, True ),
( (0x1F70F,  0x21, ), Q«« (🜏) ALCHEMICAL SYMBOL FOR BLACK SULFUR»», 36588, True ),
( (0x1F70F,  0x3F, ), Q«« (🜏) ALCHEMICAL SYMBOL FOR BLACK SULFUR»», 36589, True ),
( (0x1F70F,  0x61, ), Q«« (🜏) ALCHEMICAL SYMBOL FOR BLACK SULFUR»», 36590, True ),
( (0x1F70F,  0x41, ), Q«« (🜏) ALCHEMICAL SYMBOL FOR BLACK SULFUR»», 36591, True ),
( (0x1F70F,  0x62, ), Q«« (🜏) ALCHEMICAL SYMBOL FOR BLACK SULFUR»», 36592, True ),
( (0x1F710,  0x21, ), Q«« (🜐) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE»», 36593, True ),
( (0x1F710,  0x3F, ), Q«« (🜐) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE»», 36594, True ),
( (0x1F710,  0x61, ), Q«« (🜐) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE»», 36595, True ),
( (0x1F710,  0x41, ), Q«« (🜐) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE»», 36596, True ),
( (0x1F710,  0x62, ), Q«« (🜐) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE»», 36597, True ),
( (0x1F711,  0x21, ), Q«« (🜑) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-2»», 36598, True ),
( (0x1F711,  0x3F, ), Q«« (🜑) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-2»», 36599, True ),
( (0x1F711,  0x61, ), Q«« (🜑) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-2»», 36600, True ),
( (0x1F711,  0x41, ), Q«« (🜑) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-2»», 36601, True ),
( (0x1F711,  0x62, ), Q«« (🜑) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-2»», 36602, True ),
( (0x1F712,  0x21, ), Q«« (🜒) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-3»», 36603, True ),
( (0x1F712,  0x3F, ), Q«« (🜒) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-3»», 36604, True ),
( (0x1F712,  0x61, ), Q«« (🜒) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-3»», 36605, True ),
( (0x1F712,  0x41, ), Q«« (🜒) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-3»», 36606, True ),
( (0x1F712,  0x62, ), Q«« (🜒) ALCHEMICAL SYMBOL FOR MERCURY SUBLIMATE-3»», 36607, True ),
( (0x1F713,  0x21, ), Q«« (🜓) ALCHEMICAL SYMBOL FOR CINNABAR»», 36608, True ),
( (0x1F713,  0x3F, ), Q«« (🜓) ALCHEMICAL SYMBOL FOR CINNABAR»», 36609, True ),
( (0x1F713,  0x61, ), Q«« (🜓) ALCHEMICAL SYMBOL FOR CINNABAR»», 36610, True ),
( (0x1F713,  0x41, ), Q«« (🜓) ALCHEMICAL SYMBOL FOR CINNABAR»», 36611, True ),
( (0x1F713,  0x62, ), Q«« (🜓) ALCHEMICAL SYMBOL FOR CINNABAR»», 36612, True ),
( (0x1F714,  0x21, ), Q«« (🜔) ALCHEMICAL SYMBOL FOR SALT»», 36613, True ),
( (0x1F714,  0x3F, ), Q«« (🜔) ALCHEMICAL SYMBOL FOR SALT»», 36614, True ),
( (0x1F714,  0x61, ), Q«« (🜔) ALCHEMICAL SYMBOL FOR SALT»», 36615, True ),
( (0x1F714,  0x41, ), Q«« (🜔) ALCHEMICAL SYMBOL FOR SALT»», 36616, True ),
( (0x1F714,  0x62, ), Q«« (🜔) ALCHEMICAL SYMBOL FOR SALT»», 36617, True ),
( (0x1F715,  0x21, ), Q«« (🜕) ALCHEMICAL SYMBOL FOR NITRE»», 36618, True ),
( (0x1F715,  0x3F, ), Q«« (🜕) ALCHEMICAL SYMBOL FOR NITRE»», 36619, True ),
( (0x1F715,  0x61, ), Q«« (🜕) ALCHEMICAL SYMBOL FOR NITRE»», 36620, True ),
( (0x1F715,  0x41, ), Q«« (🜕) ALCHEMICAL SYMBOL FOR NITRE»», 36621, True ),
( (0x1F715,  0x62, ), Q«« (🜕) ALCHEMICAL SYMBOL FOR NITRE»», 36622, True ),
( (0x1F716,  0x21, ), Q«« (🜖) ALCHEMICAL SYMBOL FOR VITRIOL»», 36623, True ),
( (0x1F716,  0x3F, ), Q«« (🜖) ALCHEMICAL SYMBOL FOR VITRIOL»», 36624, True ),
( (0x1F716,  0x61, ), Q«« (🜖) ALCHEMICAL SYMBOL FOR VITRIOL»», 36625, True ),
( (0x1F716,  0x41, ), Q«« (🜖) ALCHEMICAL SYMBOL FOR VITRIOL»», 36626, True ),
( (0x1F716,  0x62, ), Q«« (🜖) ALCHEMICAL SYMBOL FOR VITRIOL»», 36627, True ),
( (0x1F717,  0x21, ), Q«« (🜗) ALCHEMICAL SYMBOL FOR VITRIOL-2»», 36628, True ),
( (0x1F717,  0x3F, ), Q«« (🜗) ALCHEMICAL SYMBOL FOR VITRIOL-2»», 36629, True ),
( (0x1F717,  0x61, ), Q«« (🜗) ALCHEMICAL SYMBOL FOR VITRIOL-2»», 36630, True ),
( (0x1F717,  0x41, ), Q«« (🜗) ALCHEMICAL SYMBOL FOR VITRIOL-2»», 36631, True ),
( (0x1F717,  0x62, ), Q«« (🜗) ALCHEMICAL SYMBOL FOR VITRIOL-2»», 36632, True ),
( (0x1F718,  0x21, ), Q«« (🜘) ALCHEMICAL SYMBOL FOR ROCK SALT»», 36633, True ),
( (0x1F718,  0x3F, ), Q«« (🜘) ALCHEMICAL SYMBOL FOR ROCK SALT»», 36634, True ),
( (0x1F718,  0x61, ), Q«« (🜘) ALCHEMICAL SYMBOL FOR ROCK SALT»», 36635, True ),
( (0x1F718,  0x41, ), Q«« (🜘) ALCHEMICAL SYMBOL FOR ROCK SALT»», 36636, True ),
( (0x1F718,  0x62, ), Q«« (🜘) ALCHEMICAL SYMBOL FOR ROCK SALT»», 36637, True ),
( (0x1F719,  0x21, ), Q«« (🜙) ALCHEMICAL SYMBOL FOR ROCK SALT-2»», 36638, True ),
( (0x1F719,  0x3F, ), Q«« (🜙) ALCHEMICAL SYMBOL FOR ROCK SALT-2»», 36639, True ),
( (0x1F719,  0x61, ), Q«« (🜙) ALCHEMICAL SYMBOL FOR ROCK SALT-2»», 36640, True ),
( (0x1F719,  0x41, ), Q«« (🜙) ALCHEMICAL SYMBOL FOR ROCK SALT-2»», 36641, True ),
( (0x1F719,  0x62, ), Q«« (🜙) ALCHEMICAL SYMBOL FOR ROCK SALT-2»», 36642, True ),
( (0x1F71A,  0x21, ), Q«« (🜚) ALCHEMICAL SYMBOL FOR GOLD»», 36643, True ),
( (0x1F71A,  0x3F, ), Q«« (🜚) ALCHEMICAL SYMBOL FOR GOLD»», 36644, True ),
( (0x1F71A,  0x61, ), Q«« (🜚) ALCHEMICAL SYMBOL FOR GOLD»», 36645, True ),
( (0x1F71A,  0x41, ), Q«« (🜚) ALCHEMICAL SYMBOL FOR GOLD»», 36646, True ),
( (0x1F71A,  0x62, ), Q«« (🜚) ALCHEMICAL SYMBOL FOR GOLD»», 36647, True ),
( (0x1F71B,  0x21, ), Q«« (🜛) ALCHEMICAL SYMBOL FOR SILVER»», 36648, True ),
( (0x1F71B,  0x3F, ), Q«« (🜛) ALCHEMICAL SYMBOL FOR SILVER»», 36649, True ),
( (0x1F71B,  0x61, ), Q«« (🜛) ALCHEMICAL SYMBOL FOR SILVER»», 36650, True ),
( (0x1F71B,  0x41, ), Q«« (🜛) ALCHEMICAL SYMBOL FOR SILVER»», 36651, True ),
( (0x1F71B,  0x62, ), Q«« (🜛) ALCHEMICAL SYMBOL FOR SILVER»», 36652, True ),
( (0x1F71C,  0x21, ), Q«« (🜜) ALCHEMICAL SYMBOL FOR IRON ORE»», 36653, True ),
( (0x1F71C,  0x3F, ), Q«« (🜜) ALCHEMICAL SYMBOL FOR IRON ORE»», 36654, True ),
( (0x1F71C,  0x61, ), Q«« (🜜) ALCHEMICAL SYMBOL FOR IRON ORE»», 36655, True ),
( (0x1F71C,  0x41, ), Q«« (🜜) ALCHEMICAL SYMBOL FOR IRON ORE»», 36656, True ),
( (0x1F71C,  0x62, ), Q«« (🜜) ALCHEMICAL SYMBOL FOR IRON ORE»», 36657, True ),
( (0x1F71D,  0x21, ), Q«« (🜝) ALCHEMICAL SYMBOL FOR IRON ORE-2»», 36658, True ),
( (0x1F71D,  0x3F, ), Q«« (🜝) ALCHEMICAL SYMBOL FOR IRON ORE-2»», 36659, True ),
( (0x1F71D,  0x61, ), Q«« (🜝) ALCHEMICAL SYMBOL FOR IRON ORE-2»», 36660, True ),
( (0x1F71D,  0x41, ), Q«« (🜝) ALCHEMICAL SYMBOL FOR IRON ORE-2»», 36661, True ),
( (0x1F71D,  0x62, ), Q«« (🜝) ALCHEMICAL SYMBOL FOR IRON ORE-2»», 36662, True ),
( (0x1F71E,  0x21, ), Q«« (🜞) ALCHEMICAL SYMBOL FOR CROCUS OF IRON»», 36663, True ),
( (0x1F71E,  0x3F, ), Q«« (🜞) ALCHEMICAL SYMBOL FOR CROCUS OF IRON»», 36664, True ),
( (0x1F71E,  0x61, ), Q«« (🜞) ALCHEMICAL SYMBOL FOR CROCUS OF IRON»», 36665, True ),
( (0x1F71E,  0x41, ), Q«« (🜞) ALCHEMICAL SYMBOL FOR CROCUS OF IRON»», 36666, True ),
( (0x1F71E,  0x62, ), Q«« (🜞) ALCHEMICAL SYMBOL FOR CROCUS OF IRON»», 36667, True ),
( (0x1F71F,  0x21, ), Q«« (🜟) ALCHEMICAL SYMBOL FOR REGULUS OF IRON»», 36668, True ),
( (0x1F71F,  0x3F, ), Q«« (🜟) ALCHEMICAL SYMBOL FOR REGULUS OF IRON»», 36669, True ),
( (0x1F71F,  0x61, ), Q«« (🜟) ALCHEMICAL SYMBOL FOR REGULUS OF IRON»», 36670, True ),
( (0x1F71F,  0x41, ), Q«« (🜟) ALCHEMICAL SYMBOL FOR REGULUS OF IRON»», 36671, True ),
( (0x1F71F,  0x62, ), Q«« (🜟) ALCHEMICAL SYMBOL FOR REGULUS OF IRON»», 36672, True ),
( (0x1F720,  0x21, ), Q«« (🜠) ALCHEMICAL SYMBOL FOR COPPER ORE»», 36673, True ),
( (0x1F720,  0x3F, ), Q«« (🜠) ALCHEMICAL SYMBOL FOR COPPER ORE»», 36674, True ),
( (0x1F720,  0x61, ), Q«« (🜠) ALCHEMICAL SYMBOL FOR COPPER ORE»», 36675, True ),
( (0x1F720,  0x41, ), Q«« (🜠) ALCHEMICAL SYMBOL FOR COPPER ORE»», 36676, True ),
( (0x1F720,  0x62, ), Q«« (🜠) ALCHEMICAL SYMBOL FOR COPPER ORE»», 36677, True ),
( (0x1F721,  0x21, ), Q«« (🜡) ALCHEMICAL SYMBOL FOR IRON-COPPER ORE»», 36678, True ),
( (0x1F721,  0x3F, ), Q«« (🜡) ALCHEMICAL SYMBOL FOR IRON-COPPER ORE»», 36679, True ),
( (0x1F721,  0x61, ), Q«« (🜡) ALCHEMICAL SYMBOL FOR IRON-COPPER ORE»», 36680, True ),
( (0x1F721,  0x41, ), Q«« (🜡) ALCHEMICAL SYMBOL FOR IRON-COPPER ORE»», 36681, True ),
( (0x1F721,  0x62, ), Q«« (🜡) ALCHEMICAL SYMBOL FOR IRON-COPPER ORE»», 36682, True ),
( (0x1F722,  0x21, ), Q«« (🜢) ALCHEMICAL SYMBOL FOR SUBLIMATE OF COPPER»», 36683, True ),
( (0x1F722,  0x3F, ), Q«« (🜢) ALCHEMICAL SYMBOL FOR SUBLIMATE OF COPPER»», 36684, True ),
( (0x1F722,  0x61, ), Q«« (🜢) ALCHEMICAL SYMBOL FOR SUBLIMATE OF COPPER»», 36685, True ),
( (0x1F722,  0x41, ), Q«« (🜢) ALCHEMICAL SYMBOL FOR SUBLIMATE OF COPPER»», 36686, True ),
( (0x1F722,  0x62, ), Q«« (🜢) ALCHEMICAL SYMBOL FOR SUBLIMATE OF COPPER»», 36687, True ),
( (0x1F723,  0x21, ), Q«« (🜣) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER»», 36688, True ),
( (0x1F723,  0x3F, ), Q«« (🜣) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER»», 36689, True ),
( (0x1F723,  0x61, ), Q«« (🜣) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER»», 36690, True ),
( (0x1F723,  0x41, ), Q«« (🜣) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER»», 36691, True ),
( (0x1F723,  0x62, ), Q«« (🜣) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER»», 36692, True ),
( (0x1F724,  0x21, ), Q«« (🜤) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER-2»», 36693, True ),
( (0x1F724,  0x3F, ), Q«« (🜤) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER-2»», 36694, True ),
( (0x1F724,  0x61, ), Q«« (🜤) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER-2»», 36695, True ),
( (0x1F724,  0x41, ), Q«« (🜤) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER-2»», 36696, True ),
( (0x1F724,  0x62, ), Q«« (🜤) ALCHEMICAL SYMBOL FOR CROCUS OF COPPER-2»», 36697, True ),
( (0x1F725,  0x21, ), Q«« (🜥) ALCHEMICAL SYMBOL FOR COPPER ANTIMONIATE»», 36698, True ),
( (0x1F725,  0x3F, ), Q«« (🜥) ALCHEMICAL SYMBOL FOR COPPER ANTIMONIATE»», 36699, True ),
( (0x1F725,  0x61, ), Q«« (🜥) ALCHEMICAL SYMBOL FOR COPPER ANTIMONIATE»», 36700, True ),
( (0x1F725,  0x41, ), Q«« (🜥) ALCHEMICAL SYMBOL FOR COPPER ANTIMONIATE»», 36701, True ),
( (0x1F725,  0x62, ), Q«« (🜥) ALCHEMICAL SYMBOL FOR COPPER ANTIMONIATE»», 36702, True ),
( (0x1F726,  0x21, ), Q«« (🜦) ALCHEMICAL SYMBOL FOR SALT OF COPPER ANTIMONIATE»», 36703, True ),
( (0x1F726,  0x3F, ), Q«« (🜦) ALCHEMICAL SYMBOL FOR SALT OF COPPER ANTIMONIATE»», 36704, True ),
( (0x1F726,  0x61, ), Q«« (🜦) ALCHEMICAL SYMBOL FOR SALT OF COPPER ANTIMONIATE»», 36705, True ),
( (0x1F726,  0x41, ), Q«« (🜦) ALCHEMICAL SYMBOL FOR SALT OF COPPER ANTIMONIATE»», 36706, True ),
( (0x1F726,  0x62, ), Q«« (🜦) ALCHEMICAL SYMBOL FOR SALT OF COPPER ANTIMONIATE»», 36707, True ),
( (0x1F727,  0x21, ), Q«« (🜧) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF COPPER»», 36708, True ),
( (0x1F727,  0x3F, ), Q«« (🜧) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF COPPER»», 36709, True ),
( (0x1F727,  0x61, ), Q«« (🜧) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF COPPER»», 36710, True ),
( (0x1F727,  0x41, ), Q«« (🜧) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF COPPER»», 36711, True ),
( (0x1F727,  0x62, ), Q«« (🜧) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF COPPER»», 36712, True ),
( (0x1F728,  0x21, ), Q«« (🜨) ALCHEMICAL SYMBOL FOR VERDIGRIS»», 36713, True ),
( (0x1F728,  0x3F, ), Q«« (🜨) ALCHEMICAL SYMBOL FOR VERDIGRIS»», 36714, True ),
( (0x1F728,  0x61, ), Q«« (🜨) ALCHEMICAL SYMBOL FOR VERDIGRIS»», 36715, True ),
( (0x1F728,  0x41, ), Q«« (🜨) ALCHEMICAL SYMBOL FOR VERDIGRIS»», 36716, True ),
( (0x1F728,  0x62, ), Q«« (🜨) ALCHEMICAL SYMBOL FOR VERDIGRIS»», 36717, True ),
( (0x1F729,  0x21, ), Q«« (🜩) ALCHEMICAL SYMBOL FOR TIN ORE»», 36718, True ),
( (0x1F729,  0x3F, ), Q«« (🜩) ALCHEMICAL SYMBOL FOR TIN ORE»», 36719, True ),
( (0x1F729,  0x61, ), Q«« (🜩) ALCHEMICAL SYMBOL FOR TIN ORE»», 36720, True ),
( (0x1F729,  0x41, ), Q«« (🜩) ALCHEMICAL SYMBOL FOR TIN ORE»», 36721, True ),
( (0x1F729,  0x62, ), Q«« (🜩) ALCHEMICAL SYMBOL FOR TIN ORE»», 36722, True ),
( (0x1F72A,  0x21, ), Q«« (🜪) ALCHEMICAL SYMBOL FOR LEAD ORE»», 36723, True ),
( (0x1F72A,  0x3F, ), Q«« (🜪) ALCHEMICAL SYMBOL FOR LEAD ORE»», 36724, True ),
( (0x1F72A,  0x61, ), Q«« (🜪) ALCHEMICAL SYMBOL FOR LEAD ORE»», 36725, True ),
( (0x1F72A,  0x41, ), Q«« (🜪) ALCHEMICAL SYMBOL FOR LEAD ORE»», 36726, True ),
( (0x1F72A,  0x62, ), Q«« (🜪) ALCHEMICAL SYMBOL FOR LEAD ORE»», 36727, True ),
( (0x1F72B,  0x21, ), Q«« (🜫) ALCHEMICAL SYMBOL FOR ANTIMONY ORE»», 36728, True ),
( (0x1F72B,  0x3F, ), Q«« (🜫) ALCHEMICAL SYMBOL FOR ANTIMONY ORE»», 36729, True ),
( (0x1F72B,  0x61, ), Q«« (🜫) ALCHEMICAL SYMBOL FOR ANTIMONY ORE»», 36730, True ),
( (0x1F72B,  0x41, ), Q«« (🜫) ALCHEMICAL SYMBOL FOR ANTIMONY ORE»», 36731, True ),
( (0x1F72B,  0x62, ), Q«« (🜫) ALCHEMICAL SYMBOL FOR ANTIMONY ORE»», 36732, True ),
( (0x1F72C,  0x21, ), Q«« (🜬) ALCHEMICAL SYMBOL FOR SUBLIMATE OF ANTIMONY»», 36733, True ),
( (0x1F72C,  0x3F, ), Q«« (🜬) ALCHEMICAL SYMBOL FOR SUBLIMATE OF ANTIMONY»», 36734, True ),
( (0x1F72C,  0x61, ), Q«« (🜬) ALCHEMICAL SYMBOL FOR SUBLIMATE OF ANTIMONY»», 36735, True ),
( (0x1F72C,  0x41, ), Q«« (🜬) ALCHEMICAL SYMBOL FOR SUBLIMATE OF ANTIMONY»», 36736, True ),
( (0x1F72C,  0x62, ), Q«« (🜬) ALCHEMICAL SYMBOL FOR SUBLIMATE OF ANTIMONY»», 36737, True ),
( (0x1F72D,  0x21, ), Q«« (🜭) ALCHEMICAL SYMBOL FOR SALT OF ANTIMONY»», 36738, True ),
( (0x1F72D,  0x3F, ), Q«« (🜭) ALCHEMICAL SYMBOL FOR SALT OF ANTIMONY»», 36739, True ),
( (0x1F72D,  0x61, ), Q«« (🜭) ALCHEMICAL SYMBOL FOR SALT OF ANTIMONY»», 36740, True ),
( (0x1F72D,  0x41, ), Q«« (🜭) ALCHEMICAL SYMBOL FOR SALT OF ANTIMONY»», 36741, True ),
( (0x1F72D,  0x62, ), Q«« (🜭) ALCHEMICAL SYMBOL FOR SALT OF ANTIMONY»», 36742, True ),
( (0x1F72E,  0x21, ), Q«« (🜮) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF ANTIMONY»», 36743, True ),
( (0x1F72E,  0x3F, ), Q«« (🜮) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF ANTIMONY»», 36744, True ),
( (0x1F72E,  0x61, ), Q«« (🜮) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF ANTIMONY»», 36745, True ),
( (0x1F72E,  0x41, ), Q«« (🜮) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF ANTIMONY»», 36746, True ),
( (0x1F72E,  0x62, ), Q«« (🜮) ALCHEMICAL SYMBOL FOR SUBLIMATE OF SALT OF ANTIMONY»», 36747, True ),
( (0x1F72F,  0x21, ), Q«« (🜯) ALCHEMICAL SYMBOL FOR VINEGAR OF ANTIMONY»», 36748, True ),
( (0x1F72F,  0x3F, ), Q«« (🜯) ALCHEMICAL SYMBOL FOR VINEGAR OF ANTIMONY»», 36749, True ),
( (0x1F72F,  0x61, ), Q«« (🜯) ALCHEMICAL SYMBOL FOR VINEGAR OF ANTIMONY»», 36750, True ),
( (0x1F72F,  0x41, ), Q«« (🜯) ALCHEMICAL SYMBOL FOR VINEGAR OF ANTIMONY»», 36751, True ),
( (0x1F72F,  0x62, ), Q«« (🜯) ALCHEMICAL SYMBOL FOR VINEGAR OF ANTIMONY»», 36752, True ),
( (0x1F730,  0x21, ), Q«« (🜰) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY»», 36753, True ),
( (0x1F730,  0x3F, ), Q«« (🜰) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY»», 36754, True ),
( (0x1F730,  0x61, ), Q«« (🜰) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY»», 36755, True ),
( (0x1F730,  0x41, ), Q«« (🜰) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY»», 36756, True ),
( (0x1F730,  0x62, ), Q«« (🜰) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY»», 36757, True ),
( (0x1F731,  0x21, ), Q«« (🜱) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY-2»», 36758, True ),
( (0x1F731,  0x3F, ), Q«« (🜱) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY-2»», 36759, True ),
( (0x1F731,  0x61, ), Q«« (🜱) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY-2»», 36760, True ),
( (0x1F731,  0x41, ), Q«« (🜱) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY-2»», 36761, True ),
( (0x1F731,  0x62, ), Q«« (🜱) ALCHEMICAL SYMBOL FOR REGULUS OF ANTIMONY-2»», 36762, True ),
( (0x1F732,  0x21, ), Q«« (🜲) ALCHEMICAL SYMBOL FOR REGULUS»», 36763, True ),
( (0x1F732,  0x3F, ), Q«« (🜲) ALCHEMICAL SYMBOL FOR REGULUS»», 36764, True ),
( (0x1F732,  0x61, ), Q«« (🜲) ALCHEMICAL SYMBOL FOR REGULUS»», 36765, True ),
( (0x1F732,  0x41, ), Q«« (🜲) ALCHEMICAL SYMBOL FOR REGULUS»», 36766, True ),
( (0x1F732,  0x62, ), Q«« (🜲) ALCHEMICAL SYMBOL FOR REGULUS»», 36767, True ),
( (0x1F733,  0x21, ), Q«« (🜳) ALCHEMICAL SYMBOL FOR REGULUS-2»», 36768, True ),
( (0x1F733,  0x3F, ), Q«« (🜳) ALCHEMICAL SYMBOL FOR REGULUS-2»», 36769, True ),
( (0x1F733,  0x61, ), Q«« (🜳) ALCHEMICAL SYMBOL FOR REGULUS-2»», 36770, True ),
( (0x1F733,  0x41, ), Q«« (🜳) ALCHEMICAL SYMBOL FOR REGULUS-2»», 36771, True ),
( (0x1F733,  0x62, ), Q«« (🜳) ALCHEMICAL SYMBOL FOR REGULUS-2»», 36772, True ),
( (0x1F734,  0x21, ), Q«« (🜴) ALCHEMICAL SYMBOL FOR REGULUS-3»», 36773, True ),
( (0x1F734,  0x3F, ), Q«« (🜴) ALCHEMICAL SYMBOL FOR REGULUS-3»», 36774, True ),
( (0x1F734,  0x61, ), Q«« (🜴) ALCHEMICAL SYMBOL FOR REGULUS-3»», 36775, True ),
( (0x1F734,  0x41, ), Q«« (🜴) ALCHEMICAL SYMBOL FOR REGULUS-3»», 36776, True ),
( (0x1F734,  0x62, ), Q«« (🜴) ALCHEMICAL SYMBOL FOR REGULUS-3»», 36777, True ),
( (0x1F735,  0x21, ), Q«« (🜵) ALCHEMICAL SYMBOL FOR REGULUS-4»», 36778, True ),
( (0x1F735,  0x3F, ), Q«« (🜵) ALCHEMICAL SYMBOL FOR REGULUS-4»», 36779, True ),
( (0x1F735,  0x61, ), Q«« (🜵) ALCHEMICAL SYMBOL FOR REGULUS-4»», 36780, True ),
( (0x1F735,  0x41, ), Q«« (🜵) ALCHEMICAL SYMBOL FOR REGULUS-4»», 36781, True ),
( (0x1F735,  0x62, ), Q«« (🜵) ALCHEMICAL SYMBOL FOR REGULUS-4»», 36782, True ),
( (0x1F736,  0x21, ), Q«« (🜶) ALCHEMICAL SYMBOL FOR ALKALI»», 36783, True ),
( (0x1F736,  0x3F, ), Q«« (🜶) ALCHEMICAL SYMBOL FOR ALKALI»», 36784, True ),
( (0x1F736,  0x61, ), Q«« (🜶) ALCHEMICAL SYMBOL FOR ALKALI»», 36785, True ),
( (0x1F736,  0x41, ), Q«« (🜶) ALCHEMICAL SYMBOL FOR ALKALI»», 36786, True ),
( (0x1F736,  0x62, ), Q«« (🜶) ALCHEMICAL SYMBOL FOR ALKALI»», 36787, True ),
( (0x1F737,  0x21, ), Q«« (🜷) ALCHEMICAL SYMBOL FOR ALKALI-2»», 36788, True ),
( (0x1F737,  0x3F, ), Q«« (🜷) ALCHEMICAL SYMBOL FOR ALKALI-2»», 36789, True ),
( (0x1F737,  0x61, ), Q«« (🜷) ALCHEMICAL SYMBOL FOR ALKALI-2»», 36790, True ),
( (0x1F737,  0x41, ), Q«« (🜷) ALCHEMICAL SYMBOL FOR ALKALI-2»», 36791, True ),
( (0x1F737,  0x62, ), Q«« (🜷) ALCHEMICAL SYMBOL FOR ALKALI-2»», 36792, True ),
( (0x1F738,  0x21, ), Q«« (🜸) ALCHEMICAL SYMBOL FOR MARCASITE»», 36793, True ),
( (0x1F738,  0x3F, ), Q«« (🜸) ALCHEMICAL SYMBOL FOR MARCASITE»», 36794, True ),
( (0x1F738,  0x61, ), Q«« (🜸) ALCHEMICAL SYMBOL FOR MARCASITE»», 36795, True ),
( (0x1F738,  0x41, ), Q«« (🜸) ALCHEMICAL SYMBOL FOR MARCASITE»», 36796, True ),
( (0x1F738,  0x62, ), Q«« (🜸) ALCHEMICAL SYMBOL FOR MARCASITE»», 36797, True ),
( (0x1F739,  0x21, ), Q«« (🜹) ALCHEMICAL SYMBOL FOR SAL-AMMONIAC»», 36798, True ),
( (0x1F739,  0x3F, ), Q«« (🜹) ALCHEMICAL SYMBOL FOR SAL-AMMONIAC»», 36799, True ),
( (0x1F739,  0x61, ), Q«« (🜹) ALCHEMICAL SYMBOL FOR SAL-AMMONIAC»», 36800, True ),
( (0x1F739,  0x41, ), Q«« (🜹) ALCHEMICAL SYMBOL FOR SAL-AMMONIAC»», 36801, True ),
( (0x1F739,  0x62, ), Q«« (🜹) ALCHEMICAL SYMBOL FOR SAL-AMMONIAC»», 36802, True ),
( (0x1F73A,  0x21, ), Q«« (🜺) ALCHEMICAL SYMBOL FOR ARSENIC»», 36803, True ),
( (0x1F73A,  0x3F, ), Q«« (🜺) ALCHEMICAL SYMBOL FOR ARSENIC»», 36804, True ),
( (0x1F73A,  0x61, ), Q«« (🜺) ALCHEMICAL SYMBOL FOR ARSENIC»», 36805, True ),
( (0x1F73A,  0x41, ), Q«« (🜺) ALCHEMICAL SYMBOL FOR ARSENIC»», 36806, True ),
( (0x1F73A,  0x62, ), Q«« (🜺) ALCHEMICAL SYMBOL FOR ARSENIC»», 36807, True ),
( (0x1F73B,  0x21, ), Q«« (🜻) ALCHEMICAL SYMBOL FOR REALGAR»», 36808, True ),;
use Test;
plan 2001;
use Test;
my @failed;
for ^(@a - 1) {
    todo 1 if !@a[$_][3];
    is-deeply Uni.new(@a[$_][0]).Str unicmp Uni.new(@a[$_+1][0]).Str, Less, "{@a[$_][1]} Line {@a[$_][2]} <=> {@a[$_+1][1]} Line {@a[$_+1][2]}" or @failed.push: ($_+1);
}
say "Failed: ", (@failed.join(", ") or "none");

