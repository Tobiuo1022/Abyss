# Generated with GenerateCollationTest.p6
my @a = 
( (0x1F543,  0x41, ), Q«« (🕃) NOTCHED LEFT SEMICIRCLE WITH THREE DOTS»», 32806, True ),
( (0x1F543,  0x62, ), Q«« (🕃) NOTCHED LEFT SEMICIRCLE WITH THREE DOTS»», 32807, True ),
( (0x1F544,  0x21, ), Q«« (🕄) NOTCHED RIGHT SEMICIRCLE WITH THREE DOTS»», 32808, True ),
( (0x1F544,  0x3F, ), Q«« (🕄) NOTCHED RIGHT SEMICIRCLE WITH THREE DOTS»», 32809, True ),
( (0x1F544,  0x61, ), Q«« (🕄) NOTCHED RIGHT SEMICIRCLE WITH THREE DOTS»», 32810, True ),
( (0x1F544,  0x41, ), Q«« (🕄) NOTCHED RIGHT SEMICIRCLE WITH THREE DOTS»», 32811, True ),
( (0x1F544,  0x62, ), Q«« (🕄) NOTCHED RIGHT SEMICIRCLE WITH THREE DOTS»», 32812, True ),
( (0x1F545,  0x21, ), Q«« (🕅) SYMBOL FOR MARKS CHAPTER»», 32813, True ),
( (0x1F545,  0x3F, ), Q«« (🕅) SYMBOL FOR MARKS CHAPTER»», 32814, True ),
( (0x1F545,  0x61, ), Q«« (🕅) SYMBOL FOR MARKS CHAPTER»», 32815, True ),
( (0x1F545,  0x41, ), Q«« (🕅) SYMBOL FOR MARKS CHAPTER»», 32816, True ),
( (0x1F545,  0x62, ), Q«« (🕅) SYMBOL FOR MARKS CHAPTER»», 32817, True ),
( (0x1F546,  0x21, ), Q«« (🕆) WHITE LATIN CROSS»», 32818, True ),
( (0x1F546,  0x3F, ), Q«« (🕆) WHITE LATIN CROSS»», 32819, True ),
( (0x1F546,  0x61, ), Q«« (🕆) WHITE LATIN CROSS»», 32820, True ),
( (0x1F546,  0x41, ), Q«« (🕆) WHITE LATIN CROSS»», 32821, True ),
( (0x1F546,  0x62, ), Q«« (🕆) WHITE LATIN CROSS»», 32822, True ),
( (0x1F547,  0x21, ), Q«« (🕇) HEAVY LATIN CROSS»», 32823, True ),
( (0x1F547,  0x3F, ), Q«« (🕇) HEAVY LATIN CROSS»», 32824, True ),
( (0x1F547,  0x61, ), Q«« (🕇) HEAVY LATIN CROSS»», 32825, True ),
( (0x1F547,  0x41, ), Q«« (🕇) HEAVY LATIN CROSS»», 32826, True ),
( (0x1F547,  0x62, ), Q«« (🕇) HEAVY LATIN CROSS»», 32827, True ),
( (0x1F548,  0x21, ), Q«« (🕈) CELTIC CROSS»», 32828, True ),
( (0x1F548,  0x3F, ), Q«« (🕈) CELTIC CROSS»», 32829, True ),
( (0x1F548,  0x61, ), Q«« (🕈) CELTIC CROSS»», 32830, True ),
( (0x1F548,  0x41, ), Q«« (🕈) CELTIC CROSS»», 32831, True ),
( (0x1F548,  0x62, ), Q«« (🕈) CELTIC CROSS»», 32832, True ),
( (0x1F549,  0x21, ), Q«« (🕉) OM SYMBOL»», 32833, True ),
( (0x1F549,  0x3F, ), Q«« (🕉) OM SYMBOL»», 32834, True ),
( (0x1F549,  0x61, ), Q«« (🕉) OM SYMBOL»», 32835, True ),
( (0x1F549,  0x41, ), Q«« (🕉) OM SYMBOL»», 32836, True ),
( (0x1F549,  0x62, ), Q«« (🕉) OM SYMBOL»», 32837, True ),
( (0x1F54A,  0x21, ), Q«« (🕊) DOVE OF PEACE»», 32838, True ),
( (0x1F54A,  0x3F, ), Q«« (🕊) DOVE OF PEACE»», 32839, True ),
( (0x1F54A,  0x61, ), Q«« (🕊) DOVE OF PEACE»», 32840, True ),
( (0x1F54A,  0x41, ), Q«« (🕊) DOVE OF PEACE»», 32841, True ),
( (0x1F54A,  0x62, ), Q«« (🕊) DOVE OF PEACE»», 32842, True ),
( (0x1F54B,  0x21, ), Q«« (🕋) KAABA»», 32843, True ),
( (0x1F54B,  0x3F, ), Q«« (🕋) KAABA»», 32844, True ),
( (0x1F54B,  0x61, ), Q«« (🕋) KAABA»», 32845, True ),
( (0x1F54B,  0x41, ), Q«« (🕋) KAABA»», 32846, True ),
( (0x1F54B,  0x62, ), Q«« (🕋) KAABA»», 32847, True ),
( (0x1F54C,  0x21, ), Q«« (🕌) MOSQUE»», 32848, True ),
( (0x1F54C,  0x3F, ), Q«« (🕌) MOSQUE»», 32849, True ),
( (0x1F54C,  0x61, ), Q«« (🕌) MOSQUE»», 32850, True ),
( (0x1F54C,  0x41, ), Q«« (🕌) MOSQUE»», 32851, True ),
( (0x1F54C,  0x62, ), Q«« (🕌) MOSQUE»», 32852, True ),
( (0x1F54D,  0x21, ), Q«« (🕍) SYNAGOGUE»», 32853, True ),
( (0x1F54D,  0x3F, ), Q«« (🕍) SYNAGOGUE»», 32854, True ),
( (0x1F54D,  0x61, ), Q«« (🕍) SYNAGOGUE»», 32855, True ),
( (0x1F54D,  0x41, ), Q«« (🕍) SYNAGOGUE»», 32856, True ),
( (0x1F54D,  0x62, ), Q«« (🕍) SYNAGOGUE»», 32857, True ),
( (0x1F54E,  0x21, ), Q«« (🕎) MENORAH WITH NINE BRANCHES»», 32858, True ),
( (0x1F54E,  0x3F, ), Q«« (🕎) MENORAH WITH NINE BRANCHES»», 32859, True ),
( (0x1F54E,  0x61, ), Q«« (🕎) MENORAH WITH NINE BRANCHES»», 32860, True ),
( (0x1F54E,  0x41, ), Q«« (🕎) MENORAH WITH NINE BRANCHES»», 32861, True ),
( (0x1F54E,  0x62, ), Q«« (🕎) MENORAH WITH NINE BRANCHES»», 32862, True ),
( (0x1F54F,  0x21, ), Q«« (🕏) BOWL OF HYGIEIA»», 32863, True ),
( (0x1F54F,  0x3F, ), Q«« (🕏) BOWL OF HYGIEIA»», 32864, True ),
( (0x1F54F,  0x61, ), Q«« (🕏) BOWL OF HYGIEIA»», 32865, True ),
( (0x1F54F,  0x41, ), Q«« (🕏) BOWL OF HYGIEIA»», 32866, True ),
( (0x1F54F,  0x62, ), Q«« (🕏) BOWL OF HYGIEIA»», 32867, True ),
( (0x1F550,  0x21, ), Q«« (🕐) CLOCK FACE ONE OCLOCK»», 32868, True ),
( (0x1F550,  0x3F, ), Q«« (🕐) CLOCK FACE ONE OCLOCK»», 32869, True ),
( (0x1F550,  0x61, ), Q«« (🕐) CLOCK FACE ONE OCLOCK»», 32870, True ),
( (0x1F550,  0x41, ), Q«« (🕐) CLOCK FACE ONE OCLOCK»», 32871, True ),
( (0x1F550,  0x62, ), Q«« (🕐) CLOCK FACE ONE OCLOCK»», 32872, True ),
( (0x1F551,  0x21, ), Q«« (🕑) CLOCK FACE TWO OCLOCK»», 32873, True ),
( (0x1F551,  0x3F, ), Q«« (🕑) CLOCK FACE TWO OCLOCK»», 32874, True ),
( (0x1F551,  0x61, ), Q«« (🕑) CLOCK FACE TWO OCLOCK»», 32875, True ),
( (0x1F551,  0x41, ), Q«« (🕑) CLOCK FACE TWO OCLOCK»», 32876, True ),
( (0x1F551,  0x62, ), Q«« (🕑) CLOCK FACE TWO OCLOCK»», 32877, True ),
( (0x1F552,  0x21, ), Q«« (🕒) CLOCK FACE THREE OCLOCK»», 32878, True ),
( (0x1F552,  0x3F, ), Q«« (🕒) CLOCK FACE THREE OCLOCK»», 32879, True ),
( (0x1F552,  0x61, ), Q«« (🕒) CLOCK FACE THREE OCLOCK»», 32880, True ),
( (0x1F552,  0x41, ), Q«« (🕒) CLOCK FACE THREE OCLOCK»», 32881, True ),
( (0x1F552,  0x62, ), Q«« (🕒) CLOCK FACE THREE OCLOCK»», 32882, True ),
( (0x1F553,  0x21, ), Q«« (🕓) CLOCK FACE FOUR OCLOCK»», 32883, True ),
( (0x1F553,  0x3F, ), Q«« (🕓) CLOCK FACE FOUR OCLOCK»», 32884, True ),
( (0x1F553,  0x61, ), Q«« (🕓) CLOCK FACE FOUR OCLOCK»», 32885, True ),
( (0x1F553,  0x41, ), Q«« (🕓) CLOCK FACE FOUR OCLOCK»», 32886, True ),
( (0x1F553,  0x62, ), Q«« (🕓) CLOCK FACE FOUR OCLOCK»», 32887, True ),
( (0x1F554,  0x21, ), Q«« (🕔) CLOCK FACE FIVE OCLOCK»», 32888, True ),
( (0x1F554,  0x3F, ), Q«« (🕔) CLOCK FACE FIVE OCLOCK»», 32889, True ),
( (0x1F554,  0x61, ), Q«« (🕔) CLOCK FACE FIVE OCLOCK»», 32890, True ),
( (0x1F554,  0x41, ), Q«« (🕔) CLOCK FACE FIVE OCLOCK»», 32891, True ),
( (0x1F554,  0x62, ), Q«« (🕔) CLOCK FACE FIVE OCLOCK»», 32892, True ),
( (0x1F555,  0x21, ), Q«« (🕕) CLOCK FACE SIX OCLOCK»», 32893, True ),
( (0x1F555,  0x3F, ), Q«« (🕕) CLOCK FACE SIX OCLOCK»», 32894, True ),
( (0x1F555,  0x61, ), Q«« (🕕) CLOCK FACE SIX OCLOCK»», 32895, True ),
( (0x1F555,  0x41, ), Q«« (🕕) CLOCK FACE SIX OCLOCK»», 32896, True ),
( (0x1F555,  0x62, ), Q«« (🕕) CLOCK FACE SIX OCLOCK»», 32897, True ),
( (0x1F556,  0x21, ), Q«« (🕖) CLOCK FACE SEVEN OCLOCK»», 32898, True ),
( (0x1F556,  0x3F, ), Q«« (🕖) CLOCK FACE SEVEN OCLOCK»», 32899, True ),
( (0x1F556,  0x61, ), Q«« (🕖) CLOCK FACE SEVEN OCLOCK»», 32900, True ),
( (0x1F556,  0x41, ), Q«« (🕖) CLOCK FACE SEVEN OCLOCK»», 32901, True ),
( (0x1F556,  0x62, ), Q«« (🕖) CLOCK FACE SEVEN OCLOCK»», 32902, True ),
( (0x1F557,  0x21, ), Q«« (🕗) CLOCK FACE EIGHT OCLOCK»», 32903, True ),
( (0x1F557,  0x3F, ), Q«« (🕗) CLOCK FACE EIGHT OCLOCK»», 32904, True ),
( (0x1F557,  0x61, ), Q«« (🕗) CLOCK FACE EIGHT OCLOCK»», 32905, True ),
( (0x1F557,  0x41, ), Q«« (🕗) CLOCK FACE EIGHT OCLOCK»», 32906, True ),
( (0x1F557,  0x62, ), Q«« (🕗) CLOCK FACE EIGHT OCLOCK»», 32907, True ),
( (0x1F558,  0x21, ), Q«« (🕘) CLOCK FACE NINE OCLOCK»», 32908, True ),
( (0x1F558,  0x3F, ), Q«« (🕘) CLOCK FACE NINE OCLOCK»», 32909, True ),
( (0x1F558,  0x61, ), Q«« (🕘) CLOCK FACE NINE OCLOCK»», 32910, True ),
( (0x1F558,  0x41, ), Q«« (🕘) CLOCK FACE NINE OCLOCK»», 32911, True ),
( (0x1F558,  0x62, ), Q«« (🕘) CLOCK FACE NINE OCLOCK»», 32912, True ),
( (0x1F559,  0x21, ), Q«« (🕙) CLOCK FACE TEN OCLOCK»», 32913, True ),
( (0x1F559,  0x3F, ), Q«« (🕙) CLOCK FACE TEN OCLOCK»», 32914, True ),
( (0x1F559,  0x61, ), Q«« (🕙) CLOCK FACE TEN OCLOCK»», 32915, True ),
( (0x1F559,  0x41, ), Q«« (🕙) CLOCK FACE TEN OCLOCK»», 32916, True ),
( (0x1F559,  0x62, ), Q«« (🕙) CLOCK FACE TEN OCLOCK»», 32917, True ),
( (0x1F55A,  0x21, ), Q«« (🕚) CLOCK FACE ELEVEN OCLOCK»», 32918, True ),
( (0x1F55A,  0x3F, ), Q«« (🕚) CLOCK FACE ELEVEN OCLOCK»», 32919, True ),
( (0x1F55A,  0x61, ), Q«« (🕚) CLOCK FACE ELEVEN OCLOCK»», 32920, True ),
( (0x1F55A,  0x41, ), Q«« (🕚) CLOCK FACE ELEVEN OCLOCK»», 32921, True ),
( (0x1F55A,  0x62, ), Q«« (🕚) CLOCK FACE ELEVEN OCLOCK»», 32922, True ),
( (0x1F55B,  0x21, ), Q«« (🕛) CLOCK FACE TWELVE OCLOCK»», 32923, True ),
( (0x1F55B,  0x3F, ), Q«« (🕛) CLOCK FACE TWELVE OCLOCK»», 32924, True ),
( (0x1F55B,  0x61, ), Q«« (🕛) CLOCK FACE TWELVE OCLOCK»», 32925, True ),
( (0x1F55B,  0x41, ), Q«« (🕛) CLOCK FACE TWELVE OCLOCK»», 32926, True ),
( (0x1F55B,  0x62, ), Q«« (🕛) CLOCK FACE TWELVE OCLOCK»», 32927, True ),
( (0x1F55C,  0x21, ), Q«« (🕜) CLOCK FACE ONE-THIRTY»», 32928, True ),
( (0x1F55C,  0x3F, ), Q«« (🕜) CLOCK FACE ONE-THIRTY»», 32929, True ),
( (0x1F55C,  0x61, ), Q«« (🕜) CLOCK FACE ONE-THIRTY»», 32930, True ),
( (0x1F55C,  0x41, ), Q«« (🕜) CLOCK FACE ONE-THIRTY»», 32931, True ),
( (0x1F55C,  0x62, ), Q«« (🕜) CLOCK FACE ONE-THIRTY»», 32932, True ),
( (0x1F55D,  0x21, ), Q«« (🕝) CLOCK FACE TWO-THIRTY»», 32933, True ),
( (0x1F55D,  0x3F, ), Q«« (🕝) CLOCK FACE TWO-THIRTY»», 32934, True ),
( (0x1F55D,  0x61, ), Q«« (🕝) CLOCK FACE TWO-THIRTY»», 32935, True ),
( (0x1F55D,  0x41, ), Q«« (🕝) CLOCK FACE TWO-THIRTY»», 32936, True ),
( (0x1F55D,  0x62, ), Q«« (🕝) CLOCK FACE TWO-THIRTY»», 32937, True ),
( (0x1F55E,  0x21, ), Q«« (🕞) CLOCK FACE THREE-THIRTY»», 32938, True ),
( (0x1F55E,  0x3F, ), Q«« (🕞) CLOCK FACE THREE-THIRTY»», 32939, True ),
( (0x1F55E,  0x61, ), Q«« (🕞) CLOCK FACE THREE-THIRTY»», 32940, True ),
( (0x1F55E,  0x41, ), Q«« (🕞) CLOCK FACE THREE-THIRTY»», 32941, True ),
( (0x1F55E,  0x62, ), Q«« (🕞) CLOCK FACE THREE-THIRTY»», 32942, True ),
( (0x1F55F,  0x21, ), Q«« (🕟) CLOCK FACE FOUR-THIRTY»», 32943, True ),
( (0x1F55F,  0x3F, ), Q«« (🕟) CLOCK FACE FOUR-THIRTY»», 32944, True ),
( (0x1F55F,  0x61, ), Q«« (🕟) CLOCK FACE FOUR-THIRTY»», 32945, True ),
( (0x1F55F,  0x41, ), Q«« (🕟) CLOCK FACE FOUR-THIRTY»», 32946, True ),
( (0x1F55F,  0x62, ), Q«« (🕟) CLOCK FACE FOUR-THIRTY»», 32947, True ),
( (0x1F560,  0x21, ), Q«« (🕠) CLOCK FACE FIVE-THIRTY»», 32948, True ),
( (0x1F560,  0x3F, ), Q«« (🕠) CLOCK FACE FIVE-THIRTY»», 32949, True ),
( (0x1F560,  0x61, ), Q«« (🕠) CLOCK FACE FIVE-THIRTY»», 32950, True ),
( (0x1F560,  0x41, ), Q«« (🕠) CLOCK FACE FIVE-THIRTY»», 32951, True ),
( (0x1F560,  0x62, ), Q«« (🕠) CLOCK FACE FIVE-THIRTY»», 32952, True ),
( (0x1F561,  0x21, ), Q«« (🕡) CLOCK FACE SIX-THIRTY»», 32953, True ),
( (0x1F561,  0x3F, ), Q«« (🕡) CLOCK FACE SIX-THIRTY»», 32954, True ),
( (0x1F561,  0x61, ), Q«« (🕡) CLOCK FACE SIX-THIRTY»», 32955, True ),
( (0x1F561,  0x41, ), Q«« (🕡) CLOCK FACE SIX-THIRTY»», 32956, True ),
( (0x1F561,  0x62, ), Q«« (🕡) CLOCK FACE SIX-THIRTY»», 32957, True ),
( (0x1F562,  0x21, ), Q«« (🕢) CLOCK FACE SEVEN-THIRTY»», 32958, True ),
( (0x1F562,  0x3F, ), Q«« (🕢) CLOCK FACE SEVEN-THIRTY»», 32959, True ),
( (0x1F562,  0x61, ), Q«« (🕢) CLOCK FACE SEVEN-THIRTY»», 32960, True ),
( (0x1F562,  0x41, ), Q«« (🕢) CLOCK FACE SEVEN-THIRTY»», 32961, True ),
( (0x1F562,  0x62, ), Q«« (🕢) CLOCK FACE SEVEN-THIRTY»», 32962, True ),
( (0x1F563,  0x21, ), Q«« (🕣) CLOCK FACE EIGHT-THIRTY»», 32963, True ),
( (0x1F563,  0x3F, ), Q«« (🕣) CLOCK FACE EIGHT-THIRTY»», 32964, True ),
( (0x1F563,  0x61, ), Q«« (🕣) CLOCK FACE EIGHT-THIRTY»», 32965, True ),
( (0x1F563,  0x41, ), Q«« (🕣) CLOCK FACE EIGHT-THIRTY»», 32966, True ),
( (0x1F563,  0x62, ), Q«« (🕣) CLOCK FACE EIGHT-THIRTY»», 32967, True ),
( (0x1F564,  0x21, ), Q«« (🕤) CLOCK FACE NINE-THIRTY»», 32968, True ),
( (0x1F564,  0x3F, ), Q«« (🕤) CLOCK FACE NINE-THIRTY»», 32969, True ),
( (0x1F564,  0x61, ), Q«« (🕤) CLOCK FACE NINE-THIRTY»», 32970, True ),
( (0x1F564,  0x41, ), Q«« (🕤) CLOCK FACE NINE-THIRTY»», 32971, True ),
( (0x1F564,  0x62, ), Q«« (🕤) CLOCK FACE NINE-THIRTY»», 32972, True ),
( (0x1F565,  0x21, ), Q«« (🕥) CLOCK FACE TEN-THIRTY»», 32973, True ),
( (0x1F565,  0x3F, ), Q«« (🕥) CLOCK FACE TEN-THIRTY»», 32974, True ),
( (0x1F565,  0x61, ), Q«« (🕥) CLOCK FACE TEN-THIRTY»», 32975, True ),
( (0x1F565,  0x41, ), Q«« (🕥) CLOCK FACE TEN-THIRTY»», 32976, True ),
( (0x1F565,  0x62, ), Q«« (🕥) CLOCK FACE TEN-THIRTY»», 32977, True ),
( (0x1F566,  0x21, ), Q«« (🕦) CLOCK FACE ELEVEN-THIRTY»», 32978, True ),
( (0x1F566,  0x3F, ), Q«« (🕦) CLOCK FACE ELEVEN-THIRTY»», 32979, True ),
( (0x1F566,  0x61, ), Q«« (🕦) CLOCK FACE ELEVEN-THIRTY»», 32980, True ),
( (0x1F566,  0x41, ), Q«« (🕦) CLOCK FACE ELEVEN-THIRTY»», 32981, True ),
( (0x1F566,  0x62, ), Q«« (🕦) CLOCK FACE ELEVEN-THIRTY»», 32982, True ),
( (0x1F567,  0x21, ), Q«« (🕧) CLOCK FACE TWELVE-THIRTY»», 32983, True ),
( (0x1F567,  0x3F, ), Q«« (🕧) CLOCK FACE TWELVE-THIRTY»», 32984, True ),
( (0x1F567,  0x61, ), Q«« (🕧) CLOCK FACE TWELVE-THIRTY»», 32985, True ),
( (0x1F567,  0x41, ), Q«« (🕧) CLOCK FACE TWELVE-THIRTY»», 32986, True ),
( (0x1F567,  0x62, ), Q«« (🕧) CLOCK FACE TWELVE-THIRTY»», 32987, True ),
( (0x1F568,  0x21, ), Q«« (🕨) RIGHT SPEAKER»», 32988, True ),
( (0x1F568,  0x3F, ), Q«« (🕨) RIGHT SPEAKER»», 32989, True ),
( (0x1F568,  0x61, ), Q«« (🕨) RIGHT SPEAKER»», 32990, True ),
( (0x1F568,  0x41, ), Q«« (🕨) RIGHT SPEAKER»», 32991, True ),
( (0x1F568,  0x62, ), Q«« (🕨) RIGHT SPEAKER»», 32992, True ),
( (0x1F569,  0x21, ), Q«« (🕩) RIGHT SPEAKER WITH ONE SOUND WAVE»», 32993, True ),
( (0x1F569,  0x3F, ), Q«« (🕩) RIGHT SPEAKER WITH ONE SOUND WAVE»», 32994, True ),
( (0x1F569,  0x61, ), Q«« (🕩) RIGHT SPEAKER WITH ONE SOUND WAVE»», 32995, True ),
( (0x1F569,  0x41, ), Q«« (🕩) RIGHT SPEAKER WITH ONE SOUND WAVE»», 32996, True ),
( (0x1F569,  0x62, ), Q«« (🕩) RIGHT SPEAKER WITH ONE SOUND WAVE»», 32997, True ),
( (0x1F56A,  0x21, ), Q«« (🕪) RIGHT SPEAKER WITH THREE SOUND WAVES»», 32998, True ),
( (0x1F56A,  0x3F, ), Q«« (🕪) RIGHT SPEAKER WITH THREE SOUND WAVES»», 32999, True ),
( (0x1F56A,  0x61, ), Q«« (🕪) RIGHT SPEAKER WITH THREE SOUND WAVES»», 33000, True ),
( (0x1F56A,  0x41, ), Q«« (🕪) RIGHT SPEAKER WITH THREE SOUND WAVES»», 33001, True ),
( (0x1F56A,  0x62, ), Q«« (🕪) RIGHT SPEAKER WITH THREE SOUND WAVES»», 33002, True ),
( (0x1F56B,  0x21, ), Q«« (🕫) BULLHORN»», 33003, True ),
( (0x1F56B,  0x3F, ), Q«« (🕫) BULLHORN»», 33004, True ),
( (0x1F56B,  0x61, ), Q«« (🕫) BULLHORN»», 33005, True ),
( (0x1F56B,  0x41, ), Q«« (🕫) BULLHORN»», 33006, True ),
( (0x1F56B,  0x62, ), Q«« (🕫) BULLHORN»», 33007, True ),
( (0x1F56C,  0x21, ), Q«« (🕬) BULLHORN WITH SOUND WAVES»», 33008, True ),
( (0x1F56C,  0x3F, ), Q«« (🕬) BULLHORN WITH SOUND WAVES»», 33009, True ),
( (0x1F56C,  0x61, ), Q«« (🕬) BULLHORN WITH SOUND WAVES»», 33010, True ),
( (0x1F56C,  0x41, ), Q«« (🕬) BULLHORN WITH SOUND WAVES»», 33011, True ),
( (0x1F56C,  0x62, ), Q«« (🕬) BULLHORN WITH SOUND WAVES»», 33012, True ),
( (0x1F56D,  0x21, ), Q«« (🕭) RINGING BELL»», 33013, True ),
( (0x1F56D,  0x3F, ), Q«« (🕭) RINGING BELL»», 33014, True ),
( (0x1F56D,  0x61, ), Q«« (🕭) RINGING BELL»», 33015, True ),
( (0x1F56D,  0x41, ), Q«« (🕭) RINGING BELL»», 33016, True ),
( (0x1F56D,  0x62, ), Q«« (🕭) RINGING BELL»», 33017, True ),
( (0x1F56E,  0x21, ), Q«« (🕮) BOOK»», 33018, True ),
( (0x1F56E,  0x3F, ), Q«« (🕮) BOOK»», 33019, True ),
( (0x1F56E,  0x61, ), Q«« (🕮) BOOK»», 33020, True ),
( (0x1F56E,  0x41, ), Q«« (🕮) BOOK»», 33021, True ),
( (0x1F56E,  0x62, ), Q«« (🕮) BOOK»», 33022, True ),
( (0x1F56F,  0x21, ), Q«« (🕯) CANDLE»», 33023, True ),
( (0x1F56F,  0x3F, ), Q«« (🕯) CANDLE»», 33024, True ),
( (0x1F56F,  0x61, ), Q«« (🕯) CANDLE»», 33025, True ),
( (0x1F56F,  0x41, ), Q«« (🕯) CANDLE»», 33026, True ),
( (0x1F56F,  0x62, ), Q«« (🕯) CANDLE»», 33027, True ),
( (0x1F570,  0x21, ), Q«« (🕰) MANTELPIECE CLOCK»», 33028, True ),
( (0x1F570,  0x3F, ), Q«« (🕰) MANTELPIECE CLOCK»», 33029, True ),
( (0x1F570,  0x61, ), Q«« (🕰) MANTELPIECE CLOCK»», 33030, True ),
( (0x1F570,  0x41, ), Q«« (🕰) MANTELPIECE CLOCK»», 33031, True ),
( (0x1F570,  0x62, ), Q«« (🕰) MANTELPIECE CLOCK»», 33032, True ),
( (0x1F571,  0x21, ), Q«« (🕱) BLACK SKULL AND CROSSBONES»», 33033, True ),
( (0x1F571,  0x3F, ), Q«« (🕱) BLACK SKULL AND CROSSBONES»», 33034, True ),
( (0x1F571,  0x61, ), Q«« (🕱) BLACK SKULL AND CROSSBONES»», 33035, True ),
( (0x1F571,  0x41, ), Q«« (🕱) BLACK SKULL AND CROSSBONES»», 33036, True ),
( (0x1F571,  0x62, ), Q«« (🕱) BLACK SKULL AND CROSSBONES»», 33037, True ),
( (0x1F572,  0x21, ), Q«« (🕲) NO PIRACY»», 33038, True ),
( (0x1F572,  0x3F, ), Q«« (🕲) NO PIRACY»», 33039, True ),
( (0x1F572,  0x61, ), Q«« (🕲) NO PIRACY»», 33040, True ),
( (0x1F572,  0x41, ), Q«« (🕲) NO PIRACY»», 33041, True ),
( (0x1F572,  0x62, ), Q«« (🕲) NO PIRACY»», 33042, True ),
( (0x1F573,  0x21, ), Q«« (🕳) HOLE»», 33043, True ),
( (0x1F573,  0x3F, ), Q«« (🕳) HOLE»», 33044, True ),
( (0x1F573,  0x61, ), Q«« (🕳) HOLE»», 33045, True ),
( (0x1F573,  0x41, ), Q«« (🕳) HOLE»», 33046, True ),
( (0x1F573,  0x62, ), Q«« (🕳) HOLE»», 33047, True ),
( (0x1F574,  0x21, ), Q«« (🕴) MAN IN BUSINESS SUIT LEVITATING»», 33048, True ),
( (0x1F574,  0x3F, ), Q«« (🕴) MAN IN BUSINESS SUIT LEVITATING»», 33049, True ),
( (0x1F574,  0x61, ), Q«« (🕴) MAN IN BUSINESS SUIT LEVITATING»», 33050, True ),
( (0x1F574,  0x41, ), Q«« (🕴) MAN IN BUSINESS SUIT LEVITATING»», 33051, True ),
( (0x1F574,  0x62, ), Q«« (🕴) MAN IN BUSINESS SUIT LEVITATING»», 33052, True ),
( (0x1F575,  0x21, ), Q«« (🕵) SLEUTH OR SPY»», 33053, True ),
( (0x1F575,  0x3F, ), Q«« (🕵) SLEUTH OR SPY»», 33054, True ),
( (0x1F575,  0x61, ), Q«« (🕵) SLEUTH OR SPY»», 33055, True ),
( (0x1F575,  0x41, ), Q«« (🕵) SLEUTH OR SPY»», 33056, True ),
( (0x1F575,  0x62, ), Q«« (🕵) SLEUTH OR SPY»», 33057, True ),
( (0x1F576,  0x21, ), Q«« (🕶) DARK SUNGLASSES»», 33058, True ),
( (0x1F576,  0x3F, ), Q«« (🕶) DARK SUNGLASSES»», 33059, True ),
( (0x1F576,  0x61, ), Q«« (🕶) DARK SUNGLASSES»», 33060, True ),
( (0x1F576,  0x41, ), Q«« (🕶) DARK SUNGLASSES»», 33061, True ),
( (0x1F576,  0x62, ), Q«« (🕶) DARK SUNGLASSES»», 33062, True ),
( (0x1F577,  0x21, ), Q«« (🕷) SPIDER»», 33063, True ),
( (0x1F577,  0x3F, ), Q«« (🕷) SPIDER»», 33064, True ),
( (0x1F577,  0x61, ), Q«« (🕷) SPIDER»», 33065, True ),
( (0x1F577,  0x41, ), Q«« (🕷) SPIDER»», 33066, True ),
( (0x1F577,  0x62, ), Q«« (🕷) SPIDER»», 33067, True ),
( (0x1F578,  0x21, ), Q«« (🕸) SPIDER WEB»», 33068, True ),
( (0x1F578,  0x3F, ), Q«« (🕸) SPIDER WEB»», 33069, True ),
( (0x1F578,  0x61, ), Q«« (🕸) SPIDER WEB»», 33070, True ),
( (0x1F578,  0x41, ), Q«« (🕸) SPIDER WEB»», 33071, True ),
( (0x1F578,  0x62, ), Q«« (🕸) SPIDER WEB»», 33072, True ),
( (0x1F579,  0x21, ), Q«« (🕹) JOYSTICK»», 33073, True ),
( (0x1F579,  0x3F, ), Q«« (🕹) JOYSTICK»», 33074, True ),
( (0x1F579,  0x61, ), Q«« (🕹) JOYSTICK»», 33075, True ),
( (0x1F579,  0x41, ), Q«« (🕹) JOYSTICK»», 33076, True ),
( (0x1F579,  0x62, ), Q«« (🕹) JOYSTICK»», 33077, True ),
( (0x1F57A,  0x21, ), Q«« (🕺) MAN DANCING»», 33078, True ),
( (0x1F57A,  0x3F, ), Q«« (🕺) MAN DANCING»», 33079, True ),
( (0x1F57A,  0x61, ), Q«« (🕺) MAN DANCING»», 33080, True ),
( (0x1F57A,  0x41, ), Q«« (🕺) MAN DANCING»», 33081, True ),
( (0x1F57A,  0x62, ), Q«« (🕺) MAN DANCING»», 33082, True ),
( (0x1F57B,  0x21, ), Q«« (🕻) LEFT HAND TELEPHONE RECEIVER»», 33083, True ),
( (0x1F57B,  0x3F, ), Q«« (🕻) LEFT HAND TELEPHONE RECEIVER»», 33084, True ),
( (0x1F57B,  0x61, ), Q«« (🕻) LEFT HAND TELEPHONE RECEIVER»», 33085, True ),
( (0x1F57B,  0x41, ), Q«« (🕻) LEFT HAND TELEPHONE RECEIVER»», 33086, True ),
( (0x1F57B,  0x62, ), Q«« (🕻) LEFT HAND TELEPHONE RECEIVER»», 33087, True ),
( (0x1F57C,  0x21, ), Q«« (🕼) TELEPHONE RECEIVER WITH PAGE»», 33088, True ),
( (0x1F57C,  0x3F, ), Q«« (🕼) TELEPHONE RECEIVER WITH PAGE»», 33089, True ),
( (0x1F57C,  0x61, ), Q«« (🕼) TELEPHONE RECEIVER WITH PAGE»», 33090, True ),
( (0x1F57C,  0x41, ), Q«« (🕼) TELEPHONE RECEIVER WITH PAGE»», 33091, True ),
( (0x1F57C,  0x62, ), Q«« (🕼) TELEPHONE RECEIVER WITH PAGE»», 33092, True ),
( (0x1F57D,  0x21, ), Q«« (🕽) RIGHT HAND TELEPHONE RECEIVER»», 33093, True ),
( (0x1F57D,  0x3F, ), Q«« (🕽) RIGHT HAND TELEPHONE RECEIVER»», 33094, True ),
( (0x1F57D,  0x61, ), Q«« (🕽) RIGHT HAND TELEPHONE RECEIVER»», 33095, True ),
( (0x1F57D,  0x41, ), Q«« (🕽) RIGHT HAND TELEPHONE RECEIVER»», 33096, True ),
( (0x1F57D,  0x62, ), Q«« (🕽) RIGHT HAND TELEPHONE RECEIVER»», 33097, True ),
( (0x1F57E,  0x21, ), Q«« (🕾) WHITE TOUCHTONE TELEPHONE»», 33098, True ),
( (0x1F57E,  0x3F, ), Q«« (🕾) WHITE TOUCHTONE TELEPHONE»», 33099, True ),
( (0x1F57E,  0x61, ), Q«« (🕾) WHITE TOUCHTONE TELEPHONE»», 33100, True ),
( (0x1F57E,  0x41, ), Q«« (🕾) WHITE TOUCHTONE TELEPHONE»», 33101, True ),
( (0x1F57E,  0x62, ), Q«« (🕾) WHITE TOUCHTONE TELEPHONE»», 33102, True ),
( (0x1F57F,  0x21, ), Q«« (🕿) BLACK TOUCHTONE TELEPHONE»», 33103, True ),
( (0x1F57F,  0x3F, ), Q«« (🕿) BLACK TOUCHTONE TELEPHONE»», 33104, True ),
( (0x1F57F,  0x61, ), Q«« (🕿) BLACK TOUCHTONE TELEPHONE»», 33105, True ),
( (0x1F57F,  0x41, ), Q«« (🕿) BLACK TOUCHTONE TELEPHONE»», 33106, True ),
( (0x1F57F,  0x62, ), Q«« (🕿) BLACK TOUCHTONE TELEPHONE»», 33107, True ),
( (0x1F580,  0x21, ), Q«« (🖀) TELEPHONE ON TOP OF MODEM»», 33108, True ),
( (0x1F580,  0x3F, ), Q«« (🖀) TELEPHONE ON TOP OF MODEM»», 33109, True ),
( (0x1F580,  0x61, ), Q«« (🖀) TELEPHONE ON TOP OF MODEM»», 33110, True ),
( (0x1F580,  0x41, ), Q«« (🖀) TELEPHONE ON TOP OF MODEM»», 33111, True ),
( (0x1F580,  0x62, ), Q«« (🖀) TELEPHONE ON TOP OF MODEM»», 33112, True ),
( (0x1F581,  0x21, ), Q«« (🖁) CLAMSHELL MOBILE PHONE»», 33113, True ),
( (0x1F581,  0x3F, ), Q«« (🖁) CLAMSHELL MOBILE PHONE»», 33114, True ),
( (0x1F581,  0x61, ), Q«« (🖁) CLAMSHELL MOBILE PHONE»», 33115, True ),
( (0x1F581,  0x41, ), Q«« (🖁) CLAMSHELL MOBILE PHONE»», 33116, True ),
( (0x1F581,  0x62, ), Q«« (🖁) CLAMSHELL MOBILE PHONE»», 33117, True ),
( (0x1F582,  0x21, ), Q«« (🖂) BACK OF ENVELOPE»», 33118, True ),
( (0x1F582,  0x3F, ), Q«« (🖂) BACK OF ENVELOPE»», 33119, True ),
( (0x1F582,  0x61, ), Q«« (🖂) BACK OF ENVELOPE»», 33120, True ),
( (0x1F582,  0x41, ), Q«« (🖂) BACK OF ENVELOPE»», 33121, True ),
( (0x1F582,  0x62, ), Q«« (🖂) BACK OF ENVELOPE»», 33122, True ),
( (0x1F583,  0x21, ), Q«« (🖃) STAMPED ENVELOPE»», 33123, True ),
( (0x1F583,  0x3F, ), Q«« (🖃) STAMPED ENVELOPE»», 33124, True ),
( (0x1F583,  0x61, ), Q«« (🖃) STAMPED ENVELOPE»», 33125, True ),
( (0x1F583,  0x41, ), Q«« (🖃) STAMPED ENVELOPE»», 33126, True ),
( (0x1F583,  0x62, ), Q«« (🖃) STAMPED ENVELOPE»», 33127, True ),
( (0x1F584,  0x21, ), Q«« (🖄) ENVELOPE WITH LIGHTNING»», 33128, True ),
( (0x1F584,  0x3F, ), Q«« (🖄) ENVELOPE WITH LIGHTNING»», 33129, True ),
( (0x1F584,  0x61, ), Q«« (🖄) ENVELOPE WITH LIGHTNING»», 33130, True ),
( (0x1F584,  0x41, ), Q«« (🖄) ENVELOPE WITH LIGHTNING»», 33131, True ),
( (0x1F584,  0x62, ), Q«« (🖄) ENVELOPE WITH LIGHTNING»», 33132, True ),
( (0x1F585,  0x21, ), Q«« (🖅) FLYING ENVELOPE»», 33133, True ),
( (0x1F585,  0x3F, ), Q«« (🖅) FLYING ENVELOPE»», 33134, True ),
( (0x1F585,  0x61, ), Q«« (🖅) FLYING ENVELOPE»», 33135, True ),
( (0x1F585,  0x41, ), Q«« (🖅) FLYING ENVELOPE»», 33136, True ),
( (0x1F585,  0x62, ), Q«« (🖅) FLYING ENVELOPE»», 33137, True ),
( (0x1F586,  0x21, ), Q«« (🖆) PEN OVER STAMPED ENVELOPE»», 33138, True ),
( (0x1F586,  0x3F, ), Q«« (🖆) PEN OVER STAMPED ENVELOPE»», 33139, True ),
( (0x1F586,  0x61, ), Q«« (🖆) PEN OVER STAMPED ENVELOPE»», 33140, True ),
( (0x1F586,  0x41, ), Q«« (🖆) PEN OVER STAMPED ENVELOPE»», 33141, True ),
( (0x1F586,  0x62, ), Q«« (🖆) PEN OVER STAMPED ENVELOPE»», 33142, True ),
( (0x1F587,  0x21, ), Q«« (🖇) LINKED PAPERCLIPS»», 33143, True ),
( (0x1F587,  0x3F, ), Q«« (🖇) LINKED PAPERCLIPS»», 33144, True ),
( (0x1F587,  0x61, ), Q«« (🖇) LINKED PAPERCLIPS»», 33145, True ),
( (0x1F587,  0x41, ), Q«« (🖇) LINKED PAPERCLIPS»», 33146, True ),
( (0x1F587,  0x62, ), Q«« (🖇) LINKED PAPERCLIPS»», 33147, True ),
( (0x1F588,  0x21, ), Q«« (🖈) BLACK PUSHPIN»», 33148, True ),
( (0x1F588,  0x3F, ), Q«« (🖈) BLACK PUSHPIN»», 33149, True ),
( (0x1F588,  0x61, ), Q«« (🖈) BLACK PUSHPIN»», 33150, True ),
( (0x1F588,  0x41, ), Q«« (🖈) BLACK PUSHPIN»», 33151, True ),
( (0x1F588,  0x62, ), Q«« (🖈) BLACK PUSHPIN»», 33152, True ),
( (0x1F589,  0x21, ), Q«« (🖉) LOWER LEFT PENCIL»», 33153, True ),
( (0x1F589,  0x3F, ), Q«« (🖉) LOWER LEFT PENCIL»», 33154, True ),
( (0x1F589,  0x61, ), Q«« (🖉) LOWER LEFT PENCIL»», 33155, True ),
( (0x1F589,  0x41, ), Q«« (🖉) LOWER LEFT PENCIL»», 33156, True ),
( (0x1F589,  0x62, ), Q«« (🖉) LOWER LEFT PENCIL»», 33157, True ),
( (0x1F58A,  0x21, ), Q«« (🖊) LOWER LEFT BALLPOINT PEN»», 33158, True ),
( (0x1F58A,  0x3F, ), Q«« (🖊) LOWER LEFT BALLPOINT PEN»», 33159, True ),
( (0x1F58A,  0x61, ), Q«« (🖊) LOWER LEFT BALLPOINT PEN»», 33160, True ),
( (0x1F58A,  0x41, ), Q«« (🖊) LOWER LEFT BALLPOINT PEN»», 33161, True ),
( (0x1F58A,  0x62, ), Q«« (🖊) LOWER LEFT BALLPOINT PEN»», 33162, True ),
( (0x1F58B,  0x21, ), Q«« (🖋) LOWER LEFT FOUNTAIN PEN»», 33163, True ),
( (0x1F58B,  0x3F, ), Q«« (🖋) LOWER LEFT FOUNTAIN PEN»», 33164, True ),
( (0x1F58B,  0x61, ), Q«« (🖋) LOWER LEFT FOUNTAIN PEN»», 33165, True ),
( (0x1F58B,  0x41, ), Q«« (🖋) LOWER LEFT FOUNTAIN PEN»», 33166, True ),
( (0x1F58B,  0x62, ), Q«« (🖋) LOWER LEFT FOUNTAIN PEN»», 33167, True ),
( (0x1F58C,  0x21, ), Q«« (🖌) LOWER LEFT PAINTBRUSH»», 33168, True ),
( (0x1F58C,  0x3F, ), Q«« (🖌) LOWER LEFT PAINTBRUSH»», 33169, True ),
( (0x1F58C,  0x61, ), Q«« (🖌) LOWER LEFT PAINTBRUSH»», 33170, True ),
( (0x1F58C,  0x41, ), Q«« (🖌) LOWER LEFT PAINTBRUSH»», 33171, True ),
( (0x1F58C,  0x62, ), Q«« (🖌) LOWER LEFT PAINTBRUSH»», 33172, True ),
( (0x1F58D,  0x21, ), Q«« (🖍) LOWER LEFT CRAYON»», 33173, True ),
( (0x1F58D,  0x3F, ), Q«« (🖍) LOWER LEFT CRAYON»», 33174, True ),
( (0x1F58D,  0x61, ), Q«« (🖍) LOWER LEFT CRAYON»», 33175, True ),
( (0x1F58D,  0x41, ), Q«« (🖍) LOWER LEFT CRAYON»», 33176, True ),
( (0x1F58D,  0x62, ), Q«« (🖍) LOWER LEFT CRAYON»», 33177, True ),
( (0x1F58E,  0x21, ), Q«« (🖎) LEFT WRITING HAND»», 33178, True ),
( (0x1F58E,  0x3F, ), Q«« (🖎) LEFT WRITING HAND»», 33179, True ),
( (0x1F58E,  0x61, ), Q«« (🖎) LEFT WRITING HAND»», 33180, True ),
( (0x1F58E,  0x41, ), Q«« (🖎) LEFT WRITING HAND»», 33181, True ),
( (0x1F58E,  0x62, ), Q«« (🖎) LEFT WRITING HAND»», 33182, True ),
( (0x1F58F,  0x21, ), Q«« (🖏) TURNED OK HAND SIGN»», 33183, True ),
( (0x1F58F,  0x3F, ), Q«« (🖏) TURNED OK HAND SIGN»», 33184, True ),
( (0x1F58F,  0x61, ), Q«« (🖏) TURNED OK HAND SIGN»», 33185, True ),
( (0x1F58F,  0x41, ), Q«« (🖏) TURNED OK HAND SIGN»», 33186, True ),
( (0x1F58F,  0x62, ), Q«« (🖏) TURNED OK HAND SIGN»», 33187, True ),
( (0x1F590,  0x21, ), Q«« (🖐) RAISED HAND WITH FINGERS SPLAYED»», 33188, True ),
( (0x1F590,  0x3F, ), Q«« (🖐) RAISED HAND WITH FINGERS SPLAYED»», 33189, True ),
( (0x1F590,  0x61, ), Q«« (🖐) RAISED HAND WITH FINGERS SPLAYED»», 33190, True ),
( (0x1F590,  0x41, ), Q«« (🖐) RAISED HAND WITH FINGERS SPLAYED»», 33191, True ),
( (0x1F590,  0x62, ), Q«« (🖐) RAISED HAND WITH FINGERS SPLAYED»», 33192, True ),
( (0x1F591,  0x21, ), Q«« (🖑) REVERSED RAISED HAND WITH FINGERS SPLAYED»», 33193, True ),
( (0x1F591,  0x3F, ), Q«« (🖑) REVERSED RAISED HAND WITH FINGERS SPLAYED»», 33194, True ),
( (0x1F591,  0x61, ), Q«« (🖑) REVERSED RAISED HAND WITH FINGERS SPLAYED»», 33195, True ),
( (0x1F591,  0x41, ), Q«« (🖑) REVERSED RAISED HAND WITH FINGERS SPLAYED»», 33196, True ),
( (0x1F591,  0x62, ), Q«« (🖑) REVERSED RAISED HAND WITH FINGERS SPLAYED»», 33197, True ),
( (0x1F592,  0x21, ), Q«« (🖒) REVERSED THUMBS UP SIGN»», 33198, True ),
( (0x1F592,  0x3F, ), Q«« (🖒) REVERSED THUMBS UP SIGN»», 33199, True ),
( (0x1F592,  0x61, ), Q«« (🖒) REVERSED THUMBS UP SIGN»», 33200, True ),
( (0x1F592,  0x41, ), Q«« (🖒) REVERSED THUMBS UP SIGN»», 33201, True ),
( (0x1F592,  0x62, ), Q«« (🖒) REVERSED THUMBS UP SIGN»», 33202, True ),
( (0x1F593,  0x21, ), Q«« (🖓) REVERSED THUMBS DOWN SIGN»», 33203, True ),
( (0x1F593,  0x3F, ), Q«« (🖓) REVERSED THUMBS DOWN SIGN»», 33204, True ),
( (0x1F593,  0x61, ), Q«« (🖓) REVERSED THUMBS DOWN SIGN»», 33205, True ),
( (0x1F593,  0x41, ), Q«« (🖓) REVERSED THUMBS DOWN SIGN»», 33206, True ),
( (0x1F593,  0x62, ), Q«« (🖓) REVERSED THUMBS DOWN SIGN»», 33207, True ),
( (0x1F594,  0x21, ), Q«« (🖔) REVERSED VICTORY HAND»», 33208, True ),
( (0x1F594,  0x3F, ), Q«« (🖔) REVERSED VICTORY HAND»», 33209, True ),
( (0x1F594,  0x61, ), Q«« (🖔) REVERSED VICTORY HAND»», 33210, True ),
( (0x1F594,  0x41, ), Q«« (🖔) REVERSED VICTORY HAND»», 33211, True ),
( (0x1F594,  0x62, ), Q«« (🖔) REVERSED VICTORY HAND»», 33212, True ),
( (0x1F595,  0x21, ), Q«« (🖕) REVERSED HAND WITH MIDDLE FINGER EXTENDED»», 33213, True ),
( (0x1F595,  0x3F, ), Q«« (🖕) REVERSED HAND WITH MIDDLE FINGER EXTENDED»», 33214, True ),
( (0x1F595,  0x61, ), Q«« (🖕) REVERSED HAND WITH MIDDLE FINGER EXTENDED»», 33215, True ),
( (0x1F595,  0x41, ), Q«« (🖕) REVERSED HAND WITH MIDDLE FINGER EXTENDED»», 33216, True ),
( (0x1F595,  0x62, ), Q«« (🖕) REVERSED HAND WITH MIDDLE FINGER EXTENDED»», 33217, True ),
( (0x1F596,  0x21, ), Q«« (🖖) RAISED HAND WITH PART BETWEEN MIDDLE AND RING FINGERS»», 33218, True ),
( (0x1F596,  0x3F, ), Q«« (🖖) RAISED HAND WITH PART BETWEEN MIDDLE AND RING FINGERS»», 33219, True ),
( (0x1F596,  0x61, ), Q«« (🖖) RAISED HAND WITH PART BETWEEN MIDDLE AND RING FINGERS»», 33220, True ),
( (0x1F596,  0x41, ), Q«« (🖖) RAISED HAND WITH PART BETWEEN MIDDLE AND RING FINGERS»», 33221, True ),
( (0x1F596,  0x62, ), Q«« (🖖) RAISED HAND WITH PART BETWEEN MIDDLE AND RING FINGERS»», 33222, True ),
( (0x1F597,  0x21, ), Q«« (🖗) WHITE DOWN POINTING LEFT HAND INDEX»», 33223, True ),
( (0x1F597,  0x3F, ), Q«« (🖗) WHITE DOWN POINTING LEFT HAND INDEX»», 33224, True ),
( (0x1F597,  0x61, ), Q«« (🖗) WHITE DOWN POINTING LEFT HAND INDEX»», 33225, True ),
( (0x1F597,  0x41, ), Q«« (🖗) WHITE DOWN POINTING LEFT HAND INDEX»», 33226, True ),
( (0x1F597,  0x62, ), Q«« (🖗) WHITE DOWN POINTING LEFT HAND INDEX»», 33227, True ),
( (0x1F598,  0x21, ), Q«« (🖘) SIDEWAYS WHITE LEFT POINTING INDEX»», 33228, True ),
( (0x1F598,  0x3F, ), Q«« (🖘) SIDEWAYS WHITE LEFT POINTING INDEX»», 33229, True ),
( (0x1F598,  0x61, ), Q«« (🖘) SIDEWAYS WHITE LEFT POINTING INDEX»», 33230, True ),
( (0x1F598,  0x41, ), Q«« (🖘) SIDEWAYS WHITE LEFT POINTING INDEX»», 33231, True ),
( (0x1F598,  0x62, ), Q«« (🖘) SIDEWAYS WHITE LEFT POINTING INDEX»», 33232, True ),
( (0x1F599,  0x21, ), Q«« (🖙) SIDEWAYS WHITE RIGHT POINTING INDEX»», 33233, True ),
( (0x1F599,  0x3F, ), Q«« (🖙) SIDEWAYS WHITE RIGHT POINTING INDEX»», 33234, True ),
( (0x1F599,  0x61, ), Q«« (🖙) SIDEWAYS WHITE RIGHT POINTING INDEX»», 33235, True ),
( (0x1F599,  0x41, ), Q«« (🖙) SIDEWAYS WHITE RIGHT POINTING INDEX»», 33236, True ),
( (0x1F599,  0x62, ), Q«« (🖙) SIDEWAYS WHITE RIGHT POINTING INDEX»», 33237, True ),
( (0x1F59A,  0x21, ), Q«« (🖚) SIDEWAYS BLACK LEFT POINTING INDEX»», 33238, True ),
( (0x1F59A,  0x3F, ), Q«« (🖚) SIDEWAYS BLACK LEFT POINTING INDEX»», 33239, True ),
( (0x1F59A,  0x61, ), Q«« (🖚) SIDEWAYS BLACK LEFT POINTING INDEX»», 33240, True ),
( (0x1F59A,  0x41, ), Q«« (🖚) SIDEWAYS BLACK LEFT POINTING INDEX»», 33241, True ),
( (0x1F59A,  0x62, ), Q«« (🖚) SIDEWAYS BLACK LEFT POINTING INDEX»», 33242, True ),
( (0x1F59B,  0x21, ), Q«« (🖛) SIDEWAYS BLACK RIGHT POINTING INDEX»», 33243, True ),
( (0x1F59B,  0x3F, ), Q«« (🖛) SIDEWAYS BLACK RIGHT POINTING INDEX»», 33244, True ),
( (0x1F59B,  0x61, ), Q«« (🖛) SIDEWAYS BLACK RIGHT POINTING INDEX»», 33245, True ),
( (0x1F59B,  0x41, ), Q«« (🖛) SIDEWAYS BLACK RIGHT POINTING INDEX»», 33246, True ),
( (0x1F59B,  0x62, ), Q«« (🖛) SIDEWAYS BLACK RIGHT POINTING INDEX»», 33247, True ),
( (0x1F59C,  0x21, ), Q«« (🖜) BLACK LEFT POINTING BACKHAND INDEX»», 33248, True ),
( (0x1F59C,  0x3F, ), Q«« (🖜) BLACK LEFT POINTING BACKHAND INDEX»», 33249, True ),
( (0x1F59C,  0x61, ), Q«« (🖜) BLACK LEFT POINTING BACKHAND INDEX»», 33250, True ),
( (0x1F59C,  0x41, ), Q«« (🖜) BLACK LEFT POINTING BACKHAND INDEX»», 33251, True ),
( (0x1F59C,  0x62, ), Q«« (🖜) BLACK LEFT POINTING BACKHAND INDEX»», 33252, True ),
( (0x1F59D,  0x21, ), Q«« (🖝) BLACK RIGHT POINTING BACKHAND INDEX»», 33253, True ),
( (0x1F59D,  0x3F, ), Q«« (🖝) BLACK RIGHT POINTING BACKHAND INDEX»», 33254, True ),
( (0x1F59D,  0x61, ), Q«« (🖝) BLACK RIGHT POINTING BACKHAND INDEX»», 33255, True ),
( (0x1F59D,  0x41, ), Q«« (🖝) BLACK RIGHT POINTING BACKHAND INDEX»», 33256, True ),
( (0x1F59D,  0x62, ), Q«« (🖝) BLACK RIGHT POINTING BACKHAND INDEX»», 33257, True ),
( (0x1F59E,  0x21, ), Q«« (🖞) SIDEWAYS WHITE UP POINTING INDEX»», 33258, True ),
( (0x1F59E,  0x3F, ), Q«« (🖞) SIDEWAYS WHITE UP POINTING INDEX»», 33259, True ),
( (0x1F59E,  0x61, ), Q«« (🖞) SIDEWAYS WHITE UP POINTING INDEX»», 33260, True ),
( (0x1F59E,  0x41, ), Q«« (🖞) SIDEWAYS WHITE UP POINTING INDEX»», 33261, True ),
( (0x1F59E,  0x62, ), Q«« (🖞) SIDEWAYS WHITE UP POINTING INDEX»», 33262, True ),
( (0x1F59F,  0x21, ), Q«« (🖟) SIDEWAYS WHITE DOWN POINTING INDEX»», 33263, True ),
( (0x1F59F,  0x3F, ), Q«« (🖟) SIDEWAYS WHITE DOWN POINTING INDEX»», 33264, True ),
( (0x1F59F,  0x61, ), Q«« (🖟) SIDEWAYS WHITE DOWN POINTING INDEX»», 33265, True ),
( (0x1F59F,  0x41, ), Q«« (🖟) SIDEWAYS WHITE DOWN POINTING INDEX»», 33266, True ),
( (0x1F59F,  0x62, ), Q«« (🖟) SIDEWAYS WHITE DOWN POINTING INDEX»», 33267, True ),
( (0x1F5A0,  0x21, ), Q«« (🖠) SIDEWAYS BLACK UP POINTING INDEX»», 33268, True ),
( (0x1F5A0,  0x3F, ), Q«« (🖠) SIDEWAYS BLACK UP POINTING INDEX»», 33269, True ),
( (0x1F5A0,  0x61, ), Q«« (🖠) SIDEWAYS BLACK UP POINTING INDEX»», 33270, True ),
( (0x1F5A0,  0x41, ), Q«« (🖠) SIDEWAYS BLACK UP POINTING INDEX»», 33271, True ),
( (0x1F5A0,  0x62, ), Q«« (🖠) SIDEWAYS BLACK UP POINTING INDEX»», 33272, True ),
( (0x1F5A1,  0x21, ), Q«« (🖡) SIDEWAYS BLACK DOWN POINTING INDEX»», 33273, True ),
( (0x1F5A1,  0x3F, ), Q«« (🖡) SIDEWAYS BLACK DOWN POINTING INDEX»», 33274, True ),
( (0x1F5A1,  0x61, ), Q«« (🖡) SIDEWAYS BLACK DOWN POINTING INDEX»», 33275, True ),
( (0x1F5A1,  0x41, ), Q«« (🖡) SIDEWAYS BLACK DOWN POINTING INDEX»», 33276, True ),
( (0x1F5A1,  0x62, ), Q«« (🖡) SIDEWAYS BLACK DOWN POINTING INDEX»», 33277, True ),
( (0x1F5A2,  0x21, ), Q«« (🖢) BLACK UP POINTING BACKHAND INDEX»», 33278, True ),
( (0x1F5A2,  0x3F, ), Q«« (🖢) BLACK UP POINTING BACKHAND INDEX»», 33279, True ),
( (0x1F5A2,  0x61, ), Q«« (🖢) BLACK UP POINTING BACKHAND INDEX»», 33280, True ),
( (0x1F5A2,  0x41, ), Q«« (🖢) BLACK UP POINTING BACKHAND INDEX»», 33281, True ),
( (0x1F5A2,  0x62, ), Q«« (🖢) BLACK UP POINTING BACKHAND INDEX»», 33282, True ),
( (0x1F5A3,  0x21, ), Q«« (🖣) BLACK DOWN POINTING BACKHAND INDEX»», 33283, True ),
( (0x1F5A3,  0x3F, ), Q«« (🖣) BLACK DOWN POINTING BACKHAND INDEX»», 33284, True ),
( (0x1F5A3,  0x61, ), Q«« (🖣) BLACK DOWN POINTING BACKHAND INDEX»», 33285, True ),
( (0x1F5A3,  0x41, ), Q«« (🖣) BLACK DOWN POINTING BACKHAND INDEX»», 33286, True ),
( (0x1F5A3,  0x62, ), Q«« (🖣) BLACK DOWN POINTING BACKHAND INDEX»», 33287, True ),
( (0x1F5A4,  0x21, ), Q«« (🖤) BLACK HEART»», 33288, True ),
( (0x1F5A4,  0x3F, ), Q«« (🖤) BLACK HEART»», 33289, True ),
( (0x1F5A4,  0x61, ), Q«« (🖤) BLACK HEART»», 33290, True ),
( (0x1F5A4,  0x41, ), Q«« (🖤) BLACK HEART»», 33291, True ),
( (0x1F5A4,  0x62, ), Q«« (🖤) BLACK HEART»», 33292, True ),
( (0x1F5A5,  0x21, ), Q«« (🖥) DESKTOP COMPUTER»», 33293, True ),
( (0x1F5A5,  0x3F, ), Q«« (🖥) DESKTOP COMPUTER»», 33294, True ),
( (0x1F5A5,  0x61, ), Q«« (🖥) DESKTOP COMPUTER»», 33295, True ),
( (0x1F5A5,  0x41, ), Q«« (🖥) DESKTOP COMPUTER»», 33296, True ),
( (0x1F5A5,  0x62, ), Q«« (🖥) DESKTOP COMPUTER»», 33297, True ),
( (0x1F5A6,  0x21, ), Q«« (🖦) KEYBOARD AND MOUSE»», 33298, True ),
( (0x1F5A6,  0x3F, ), Q«« (🖦) KEYBOARD AND MOUSE»», 33299, True ),
( (0x1F5A6,  0x61, ), Q«« (🖦) KEYBOARD AND MOUSE»», 33300, True ),
( (0x1F5A6,  0x41, ), Q«« (🖦) KEYBOARD AND MOUSE»», 33301, True ),
( (0x1F5A6,  0x62, ), Q«« (🖦) KEYBOARD AND MOUSE»», 33302, True ),
( (0x1F5A7,  0x21, ), Q«« (🖧) THREE NETWORKED COMPUTERS»», 33303, True ),
( (0x1F5A7,  0x3F, ), Q«« (🖧) THREE NETWORKED COMPUTERS»», 33304, True ),
( (0x1F5A7,  0x61, ), Q«« (🖧) THREE NETWORKED COMPUTERS»», 33305, True ),
( (0x1F5A7,  0x41, ), Q«« (🖧) THREE NETWORKED COMPUTERS»», 33306, True ),
( (0x1F5A7,  0x62, ), Q«« (🖧) THREE NETWORKED COMPUTERS»», 33307, True ),
( (0x1F5A8,  0x21, ), Q«« (🖨) PRINTER»», 33308, True ),
( (0x1F5A8,  0x3F, ), Q«« (🖨) PRINTER»», 33309, True ),
( (0x1F5A8,  0x61, ), Q«« (🖨) PRINTER»», 33310, True ),
( (0x1F5A8,  0x41, ), Q«« (🖨) PRINTER»», 33311, True ),
( (0x1F5A8,  0x62, ), Q«« (🖨) PRINTER»», 33312, True ),
( (0x1F5A9,  0x21, ), Q«« (🖩) POCKET CALCULATOR»», 33313, True ),
( (0x1F5A9,  0x3F, ), Q«« (🖩) POCKET CALCULATOR»», 33314, True ),
( (0x1F5A9,  0x61, ), Q«« (🖩) POCKET CALCULATOR»», 33315, True ),
( (0x1F5A9,  0x41, ), Q«« (🖩) POCKET CALCULATOR»», 33316, True ),
( (0x1F5A9,  0x62, ), Q«« (🖩) POCKET CALCULATOR»», 33317, True ),
( (0x1F5AA,  0x21, ), Q«« (🖪) BLACK HARD SHELL FLOPPY DISK»», 33318, True ),
( (0x1F5AA,  0x3F, ), Q«« (🖪) BLACK HARD SHELL FLOPPY DISK»», 33319, True ),
( (0x1F5AA,  0x61, ), Q«« (🖪) BLACK HARD SHELL FLOPPY DISK»», 33320, True ),
( (0x1F5AA,  0x41, ), Q«« (🖪) BLACK HARD SHELL FLOPPY DISK»», 33321, True ),
( (0x1F5AA,  0x62, ), Q«« (🖪) BLACK HARD SHELL FLOPPY DISK»», 33322, True ),
( (0x1F5AB,  0x21, ), Q«« (🖫) WHITE HARD SHELL FLOPPY DISK»», 33323, True ),
( (0x1F5AB,  0x3F, ), Q«« (🖫) WHITE HARD SHELL FLOPPY DISK»», 33324, True ),
( (0x1F5AB,  0x61, ), Q«« (🖫) WHITE HARD SHELL FLOPPY DISK»», 33325, True ),
( (0x1F5AB,  0x41, ), Q«« (🖫) WHITE HARD SHELL FLOPPY DISK»», 33326, True ),
( (0x1F5AB,  0x62, ), Q«« (🖫) WHITE HARD SHELL FLOPPY DISK»», 33327, True ),
( (0x1F5AC,  0x21, ), Q«« (🖬) SOFT SHELL FLOPPY DISK»», 33328, True ),
( (0x1F5AC,  0x3F, ), Q«« (🖬) SOFT SHELL FLOPPY DISK»», 33329, True ),
( (0x1F5AC,  0x61, ), Q«« (🖬) SOFT SHELL FLOPPY DISK»», 33330, True ),
( (0x1F5AC,  0x41, ), Q«« (🖬) SOFT SHELL FLOPPY DISK»», 33331, True ),
( (0x1F5AC,  0x62, ), Q«« (🖬) SOFT SHELL FLOPPY DISK»», 33332, True ),
( (0x1F5AD,  0x21, ), Q«« (🖭) TAPE CARTRIDGE»», 33333, True ),
( (0x1F5AD,  0x3F, ), Q«« (🖭) TAPE CARTRIDGE»», 33334, True ),
( (0x1F5AD,  0x61, ), Q«« (🖭) TAPE CARTRIDGE»», 33335, True ),
( (0x1F5AD,  0x41, ), Q«« (🖭) TAPE CARTRIDGE»», 33336, True ),
( (0x1F5AD,  0x62, ), Q«« (🖭) TAPE CARTRIDGE»», 33337, True ),
( (0x1F5AE,  0x21, ), Q«« (🖮) WIRED KEYBOARD»», 33338, True ),
( (0x1F5AE,  0x3F, ), Q«« (🖮) WIRED KEYBOARD»», 33339, True ),
( (0x1F5AE,  0x61, ), Q«« (🖮) WIRED KEYBOARD»», 33340, True ),
( (0x1F5AE,  0x41, ), Q«« (🖮) WIRED KEYBOARD»», 33341, True ),
( (0x1F5AE,  0x62, ), Q«« (🖮) WIRED KEYBOARD»», 33342, True ),
( (0x1F5AF,  0x21, ), Q«« (🖯) ONE BUTTON MOUSE»», 33343, True ),
( (0x1F5AF,  0x3F, ), Q«« (🖯) ONE BUTTON MOUSE»», 33344, True ),
( (0x1F5AF,  0x61, ), Q«« (🖯) ONE BUTTON MOUSE»», 33345, True ),
( (0x1F5AF,  0x41, ), Q«« (🖯) ONE BUTTON MOUSE»», 33346, True ),
( (0x1F5AF,  0x62, ), Q«« (🖯) ONE BUTTON MOUSE»», 33347, True ),
( (0x1F5B0,  0x21, ), Q«« (🖰) TWO BUTTON MOUSE»», 33348, True ),
( (0x1F5B0,  0x3F, ), Q«« (🖰) TWO BUTTON MOUSE»», 33349, True ),
( (0x1F5B0,  0x61, ), Q«« (🖰) TWO BUTTON MOUSE»», 33350, True ),
( (0x1F5B0,  0x41, ), Q«« (🖰) TWO BUTTON MOUSE»», 33351, True ),
( (0x1F5B0,  0x62, ), Q«« (🖰) TWO BUTTON MOUSE»», 33352, True ),
( (0x1F5B1,  0x21, ), Q«« (🖱) THREE BUTTON MOUSE»», 33353, True ),
( (0x1F5B1,  0x3F, ), Q«« (🖱) THREE BUTTON MOUSE»», 33354, True ),
( (0x1F5B1,  0x61, ), Q«« (🖱) THREE BUTTON MOUSE»», 33355, True ),
( (0x1F5B1,  0x41, ), Q«« (🖱) THREE BUTTON MOUSE»», 33356, True ),
( (0x1F5B1,  0x62, ), Q«« (🖱) THREE BUTTON MOUSE»», 33357, True ),
( (0x1F5B2,  0x21, ), Q«« (🖲) TRACKBALL»», 33358, True ),
( (0x1F5B2,  0x3F, ), Q«« (🖲) TRACKBALL»», 33359, True ),
( (0x1F5B2,  0x61, ), Q«« (🖲) TRACKBALL»», 33360, True ),
( (0x1F5B2,  0x41, ), Q«« (🖲) TRACKBALL»», 33361, True ),
( (0x1F5B2,  0x62, ), Q«« (🖲) TRACKBALL»», 33362, True ),
( (0x1F5B3,  0x21, ), Q«« (🖳) OLD PERSONAL COMPUTER»», 33363, True ),
( (0x1F5B3,  0x3F, ), Q«« (🖳) OLD PERSONAL COMPUTER»», 33364, True ),
( (0x1F5B3,  0x61, ), Q«« (🖳) OLD PERSONAL COMPUTER»», 33365, True ),
( (0x1F5B3,  0x41, ), Q«« (🖳) OLD PERSONAL COMPUTER»», 33366, True ),
( (0x1F5B3,  0x62, ), Q«« (🖳) OLD PERSONAL COMPUTER»», 33367, True ),
( (0x1F5B4,  0x21, ), Q«« (🖴) HARD DISK»», 33368, True ),
( (0x1F5B4,  0x3F, ), Q«« (🖴) HARD DISK»», 33369, True ),
( (0x1F5B4,  0x61, ), Q«« (🖴) HARD DISK»», 33370, True ),
( (0x1F5B4,  0x41, ), Q«« (🖴) HARD DISK»», 33371, True ),
( (0x1F5B4,  0x62, ), Q«« (🖴) HARD DISK»», 33372, True ),
( (0x1F5B5,  0x21, ), Q«« (🖵) SCREEN»», 33373, True ),
( (0x1F5B5,  0x3F, ), Q«« (🖵) SCREEN»», 33374, True ),
( (0x1F5B5,  0x61, ), Q«« (🖵) SCREEN»», 33375, True ),
( (0x1F5B5,  0x41, ), Q«« (🖵) SCREEN»», 33376, True ),
( (0x1F5B5,  0x62, ), Q«« (🖵) SCREEN»», 33377, True ),
( (0x1F5B6,  0x21, ), Q«« (🖶) PRINTER ICON»», 33378, True ),
( (0x1F5B6,  0x3F, ), Q«« (🖶) PRINTER ICON»», 33379, True ),
( (0x1F5B6,  0x61, ), Q«« (🖶) PRINTER ICON»», 33380, True ),
( (0x1F5B6,  0x41, ), Q«« (🖶) PRINTER ICON»», 33381, True ),
( (0x1F5B6,  0x62, ), Q«« (🖶) PRINTER ICON»», 33382, True ),
( (0x1F5B7,  0x21, ), Q«« (🖷) FAX ICON»», 33383, True ),
( (0x1F5B7,  0x3F, ), Q«« (🖷) FAX ICON»», 33384, True ),
( (0x1F5B7,  0x61, ), Q«« (🖷) FAX ICON»», 33385, True ),
( (0x1F5B7,  0x41, ), Q«« (🖷) FAX ICON»», 33386, True ),
( (0x1F5B7,  0x62, ), Q«« (🖷) FAX ICON»», 33387, True ),
( (0x1F5B8,  0x21, ), Q«« (🖸) OPTICAL DISC ICON»», 33388, True ),
( (0x1F5B8,  0x3F, ), Q«« (🖸) OPTICAL DISC ICON»», 33389, True ),
( (0x1F5B8,  0x61, ), Q«« (🖸) OPTICAL DISC ICON»», 33390, True ),
( (0x1F5B8,  0x41, ), Q«« (🖸) OPTICAL DISC ICON»», 33391, True ),
( (0x1F5B8,  0x62, ), Q«« (🖸) OPTICAL DISC ICON»», 33392, True ),
( (0x1F5B9,  0x21, ), Q«« (🖹) DOCUMENT WITH TEXT»», 33393, True ),
( (0x1F5B9,  0x3F, ), Q«« (🖹) DOCUMENT WITH TEXT»», 33394, True ),
( (0x1F5B9,  0x61, ), Q«« (🖹) DOCUMENT WITH TEXT»», 33395, True ),
( (0x1F5B9,  0x41, ), Q«« (🖹) DOCUMENT WITH TEXT»», 33396, True ),
( (0x1F5B9,  0x62, ), Q«« (🖹) DOCUMENT WITH TEXT»», 33397, True ),
( (0x1F5BA,  0x21, ), Q«« (🖺) DOCUMENT WITH TEXT AND PICTURE»», 33398, True ),
( (0x1F5BA,  0x3F, ), Q«« (🖺) DOCUMENT WITH TEXT AND PICTURE»», 33399, True ),
( (0x1F5BA,  0x61, ), Q«« (🖺) DOCUMENT WITH TEXT AND PICTURE»», 33400, True ),
( (0x1F5BA,  0x41, ), Q«« (🖺) DOCUMENT WITH TEXT AND PICTURE»», 33401, True ),
( (0x1F5BA,  0x62, ), Q«« (🖺) DOCUMENT WITH TEXT AND PICTURE»», 33402, True ),
( (0x1F5BB,  0x21, ), Q«« (🖻) DOCUMENT WITH PICTURE»», 33403, True ),
( (0x1F5BB,  0x3F, ), Q«« (🖻) DOCUMENT WITH PICTURE»», 33404, True ),
( (0x1F5BB,  0x61, ), Q«« (🖻) DOCUMENT WITH PICTURE»», 33405, True ),
( (0x1F5BB,  0x41, ), Q«« (🖻) DOCUMENT WITH PICTURE»», 33406, True ),
( (0x1F5BB,  0x62, ), Q«« (🖻) DOCUMENT WITH PICTURE»», 33407, True ),
( (0x1F5BC,  0x21, ), Q«« (🖼) FRAME WITH PICTURE»», 33408, True ),
( (0x1F5BC,  0x3F, ), Q«« (🖼) FRAME WITH PICTURE»», 33409, True ),
( (0x1F5BC,  0x61, ), Q«« (🖼) FRAME WITH PICTURE»», 33410, True ),
( (0x1F5BC,  0x41, ), Q«« (🖼) FRAME WITH PICTURE»», 33411, True ),
( (0x1F5BC,  0x62, ), Q«« (🖼) FRAME WITH PICTURE»», 33412, True ),
( (0x1F5BD,  0x21, ), Q«« (🖽) FRAME WITH TILES»», 33413, True ),
( (0x1F5BD,  0x3F, ), Q«« (🖽) FRAME WITH TILES»», 33414, True ),
( (0x1F5BD,  0x61, ), Q«« (🖽) FRAME WITH TILES»», 33415, True ),
( (0x1F5BD,  0x41, ), Q«« (🖽) FRAME WITH TILES»», 33416, True ),
( (0x1F5BD,  0x62, ), Q«« (🖽) FRAME WITH TILES»», 33417, True ),
( (0x1F5BE,  0x21, ), Q«« (🖾) FRAME WITH AN X»», 33418, True ),
( (0x1F5BE,  0x3F, ), Q«« (🖾) FRAME WITH AN X»», 33419, True ),
( (0x1F5BE,  0x61, ), Q«« (🖾) FRAME WITH AN X»», 33420, True ),
( (0x1F5BE,  0x41, ), Q«« (🖾) FRAME WITH AN X»», 33421, True ),
( (0x1F5BE,  0x62, ), Q«« (🖾) FRAME WITH AN X»», 33422, True ),
( (0x1F5BF,  0x21, ), Q«« (🖿) BLACK FOLDER»», 33423, True ),
( (0x1F5BF,  0x3F, ), Q«« (🖿) BLACK FOLDER»», 33424, True ),
( (0x1F5BF,  0x61, ), Q«« (🖿) BLACK FOLDER»», 33425, True ),
( (0x1F5BF,  0x41, ), Q«« (🖿) BLACK FOLDER»», 33426, True ),
( (0x1F5BF,  0x62, ), Q«« (🖿) BLACK FOLDER»», 33427, True ),
( (0x1F5C0,  0x21, ), Q«« (🗀) FOLDER»», 33428, True ),
( (0x1F5C0,  0x3F, ), Q«« (🗀) FOLDER»», 33429, True ),
( (0x1F5C0,  0x61, ), Q«« (🗀) FOLDER»», 33430, True ),
( (0x1F5C0,  0x41, ), Q«« (🗀) FOLDER»», 33431, True ),
( (0x1F5C0,  0x62, ), Q«« (🗀) FOLDER»», 33432, True ),
( (0x1F5C1,  0x21, ), Q«« (🗁) OPEN FOLDER»», 33433, True ),
( (0x1F5C1,  0x3F, ), Q«« (🗁) OPEN FOLDER»», 33434, True ),
( (0x1F5C1,  0x61, ), Q«« (🗁) OPEN FOLDER»», 33435, True ),
( (0x1F5C1,  0x41, ), Q«« (🗁) OPEN FOLDER»», 33436, True ),
( (0x1F5C1,  0x62, ), Q«« (🗁) OPEN FOLDER»», 33437, True ),
( (0x1F5C2,  0x21, ), Q«« (🗂) CARD INDEX DIVIDERS»», 33438, True ),
( (0x1F5C2,  0x3F, ), Q«« (🗂) CARD INDEX DIVIDERS»», 33439, True ),
( (0x1F5C2,  0x61, ), Q«« (🗂) CARD INDEX DIVIDERS»», 33440, True ),
( (0x1F5C2,  0x41, ), Q«« (🗂) CARD INDEX DIVIDERS»», 33441, True ),
( (0x1F5C2,  0x62, ), Q«« (🗂) CARD INDEX DIVIDERS»», 33442, True ),
( (0x1F5C3,  0x21, ), Q«« (🗃) CARD FILE BOX»», 33443, True ),
( (0x1F5C3,  0x3F, ), Q«« (🗃) CARD FILE BOX»», 33444, True ),
( (0x1F5C3,  0x61, ), Q«« (🗃) CARD FILE BOX»», 33445, True ),
( (0x1F5C3,  0x41, ), Q«« (🗃) CARD FILE BOX»», 33446, True ),
( (0x1F5C3,  0x62, ), Q«« (🗃) CARD FILE BOX»», 33447, True ),
( (0x1F5C4,  0x21, ), Q«« (🗄) FILE CABINET»», 33448, True ),
( (0x1F5C4,  0x3F, ), Q«« (🗄) FILE CABINET»», 33449, True ),
( (0x1F5C4,  0x61, ), Q«« (🗄) FILE CABINET»», 33450, True ),
( (0x1F5C4,  0x41, ), Q«« (🗄) FILE CABINET»», 33451, True ),
( (0x1F5C4,  0x62, ), Q«« (🗄) FILE CABINET»», 33452, True ),
( (0x1F5C5,  0x21, ), Q«« (🗅) EMPTY NOTE»», 33453, True ),
( (0x1F5C5,  0x3F, ), Q«« (🗅) EMPTY NOTE»», 33454, True ),
( (0x1F5C5,  0x61, ), Q«« (🗅) EMPTY NOTE»», 33455, True ),
( (0x1F5C5,  0x41, ), Q«« (🗅) EMPTY NOTE»», 33456, True ),
( (0x1F5C5,  0x62, ), Q«« (🗅) EMPTY NOTE»», 33457, True ),
( (0x1F5C6,  0x21, ), Q«« (🗆) EMPTY NOTE PAGE»», 33458, True ),
( (0x1F5C6,  0x3F, ), Q«« (🗆) EMPTY NOTE PAGE»», 33459, True ),
( (0x1F5C6,  0x61, ), Q«« (🗆) EMPTY NOTE PAGE»», 33460, True ),
( (0x1F5C6,  0x41, ), Q«« (🗆) EMPTY NOTE PAGE»», 33461, True ),
( (0x1F5C6,  0x62, ), Q«« (🗆) EMPTY NOTE PAGE»», 33462, True ),
( (0x1F5C7,  0x21, ), Q«« (🗇) EMPTY NOTE PAD»», 33463, True ),
( (0x1F5C7,  0x3F, ), Q«« (🗇) EMPTY NOTE PAD»», 33464, True ),
( (0x1F5C7,  0x61, ), Q«« (🗇) EMPTY NOTE PAD»», 33465, True ),
( (0x1F5C7,  0x41, ), Q«« (🗇) EMPTY NOTE PAD»», 33466, True ),
( (0x1F5C7,  0x62, ), Q«« (🗇) EMPTY NOTE PAD»», 33467, True ),
( (0x1F5C8,  0x21, ), Q«« (🗈) NOTE»», 33468, True ),
( (0x1F5C8,  0x3F, ), Q«« (🗈) NOTE»», 33469, True ),
( (0x1F5C8,  0x61, ), Q«« (🗈) NOTE»», 33470, True ),
( (0x1F5C8,  0x41, ), Q«« (🗈) NOTE»», 33471, True ),
( (0x1F5C8,  0x62, ), Q«« (🗈) NOTE»», 33472, True ),
( (0x1F5C9,  0x21, ), Q«« (🗉) NOTE PAGE»», 33473, True ),
( (0x1F5C9,  0x3F, ), Q«« (🗉) NOTE PAGE»», 33474, True ),
( (0x1F5C9,  0x61, ), Q«« (🗉) NOTE PAGE»», 33475, True ),
( (0x1F5C9,  0x41, ), Q«« (🗉) NOTE PAGE»», 33476, True ),
( (0x1F5C9,  0x62, ), Q«« (🗉) NOTE PAGE»», 33477, True ),
( (0x1F5CA,  0x21, ), Q«« (🗊) NOTE PAD»», 33478, True ),
( (0x1F5CA,  0x3F, ), Q«« (🗊) NOTE PAD»», 33479, True ),
( (0x1F5CA,  0x61, ), Q«« (🗊) NOTE PAD»», 33480, True ),
( (0x1F5CA,  0x41, ), Q«« (🗊) NOTE PAD»», 33481, True ),
( (0x1F5CA,  0x62, ), Q«« (🗊) NOTE PAD»», 33482, True ),
( (0x1F5CB,  0x21, ), Q«« (🗋) EMPTY DOCUMENT»», 33483, True ),
( (0x1F5CB,  0x3F, ), Q«« (🗋) EMPTY DOCUMENT»», 33484, True ),
( (0x1F5CB,  0x61, ), Q«« (🗋) EMPTY DOCUMENT»», 33485, True ),
( (0x1F5CB,  0x41, ), Q«« (🗋) EMPTY DOCUMENT»», 33486, True ),
( (0x1F5CB,  0x62, ), Q«« (🗋) EMPTY DOCUMENT»», 33487, True ),
( (0x1F5CC,  0x21, ), Q«« (🗌) EMPTY PAGE»», 33488, True ),
( (0x1F5CC,  0x3F, ), Q«« (🗌) EMPTY PAGE»», 33489, True ),
( (0x1F5CC,  0x61, ), Q«« (🗌) EMPTY PAGE»», 33490, True ),
( (0x1F5CC,  0x41, ), Q«« (🗌) EMPTY PAGE»», 33491, True ),
( (0x1F5CC,  0x62, ), Q«« (🗌) EMPTY PAGE»», 33492, True ),
( (0x1F5CD,  0x21, ), Q«« (🗍) EMPTY PAGES»», 33493, True ),
( (0x1F5CD,  0x3F, ), Q«« (🗍) EMPTY PAGES»», 33494, True ),
( (0x1F5CD,  0x61, ), Q«« (🗍) EMPTY PAGES»», 33495, True ),
( (0x1F5CD,  0x41, ), Q«« (🗍) EMPTY PAGES»», 33496, True ),
( (0x1F5CD,  0x62, ), Q«« (🗍) EMPTY PAGES»», 33497, True ),
( (0x1F5CE,  0x21, ), Q«« (🗎) DOCUMENT»», 33498, True ),
( (0x1F5CE,  0x3F, ), Q«« (🗎) DOCUMENT»», 33499, True ),
( (0x1F5CE,  0x61, ), Q«« (🗎) DOCUMENT»», 33500, True ),
( (0x1F5CE,  0x41, ), Q«« (🗎) DOCUMENT»», 33501, True ),
( (0x1F5CE,  0x62, ), Q«« (🗎) DOCUMENT»», 33502, True ),
( (0x1F5CF,  0x21, ), Q«« (🗏) PAGE»», 33503, True ),
( (0x1F5CF,  0x3F, ), Q«« (🗏) PAGE»», 33504, True ),
( (0x1F5CF,  0x61, ), Q«« (🗏) PAGE»», 33505, True ),
( (0x1F5CF,  0x41, ), Q«« (🗏) PAGE»», 33506, True ),
( (0x1F5CF,  0x62, ), Q«« (🗏) PAGE»», 33507, True ),
( (0x1F5D0,  0x21, ), Q«« (🗐) PAGES»», 33508, True ),
( (0x1F5D0,  0x3F, ), Q«« (🗐) PAGES»», 33509, True ),
( (0x1F5D0,  0x61, ), Q«« (🗐) PAGES»», 33510, True ),
( (0x1F5D0,  0x41, ), Q«« (🗐) PAGES»», 33511, True ),
( (0x1F5D0,  0x62, ), Q«« (🗐) PAGES»», 33512, True ),
( (0x1F5D1,  0x21, ), Q«« (🗑) WASTEBASKET»», 33513, True ),
( (0x1F5D1,  0x3F, ), Q«« (🗑) WASTEBASKET»», 33514, True ),
( (0x1F5D1,  0x61, ), Q«« (🗑) WASTEBASKET»», 33515, True ),
( (0x1F5D1,  0x41, ), Q«« (🗑) WASTEBASKET»», 33516, True ),
( (0x1F5D1,  0x62, ), Q«« (🗑) WASTEBASKET»», 33517, True ),
( (0x1F5D2,  0x21, ), Q«« (🗒) SPIRAL NOTE PAD»», 33518, True ),
( (0x1F5D2,  0x3F, ), Q«« (🗒) SPIRAL NOTE PAD»», 33519, True ),
( (0x1F5D2,  0x61, ), Q«« (🗒) SPIRAL NOTE PAD»», 33520, True ),
( (0x1F5D2,  0x41, ), Q«« (🗒) SPIRAL NOTE PAD»», 33521, True ),
( (0x1F5D2,  0x62, ), Q«« (🗒) SPIRAL NOTE PAD»», 33522, True ),
( (0x1F5D3,  0x21, ), Q«« (🗓) SPIRAL CALENDAR PAD»», 33523, True ),
( (0x1F5D3,  0x3F, ), Q«« (🗓) SPIRAL CALENDAR PAD»», 33524, True ),
( (0x1F5D3,  0x61, ), Q«« (🗓) SPIRAL CALENDAR PAD»», 33525, True ),
( (0x1F5D3,  0x41, ), Q«« (🗓) SPIRAL CALENDAR PAD»», 33526, True ),
( (0x1F5D3,  0x62, ), Q«« (🗓) SPIRAL CALENDAR PAD»», 33527, True ),
( (0x1F5D4,  0x21, ), Q«« (🗔) DESKTOP WINDOW»», 33528, True ),
( (0x1F5D4,  0x3F, ), Q«« (🗔) DESKTOP WINDOW»», 33529, True ),
( (0x1F5D4,  0x61, ), Q«« (🗔) DESKTOP WINDOW»», 33530, True ),
( (0x1F5D4,  0x41, ), Q«« (🗔) DESKTOP WINDOW»», 33531, True ),
( (0x1F5D4,  0x62, ), Q«« (🗔) DESKTOP WINDOW»», 33532, True ),
( (0x1F5D5,  0x21, ), Q«« (🗕) MINIMIZE»», 33533, True ),
( (0x1F5D5,  0x3F, ), Q«« (🗕) MINIMIZE»», 33534, True ),
( (0x1F5D5,  0x61, ), Q«« (🗕) MINIMIZE»», 33535, True ),
( (0x1F5D5,  0x41, ), Q«« (🗕) MINIMIZE»», 33536, True ),
( (0x1F5D5,  0x62, ), Q«« (🗕) MINIMIZE»», 33537, True ),
( (0x1F5D6,  0x21, ), Q«« (🗖) MAXIMIZE»», 33538, True ),
( (0x1F5D6,  0x3F, ), Q«« (🗖) MAXIMIZE»», 33539, True ),
( (0x1F5D6,  0x61, ), Q«« (🗖) MAXIMIZE»», 33540, True ),
( (0x1F5D6,  0x41, ), Q«« (🗖) MAXIMIZE»», 33541, True ),
( (0x1F5D6,  0x62, ), Q«« (🗖) MAXIMIZE»», 33542, True ),
( (0x1F5D7,  0x21, ), Q«« (🗗) OVERLAP»», 33543, True ),
( (0x1F5D7,  0x3F, ), Q«« (🗗) OVERLAP»», 33544, True ),
( (0x1F5D7,  0x61, ), Q«« (🗗) OVERLAP»», 33545, True ),
( (0x1F5D7,  0x41, ), Q«« (🗗) OVERLAP»», 33546, True ),
( (0x1F5D7,  0x62, ), Q«« (🗗) OVERLAP»», 33547, True ),
( (0x1F5D8,  0x21, ), Q«« (🗘) CLOCKWISE RIGHT AND LEFT SEMICIRCLE ARROWS»», 33548, True ),
( (0x1F5D8,  0x3F, ), Q«« (🗘) CLOCKWISE RIGHT AND LEFT SEMICIRCLE ARROWS»», 33549, True ),
( (0x1F5D8,  0x61, ), Q«« (🗘) CLOCKWISE RIGHT AND LEFT SEMICIRCLE ARROWS»», 33550, True ),
( (0x1F5D8,  0x41, ), Q«« (🗘) CLOCKWISE RIGHT AND LEFT SEMICIRCLE ARROWS»», 33551, True ),
( (0x1F5D8,  0x62, ), Q«« (🗘) CLOCKWISE RIGHT AND LEFT SEMICIRCLE ARROWS»», 33552, True ),
( (0x1F5D9,  0x21, ), Q«« (🗙) CANCELLATION X»», 33553, True ),
( (0x1F5D9,  0x3F, ), Q«« (🗙) CANCELLATION X»», 33554, True ),
( (0x1F5D9,  0x61, ), Q«« (🗙) CANCELLATION X»», 33555, True ),
( (0x1F5D9,  0x41, ), Q«« (🗙) CANCELLATION X»», 33556, True ),
( (0x1F5D9,  0x62, ), Q«« (🗙) CANCELLATION X»», 33557, True ),
( (0x1F5DA,  0x21, ), Q«« (🗚) INCREASE FONT SIZE SYMBOL»», 33558, True ),
( (0x1F5DA,  0x3F, ), Q«« (🗚) INCREASE FONT SIZE SYMBOL»», 33559, True ),
( (0x1F5DA,  0x61, ), Q«« (🗚) INCREASE FONT SIZE SYMBOL»», 33560, True ),
( (0x1F5DA,  0x41, ), Q«« (🗚) INCREASE FONT SIZE SYMBOL»», 33561, True ),
( (0x1F5DA,  0x62, ), Q«« (🗚) INCREASE FONT SIZE SYMBOL»», 33562, True ),
( (0x1F5DB,  0x21, ), Q«« (🗛) DECREASE FONT SIZE SYMBOL»», 33563, True ),
( (0x1F5DB,  0x3F, ), Q«« (🗛) DECREASE FONT SIZE SYMBOL»», 33564, True ),
( (0x1F5DB,  0x61, ), Q«« (🗛) DECREASE FONT SIZE SYMBOL»», 33565, True ),
( (0x1F5DB,  0x41, ), Q«« (🗛) DECREASE FONT SIZE SYMBOL»», 33566, True ),
( (0x1F5DB,  0x62, ), Q«« (🗛) DECREASE FONT SIZE SYMBOL»», 33567, True ),
( (0x1F5DC,  0x21, ), Q«« (🗜) COMPRESSION»», 33568, True ),
( (0x1F5DC,  0x3F, ), Q«« (🗜) COMPRESSION»», 33569, True ),
( (0x1F5DC,  0x61, ), Q«« (🗜) COMPRESSION»», 33570, True ),
( (0x1F5DC,  0x41, ), Q«« (🗜) COMPRESSION»», 33571, True ),
( (0x1F5DC,  0x62, ), Q«« (🗜) COMPRESSION»», 33572, True ),
( (0x1F5DD,  0x21, ), Q«« (🗝) OLD KEY»», 33573, True ),
( (0x1F5DD,  0x3F, ), Q«« (🗝) OLD KEY»», 33574, True ),
( (0x1F5DD,  0x61, ), Q«« (🗝) OLD KEY»», 33575, True ),
( (0x1F5DD,  0x41, ), Q«« (🗝) OLD KEY»», 33576, True ),
( (0x1F5DD,  0x62, ), Q«« (🗝) OLD KEY»», 33577, True ),
( (0x1F5DE,  0x21, ), Q«« (🗞) ROLLED-UP NEWSPAPER»», 33578, True ),
( (0x1F5DE,  0x3F, ), Q«« (🗞) ROLLED-UP NEWSPAPER»», 33579, True ),
( (0x1F5DE,  0x61, ), Q«« (🗞) ROLLED-UP NEWSPAPER»», 33580, True ),
( (0x1F5DE,  0x41, ), Q«« (🗞) ROLLED-UP NEWSPAPER»», 33581, True ),
( (0x1F5DE,  0x62, ), Q«« (🗞) ROLLED-UP NEWSPAPER»», 33582, True ),
( (0x1F5DF,  0x21, ), Q«« (🗟) PAGE WITH CIRCLED TEXT»», 33583, True ),
( (0x1F5DF,  0x3F, ), Q«« (🗟) PAGE WITH CIRCLED TEXT»», 33584, True ),
( (0x1F5DF,  0x61, ), Q«« (🗟) PAGE WITH CIRCLED TEXT»», 33585, True ),
( (0x1F5DF,  0x41, ), Q«« (🗟) PAGE WITH CIRCLED TEXT»», 33586, True ),
( (0x1F5DF,  0x62, ), Q«« (🗟) PAGE WITH CIRCLED TEXT»», 33587, True ),
( (0x1F5E0,  0x21, ), Q«« (🗠) STOCK CHART»», 33588, True ),
( (0x1F5E0,  0x3F, ), Q«« (🗠) STOCK CHART»», 33589, True ),
( (0x1F5E0,  0x61, ), Q«« (🗠) STOCK CHART»», 33590, True ),
( (0x1F5E0,  0x41, ), Q«« (🗠) STOCK CHART»», 33591, True ),
( (0x1F5E0,  0x62, ), Q«« (🗠) STOCK CHART»», 33592, True ),
( (0x1F5E1,  0x21, ), Q«« (🗡) DAGGER KNIFE»», 33593, True ),
( (0x1F5E1,  0x3F, ), Q«« (🗡) DAGGER KNIFE»», 33594, True ),
( (0x1F5E1,  0x61, ), Q«« (🗡) DAGGER KNIFE»», 33595, True ),
( (0x1F5E1,  0x41, ), Q«« (🗡) DAGGER KNIFE»», 33596, True ),
( (0x1F5E1,  0x62, ), Q«« (🗡) DAGGER KNIFE»», 33597, True ),
( (0x1F5E2,  0x21, ), Q«« (🗢) LIPS»», 33598, True ),
( (0x1F5E2,  0x3F, ), Q«« (🗢) LIPS»», 33599, True ),
( (0x1F5E2,  0x61, ), Q«« (🗢) LIPS»», 33600, True ),
( (0x1F5E2,  0x41, ), Q«« (🗢) LIPS»», 33601, True ),
( (0x1F5E2,  0x62, ), Q«« (🗢) LIPS»», 33602, True ),
( (0x1F5E3,  0x21, ), Q«« (🗣) SPEAKING HEAD IN SILHOUETTE»», 33603, True ),
( (0x1F5E3,  0x3F, ), Q«« (🗣) SPEAKING HEAD IN SILHOUETTE»», 33604, True ),
( (0x1F5E3,  0x61, ), Q«« (🗣) SPEAKING HEAD IN SILHOUETTE»», 33605, True ),
( (0x1F5E3,  0x41, ), Q«« (🗣) SPEAKING HEAD IN SILHOUETTE»», 33606, True ),
( (0x1F5E3,  0x62, ), Q«« (🗣) SPEAKING HEAD IN SILHOUETTE»», 33607, True ),
( (0x1F5E4,  0x21, ), Q«« (🗤) THREE RAYS ABOVE»», 33608, True ),
( (0x1F5E4,  0x3F, ), Q«« (🗤) THREE RAYS ABOVE»», 33609, True ),
( (0x1F5E4,  0x61, ), Q«« (🗤) THREE RAYS ABOVE»», 33610, True ),
( (0x1F5E4,  0x41, ), Q«« (🗤) THREE RAYS ABOVE»», 33611, True ),
( (0x1F5E4,  0x62, ), Q«« (🗤) THREE RAYS ABOVE»», 33612, True ),
( (0x1F5E5,  0x21, ), Q«« (🗥) THREE RAYS BELOW»», 33613, True ),
( (0x1F5E5,  0x3F, ), Q«« (🗥) THREE RAYS BELOW»», 33614, True ),
( (0x1F5E5,  0x61, ), Q«« (🗥) THREE RAYS BELOW»», 33615, True ),
( (0x1F5E5,  0x41, ), Q«« (🗥) THREE RAYS BELOW»», 33616, True ),
( (0x1F5E5,  0x62, ), Q«« (🗥) THREE RAYS BELOW»», 33617, True ),
( (0x1F5E6,  0x21, ), Q«« (🗦) THREE RAYS LEFT»», 33618, True ),
( (0x1F5E6,  0x3F, ), Q«« (🗦) THREE RAYS LEFT»», 33619, True ),
( (0x1F5E6,  0x61, ), Q«« (🗦) THREE RAYS LEFT»», 33620, True ),
( (0x1F5E6,  0x41, ), Q«« (🗦) THREE RAYS LEFT»», 33621, True ),
( (0x1F5E6,  0x62, ), Q«« (🗦) THREE RAYS LEFT»», 33622, True ),
( (0x1F5E7,  0x21, ), Q«« (🗧) THREE RAYS RIGHT»», 33623, True ),
( (0x1F5E7,  0x3F, ), Q«« (🗧) THREE RAYS RIGHT»», 33624, True ),
( (0x1F5E7,  0x61, ), Q«« (🗧) THREE RAYS RIGHT»», 33625, True ),
( (0x1F5E7,  0x41, ), Q«« (🗧) THREE RAYS RIGHT»», 33626, True ),
( (0x1F5E7,  0x62, ), Q«« (🗧) THREE RAYS RIGHT»», 33627, True ),
( (0x1F5E8,  0x21, ), Q«« (🗨) LEFT SPEECH BUBBLE»», 33628, True ),
( (0x1F5E8,  0x3F, ), Q«« (🗨) LEFT SPEECH BUBBLE»», 33629, True ),
( (0x1F5E8,  0x61, ), Q«« (🗨) LEFT SPEECH BUBBLE»», 33630, True ),
( (0x1F5E8,  0x41, ), Q«« (🗨) LEFT SPEECH BUBBLE»», 33631, True ),
( (0x1F5E8,  0x62, ), Q«« (🗨) LEFT SPEECH BUBBLE»», 33632, True ),
( (0x1F5E9,  0x21, ), Q«« (🗩) RIGHT SPEECH BUBBLE»», 33633, True ),
( (0x1F5E9,  0x3F, ), Q«« (🗩) RIGHT SPEECH BUBBLE»», 33634, True ),
( (0x1F5E9,  0x61, ), Q«« (🗩) RIGHT SPEECH BUBBLE»», 33635, True ),
( (0x1F5E9,  0x41, ), Q«« (🗩) RIGHT SPEECH BUBBLE»», 33636, True ),
( (0x1F5E9,  0x62, ), Q«« (🗩) RIGHT SPEECH BUBBLE»», 33637, True ),
( (0x1F5EA,  0x21, ), Q«« (🗪) TWO SPEECH BUBBLES»», 33638, True ),
( (0x1F5EA,  0x3F, ), Q«« (🗪) TWO SPEECH BUBBLES»», 33639, True ),
( (0x1F5EA,  0x61, ), Q«« (🗪) TWO SPEECH BUBBLES»», 33640, True ),
( (0x1F5EA,  0x41, ), Q«« (🗪) TWO SPEECH BUBBLES»», 33641, True ),
( (0x1F5EA,  0x62, ), Q«« (🗪) TWO SPEECH BUBBLES»», 33642, True ),
( (0x1F5EB,  0x21, ), Q«« (🗫) THREE SPEECH BUBBLES»», 33643, True ),
( (0x1F5EB,  0x3F, ), Q«« (🗫) THREE SPEECH BUBBLES»», 33644, True ),
( (0x1F5EB,  0x61, ), Q«« (🗫) THREE SPEECH BUBBLES»», 33645, True ),
( (0x1F5EB,  0x41, ), Q«« (🗫) THREE SPEECH BUBBLES»», 33646, True ),
( (0x1F5EB,  0x62, ), Q«« (🗫) THREE SPEECH BUBBLES»», 33647, True ),
( (0x1F5EC,  0x21, ), Q«« (🗬) LEFT THOUGHT BUBBLE»», 33648, True ),
( (0x1F5EC,  0x3F, ), Q«« (🗬) LEFT THOUGHT BUBBLE»», 33649, True ),
( (0x1F5EC,  0x61, ), Q«« (🗬) LEFT THOUGHT BUBBLE»», 33650, True ),
( (0x1F5EC,  0x41, ), Q«« (🗬) LEFT THOUGHT BUBBLE»», 33651, True ),
( (0x1F5EC,  0x62, ), Q«« (🗬) LEFT THOUGHT BUBBLE»», 33652, True ),
( (0x1F5ED,  0x21, ), Q«« (🗭) RIGHT THOUGHT BUBBLE»», 33653, True ),
( (0x1F5ED,  0x3F, ), Q«« (🗭) RIGHT THOUGHT BUBBLE»», 33654, True ),
( (0x1F5ED,  0x61, ), Q«« (🗭) RIGHT THOUGHT BUBBLE»», 33655, True ),
( (0x1F5ED,  0x41, ), Q«« (🗭) RIGHT THOUGHT BUBBLE»», 33656, True ),
( (0x1F5ED,  0x62, ), Q«« (🗭) RIGHT THOUGHT BUBBLE»», 33657, True ),
( (0x1F5EE,  0x21, ), Q«« (🗮) LEFT ANGER BUBBLE»», 33658, True ),
( (0x1F5EE,  0x3F, ), Q«« (🗮) LEFT ANGER BUBBLE»», 33659, True ),
( (0x1F5EE,  0x61, ), Q«« (🗮) LEFT ANGER BUBBLE»», 33660, True ),
( (0x1F5EE,  0x41, ), Q«« (🗮) LEFT ANGER BUBBLE»», 33661, True ),
( (0x1F5EE,  0x62, ), Q«« (🗮) LEFT ANGER BUBBLE»», 33662, True ),
( (0x1F5EF,  0x21, ), Q«« (🗯) RIGHT ANGER BUBBLE»», 33663, True ),
( (0x1F5EF,  0x3F, ), Q«« (🗯) RIGHT ANGER BUBBLE»», 33664, True ),
( (0x1F5EF,  0x61, ), Q«« (🗯) RIGHT ANGER BUBBLE»», 33665, True ),
( (0x1F5EF,  0x41, ), Q«« (🗯) RIGHT ANGER BUBBLE»», 33666, True ),
( (0x1F5EF,  0x62, ), Q«« (🗯) RIGHT ANGER BUBBLE»», 33667, True ),
( (0x1F5F0,  0x21, ), Q«« (🗰) MOOD BUBBLE»», 33668, True ),
( (0x1F5F0,  0x3F, ), Q«« (🗰) MOOD BUBBLE»», 33669, True ),
( (0x1F5F0,  0x61, ), Q«« (🗰) MOOD BUBBLE»», 33670, True ),
( (0x1F5F0,  0x41, ), Q«« (🗰) MOOD BUBBLE»», 33671, True ),
( (0x1F5F0,  0x62, ), Q«« (🗰) MOOD BUBBLE»», 33672, True ),
( (0x1F5F1,  0x21, ), Q«« (🗱) LIGHTNING MOOD BUBBLE»», 33673, True ),
( (0x1F5F1,  0x3F, ), Q«« (🗱) LIGHTNING MOOD BUBBLE»», 33674, True ),
( (0x1F5F1,  0x61, ), Q«« (🗱) LIGHTNING MOOD BUBBLE»», 33675, True ),
( (0x1F5F1,  0x41, ), Q«« (🗱) LIGHTNING MOOD BUBBLE»», 33676, True ),
( (0x1F5F1,  0x62, ), Q«« (🗱) LIGHTNING MOOD BUBBLE»», 33677, True ),
( (0x1F5F2,  0x21, ), Q«« (🗲) LIGHTNING MOOD»», 33678, True ),
( (0x1F5F2,  0x3F, ), Q«« (🗲) LIGHTNING MOOD»», 33679, True ),
( (0x1F5F2,  0x61, ), Q«« (🗲) LIGHTNING MOOD»», 33680, True ),
( (0x1F5F2,  0x41, ), Q«« (🗲) LIGHTNING MOOD»», 33681, True ),
( (0x1F5F2,  0x62, ), Q«« (🗲) LIGHTNING MOOD»», 33682, True ),
( (0x1F5F3,  0x21, ), Q«« (🗳) BALLOT BOX WITH BALLOT»», 33683, True ),
( (0x1F5F3,  0x3F, ), Q«« (🗳) BALLOT BOX WITH BALLOT»», 33684, True ),
( (0x1F5F3,  0x61, ), Q«« (🗳) BALLOT BOX WITH BALLOT»», 33685, True ),
( (0x1F5F3,  0x41, ), Q«« (🗳) BALLOT BOX WITH BALLOT»», 33686, True ),
( (0x1F5F3,  0x62, ), Q«« (🗳) BALLOT BOX WITH BALLOT»», 33687, True ),
( (0x1F5F4,  0x21, ), Q«« (🗴) BALLOT SCRIPT X»», 33688, True ),
( (0x1F5F4,  0x3F, ), Q«« (🗴) BALLOT SCRIPT X»», 33689, True ),
( (0x1F5F4,  0x61, ), Q«« (🗴) BALLOT SCRIPT X»», 33690, True ),
( (0x1F5F4,  0x41, ), Q«« (🗴) BALLOT SCRIPT X»», 33691, True ),
( (0x1F5F4,  0x62, ), Q«« (🗴) BALLOT SCRIPT X»», 33692, True ),
( (0x1F5F5,  0x21, ), Q«« (🗵) BALLOT BOX WITH SCRIPT X»», 33693, True ),
( (0x1F5F5,  0x3F, ), Q«« (🗵) BALLOT BOX WITH SCRIPT X»», 33694, True ),
( (0x1F5F5,  0x61, ), Q«« (🗵) BALLOT BOX WITH SCRIPT X»», 33695, True ),
( (0x1F5F5,  0x41, ), Q«« (🗵) BALLOT BOX WITH SCRIPT X»», 33696, True ),
( (0x1F5F5,  0x62, ), Q«« (🗵) BALLOT BOX WITH SCRIPT X»», 33697, True ),
( (0x1F5F6,  0x21, ), Q«« (🗶) BALLOT BOLD SCRIPT X»», 33698, True ),
( (0x1F5F6,  0x3F, ), Q«« (🗶) BALLOT BOLD SCRIPT X»», 33699, True ),
( (0x1F5F6,  0x61, ), Q«« (🗶) BALLOT BOLD SCRIPT X»», 33700, True ),
( (0x1F5F6,  0x41, ), Q«« (🗶) BALLOT BOLD SCRIPT X»», 33701, True ),
( (0x1F5F6,  0x62, ), Q«« (🗶) BALLOT BOLD SCRIPT X»», 33702, True ),
( (0x1F5F7,  0x21, ), Q«« (🗷) BALLOT BOX WITH BOLD SCRIPT X»», 33703, True ),
( (0x1F5F7,  0x3F, ), Q«« (🗷) BALLOT BOX WITH BOLD SCRIPT X»», 33704, True ),
( (0x1F5F7,  0x61, ), Q«« (🗷) BALLOT BOX WITH BOLD SCRIPT X»», 33705, True ),
( (0x1F5F7,  0x41, ), Q«« (🗷) BALLOT BOX WITH BOLD SCRIPT X»», 33706, True ),
( (0x1F5F7,  0x62, ), Q«« (🗷) BALLOT BOX WITH BOLD SCRIPT X»», 33707, True ),
( (0x1F5F8,  0x21, ), Q«« (🗸) LIGHT CHECK MARK»», 33708, True ),
( (0x1F5F8,  0x3F, ), Q«« (🗸) LIGHT CHECK MARK»», 33709, True ),
( (0x1F5F8,  0x61, ), Q«« (🗸) LIGHT CHECK MARK»», 33710, True ),
( (0x1F5F8,  0x41, ), Q«« (🗸) LIGHT CHECK MARK»», 33711, True ),
( (0x1F5F8,  0x62, ), Q«« (🗸) LIGHT CHECK MARK»», 33712, True ),
( (0x1F5F9,  0x21, ), Q«« (🗹) BALLOT BOX WITH BOLD CHECK»», 33713, True ),
( (0x1F5F9,  0x3F, ), Q«« (🗹) BALLOT BOX WITH BOLD CHECK»», 33714, True ),
( (0x1F5F9,  0x61, ), Q«« (🗹) BALLOT BOX WITH BOLD CHECK»», 33715, True ),
( (0x1F5F9,  0x41, ), Q«« (🗹) BALLOT BOX WITH BOLD CHECK»», 33716, True ),
( (0x1F5F9,  0x62, ), Q«« (🗹) BALLOT BOX WITH BOLD CHECK»», 33717, True ),
( (0x1F5FA,  0x21, ), Q«« (🗺) WORLD MAP»», 33718, True ),
( (0x1F5FA,  0x3F, ), Q«« (🗺) WORLD MAP»», 33719, True ),
( (0x1F5FA,  0x61, ), Q«« (🗺) WORLD MAP»», 33720, True ),
( (0x1F5FA,  0x41, ), Q«« (🗺) WORLD MAP»», 33721, True ),
( (0x1F5FA,  0x62, ), Q«« (🗺) WORLD MAP»», 33722, True ),
( (0x1F5FB,  0x21, ), Q«« (🗻) MOUNT FUJI»», 33723, True ),
( (0x1F5FB,  0x3F, ), Q«« (🗻) MOUNT FUJI»», 33724, True ),
( (0x1F5FB,  0x61, ), Q«« (🗻) MOUNT FUJI»», 33725, True ),
( (0x1F5FB,  0x41, ), Q«« (🗻) MOUNT FUJI»», 33726, True ),
( (0x1F5FB,  0x62, ), Q«« (🗻) MOUNT FUJI»», 33727, True ),
( (0x1F5FC,  0x21, ), Q«« (🗼) TOKYO TOWER»», 33728, True ),
( (0x1F5FC,  0x3F, ), Q«« (🗼) TOKYO TOWER»», 33729, True ),
( (0x1F5FC,  0x61, ), Q«« (🗼) TOKYO TOWER»», 33730, True ),
( (0x1F5FC,  0x41, ), Q«« (🗼) TOKYO TOWER»», 33731, True ),
( (0x1F5FC,  0x62, ), Q«« (🗼) TOKYO TOWER»», 33732, True ),
( (0x1F5FD,  0x21, ), Q«« (🗽) STATUE OF LIBERTY»», 33733, True ),
( (0x1F5FD,  0x3F, ), Q«« (🗽) STATUE OF LIBERTY»», 33734, True ),
( (0x1F5FD,  0x61, ), Q«« (🗽) STATUE OF LIBERTY»», 33735, True ),
( (0x1F5FD,  0x41, ), Q«« (🗽) STATUE OF LIBERTY»», 33736, True ),
( (0x1F5FD,  0x62, ), Q«« (🗽) STATUE OF LIBERTY»», 33737, True ),
( (0x1F5FE,  0x21, ), Q«« (🗾) SILHOUETTE OF JAPAN»», 33738, True ),
( (0x1F5FE,  0x3F, ), Q«« (🗾) SILHOUETTE OF JAPAN»», 33739, True ),
( (0x1F5FE,  0x61, ), Q«« (🗾) SILHOUETTE OF JAPAN»», 33740, True ),
( (0x1F5FE,  0x41, ), Q«« (🗾) SILHOUETTE OF JAPAN»», 33741, True ),
( (0x1F5FE,  0x62, ), Q«« (🗾) SILHOUETTE OF JAPAN»», 33742, True ),
( (0x1F5FF,  0x21, ), Q«« (🗿) MOYAI»», 33743, True ),
( (0x1F5FF,  0x3F, ), Q«« (🗿) MOYAI»», 33744, True ),
( (0x1F5FF,  0x61, ), Q«« (🗿) MOYAI»», 33745, True ),
( (0x1F5FF,  0x41, ), Q«« (🗿) MOYAI»», 33746, True ),
( (0x1F5FF,  0x62, ), Q«« (🗿) MOYAI»», 33747, True ),
( (0x1F900,  0x21, ), Q«« (🤀) CIRCLED CROSS FORMEE WITH FOUR DOTS»», 33748, True ),
( (0x1F900,  0x3F, ), Q«« (🤀) CIRCLED CROSS FORMEE WITH FOUR DOTS»», 33749, True ),
( (0x1F900,  0x61, ), Q«« (🤀) CIRCLED CROSS FORMEE WITH FOUR DOTS»», 33750, True ),
( (0x1F900,  0x41, ), Q«« (🤀) CIRCLED CROSS FORMEE WITH FOUR DOTS»», 33751, True ),
( (0x1F900,  0x62, ), Q«« (🤀) CIRCLED CROSS FORMEE WITH FOUR DOTS»», 33752, True ),
( (0x1F901,  0x21, ), Q«« (🤁) CIRCLED CROSS FORMEE WITH TWO DOTS»», 33753, True ),
( (0x1F901,  0x3F, ), Q«« (🤁) CIRCLED CROSS FORMEE WITH TWO DOTS»», 33754, True ),
( (0x1F901,  0x61, ), Q«« (🤁) CIRCLED CROSS FORMEE WITH TWO DOTS»», 33755, True ),
( (0x1F901,  0x41, ), Q«« (🤁) CIRCLED CROSS FORMEE WITH TWO DOTS»», 33756, True ),
( (0x1F901,  0x62, ), Q«« (🤁) CIRCLED CROSS FORMEE WITH TWO DOTS»», 33757, True ),
( (0x1F902,  0x21, ), Q«« (🤂) CIRCLED CROSS FORMEE»», 33758, True ),
( (0x1F902,  0x3F, ), Q«« (🤂) CIRCLED CROSS FORMEE»», 33759, True ),
( (0x1F902,  0x61, ), Q«« (🤂) CIRCLED CROSS FORMEE»», 33760, True ),
( (0x1F902,  0x41, ), Q«« (🤂) CIRCLED CROSS FORMEE»», 33761, True ),
( (0x1F902,  0x62, ), Q«« (🤂) CIRCLED CROSS FORMEE»», 33762, True ),
( (0x1F903,  0x21, ), Q«« (🤃) LEFT HALF CIRCLE WITH FOUR DOTS»», 33763, True ),
( (0x1F903,  0x3F, ), Q«« (🤃) LEFT HALF CIRCLE WITH FOUR DOTS»», 33764, True ),
( (0x1F903,  0x61, ), Q«« (🤃) LEFT HALF CIRCLE WITH FOUR DOTS»», 33765, True ),
( (0x1F903,  0x41, ), Q«« (🤃) LEFT HALF CIRCLE WITH FOUR DOTS»», 33766, True ),
( (0x1F903,  0x62, ), Q«« (🤃) LEFT HALF CIRCLE WITH FOUR DOTS»», 33767, True ),
( (0x1F904,  0x21, ), Q«« (🤄) LEFT HALF CIRCLE WITH THREE DOTS»», 33768, True ),
( (0x1F904,  0x3F, ), Q«« (🤄) LEFT HALF CIRCLE WITH THREE DOTS»», 33769, True ),
( (0x1F904,  0x61, ), Q«« (🤄) LEFT HALF CIRCLE WITH THREE DOTS»», 33770, True ),
( (0x1F904,  0x41, ), Q«« (🤄) LEFT HALF CIRCLE WITH THREE DOTS»», 33771, True ),
( (0x1F904,  0x62, ), Q«« (🤄) LEFT HALF CIRCLE WITH THREE DOTS»», 33772, True ),
( (0x1F905,  0x21, ), Q«« (🤅) LEFT HALF CIRCLE WITH TWO DOTS»», 33773, True ),
( (0x1F905,  0x3F, ), Q«« (🤅) LEFT HALF CIRCLE WITH TWO DOTS»», 33774, True ),
( (0x1F905,  0x61, ), Q«« (🤅) LEFT HALF CIRCLE WITH TWO DOTS»», 33775, True ),
( (0x1F905,  0x41, ), Q«« (🤅) LEFT HALF CIRCLE WITH TWO DOTS»», 33776, True ),
( (0x1F905,  0x62, ), Q«« (🤅) LEFT HALF CIRCLE WITH TWO DOTS»», 33777, True ),
( (0x1F906,  0x21, ), Q«« (🤆) LEFT HALF CIRCLE WITH DOT»», 33778, True ),
( (0x1F906,  0x3F, ), Q«« (🤆) LEFT HALF CIRCLE WITH DOT»», 33779, True ),
( (0x1F906,  0x61, ), Q«« (🤆) LEFT HALF CIRCLE WITH DOT»», 33780, True ),
( (0x1F906,  0x41, ), Q«« (🤆) LEFT HALF CIRCLE WITH DOT»», 33781, True ),
( (0x1F906,  0x62, ), Q«« (🤆) LEFT HALF CIRCLE WITH DOT»», 33782, True ),
( (0x1F907,  0x21, ), Q«« (🤇) LEFT HALF CIRCLE»», 33783, True ),
( (0x1F907,  0x3F, ), Q«« (🤇) LEFT HALF CIRCLE»», 33784, True ),
( (0x1F907,  0x61, ), Q«« (🤇) LEFT HALF CIRCLE»», 33785, True ),
( (0x1F907,  0x41, ), Q«« (🤇) LEFT HALF CIRCLE»», 33786, True ),
( (0x1F907,  0x62, ), Q«« (🤇) LEFT HALF CIRCLE»», 33787, True ),
( (0x1F908,  0x21, ), Q«« (🤈) DOWNWARD FACING HOOK»», 33788, True ),
( (0x1F908,  0x3F, ), Q«« (🤈) DOWNWARD FACING HOOK»», 33789, True ),
( (0x1F908,  0x61, ), Q«« (🤈) DOWNWARD FACING HOOK»», 33790, True ),
( (0x1F908,  0x41, ), Q«« (🤈) DOWNWARD FACING HOOK»», 33791, True ),
( (0x1F908,  0x62, ), Q«« (🤈) DOWNWARD FACING HOOK»», 33792, True ),
( (0x1F909,  0x21, ), Q«« (🤉) DOWNWARD FACING NOTCHED HOOK»», 33793, True ),
( (0x1F909,  0x3F, ), Q«« (🤉) DOWNWARD FACING NOTCHED HOOK»», 33794, True ),
( (0x1F909,  0x61, ), Q«« (🤉) DOWNWARD FACING NOTCHED HOOK»», 33795, True ),
( (0x1F909,  0x41, ), Q«« (🤉) DOWNWARD FACING NOTCHED HOOK»», 33796, True ),
( (0x1F909,  0x62, ), Q«« (🤉) DOWNWARD FACING NOTCHED HOOK»», 33797, True ),
( (0x1F90A,  0x21, ), Q«« (🤊) DOWNWARD FACING HOOK WITH DOT»», 33798, True ),
( (0x1F90A,  0x3F, ), Q«« (🤊) DOWNWARD FACING HOOK WITH DOT»», 33799, True ),
( (0x1F90A,  0x61, ), Q«« (🤊) DOWNWARD FACING HOOK WITH DOT»», 33800, True ),
( (0x1F90A,  0x41, ), Q«« (🤊) DOWNWARD FACING HOOK WITH DOT»», 33801, True ),
( (0x1F90A,  0x62, ), Q«« (🤊) DOWNWARD FACING HOOK WITH DOT»», 33802, True ),
( (0x1F90B,  0x21, ), Q«« (🤋) DOWNWARD FACING NOTCHED HOOK WITH DOT»», 33803, True ),
( (0x1F90B,  0x3F, ), Q«« (🤋) DOWNWARD FACING NOTCHED HOOK WITH DOT»», 33804, True ),
( (0x1F90B,  0x61, ), Q«« (🤋) DOWNWARD FACING NOTCHED HOOK WITH DOT»», 33805, True ),
( (0x1F90B,  0x41, ), Q«« (🤋) DOWNWARD FACING NOTCHED HOOK WITH DOT»», 33806, True ),
( (0x1F90B,  0x62, ), Q«« (🤋) DOWNWARD FACING NOTCHED HOOK WITH DOT»», 33807, True ),
( (0x1F90C,  0x21, ), Q«« (🤌) PINCHED FINGERS»», 33808, True ),
( (0x1F90C,  0x3F, ), Q«« (🤌) PINCHED FINGERS»», 33809, True ),
( (0x1F90C,  0x61, ), Q«« (🤌) PINCHED FINGERS»», 33810, True ),
( (0x1F90C,  0x41, ), Q«« (🤌) PINCHED FINGERS»», 33811, True ),
( (0x1F90C,  0x62, ), Q«« (🤌) PINCHED FINGERS»», 33812, True ),
( (0x1F90D,  0x21, ), Q«« (🤍) WHITE HEART»», 33813, True ),
( (0x1F90D,  0x3F, ), Q«« (🤍) WHITE HEART»», 33814, True ),
( (0x1F90D,  0x61, ), Q«« (🤍) WHITE HEART»», 33815, True ),
( (0x1F90D,  0x41, ), Q«« (🤍) WHITE HEART»», 33816, True ),
( (0x1F90D,  0x62, ), Q«« (🤍) WHITE HEART»», 33817, True ),
( (0x1F90E,  0x21, ), Q«« (🤎) BROWN HEART»», 33818, True ),
( (0x1F90E,  0x3F, ), Q«« (🤎) BROWN HEART»», 33819, True ),
( (0x1F90E,  0x61, ), Q«« (🤎) BROWN HEART»», 33820, True ),
( (0x1F90E,  0x41, ), Q«« (🤎) BROWN HEART»», 33821, True ),
( (0x1F90E,  0x62, ), Q«« (🤎) BROWN HEART»», 33822, True ),
( (0x1F90F,  0x21, ), Q«« (🤏) PINCHING HAND»», 33823, True ),
( (0x1F90F,  0x3F, ), Q«« (🤏) PINCHING HAND»», 33824, True ),
( (0x1F90F,  0x61, ), Q«« (🤏) PINCHING HAND»», 33825, True ),
( (0x1F90F,  0x41, ), Q«« (🤏) PINCHING HAND»», 33826, True ),
( (0x1F90F,  0x62, ), Q«« (🤏) PINCHING HAND»», 33827, True ),
( (0x1F910,  0x21, ), Q«« (🤐) ZIPPER-MOUTH FACE»», 33828, True ),
( (0x1F910,  0x3F, ), Q«« (🤐) ZIPPER-MOUTH FACE»», 33829, True ),
( (0x1F910,  0x61, ), Q«« (🤐) ZIPPER-MOUTH FACE»», 33830, True ),
( (0x1F910,  0x41, ), Q«« (🤐) ZIPPER-MOUTH FACE»», 33831, True ),
( (0x1F910,  0x62, ), Q«« (🤐) ZIPPER-MOUTH FACE»», 33832, True ),
( (0x1F911,  0x21, ), Q«« (🤑) MONEY-MOUTH FACE»», 33833, True ),
( (0x1F911,  0x3F, ), Q«« (🤑) MONEY-MOUTH FACE»», 33834, True ),
( (0x1F911,  0x61, ), Q«« (🤑) MONEY-MOUTH FACE»», 33835, True ),
( (0x1F911,  0x41, ), Q«« (🤑) MONEY-MOUTH FACE»», 33836, True ),
( (0x1F911,  0x62, ), Q«« (🤑) MONEY-MOUTH FACE»», 33837, True ),
( (0x1F912,  0x21, ), Q«« (🤒) FACE WITH THERMOMETER»», 33838, True ),
( (0x1F912,  0x3F, ), Q«« (🤒) FACE WITH THERMOMETER»», 33839, True ),
( (0x1F912,  0x61, ), Q«« (🤒) FACE WITH THERMOMETER»», 33840, True ),
( (0x1F912,  0x41, ), Q«« (🤒) FACE WITH THERMOMETER»», 33841, True ),
( (0x1F912,  0x62, ), Q«« (🤒) FACE WITH THERMOMETER»», 33842, True ),
( (0x1F913,  0x21, ), Q«« (🤓) NERD FACE»», 33843, True ),
( (0x1F913,  0x3F, ), Q«« (🤓) NERD FACE»», 33844, True ),
( (0x1F913,  0x61, ), Q«« (🤓) NERD FACE»», 33845, True ),
( (0x1F913,  0x41, ), Q«« (🤓) NERD FACE»», 33846, True ),
( (0x1F913,  0x62, ), Q«« (🤓) NERD FACE»», 33847, True ),
( (0x1F914,  0x21, ), Q«« (🤔) THINKING FACE»», 33848, True ),
( (0x1F914,  0x3F, ), Q«« (🤔) THINKING FACE»», 33849, True ),
( (0x1F914,  0x61, ), Q«« (🤔) THINKING FACE»», 33850, True ),
( (0x1F914,  0x41, ), Q«« (🤔) THINKING FACE»», 33851, True ),
( (0x1F914,  0x62, ), Q«« (🤔) THINKING FACE»», 33852, True ),
( (0x1F915,  0x21, ), Q«« (🤕) FACE WITH HEAD-BANDAGE»», 33853, True ),
( (0x1F915,  0x3F, ), Q«« (🤕) FACE WITH HEAD-BANDAGE»», 33854, True ),
( (0x1F915,  0x61, ), Q«« (🤕) FACE WITH HEAD-BANDAGE»», 33855, True ),
( (0x1F915,  0x41, ), Q«« (🤕) FACE WITH HEAD-BANDAGE»», 33856, True ),
( (0x1F915,  0x62, ), Q«« (🤕) FACE WITH HEAD-BANDAGE»», 33857, True ),
( (0x1F916,  0x21, ), Q«« (🤖) ROBOT FACE»», 33858, True ),
( (0x1F916,  0x3F, ), Q«« (🤖) ROBOT FACE»», 33859, True ),
( (0x1F916,  0x61, ), Q«« (🤖) ROBOT FACE»», 33860, True ),
( (0x1F916,  0x41, ), Q«« (🤖) ROBOT FACE»», 33861, True ),
( (0x1F916,  0x62, ), Q«« (🤖) ROBOT FACE»», 33862, True ),
( (0x1F917,  0x21, ), Q«« (🤗) HUGGING FACE»», 33863, True ),
( (0x1F917,  0x3F, ), Q«« (🤗) HUGGING FACE»», 33864, True ),
( (0x1F917,  0x61, ), Q«« (🤗) HUGGING FACE»», 33865, True ),
( (0x1F917,  0x41, ), Q«« (🤗) HUGGING FACE»», 33866, True ),
( (0x1F917,  0x62, ), Q«« (🤗) HUGGING FACE»», 33867, True ),
( (0x1F918,  0x21, ), Q«« (🤘) SIGN OF THE HORNS»», 33868, True ),
( (0x1F918,  0x3F, ), Q«« (🤘) SIGN OF THE HORNS»», 33869, True ),
( (0x1F918,  0x61, ), Q«« (🤘) SIGN OF THE HORNS»», 33870, True ),
( (0x1F918,  0x41, ), Q«« (🤘) SIGN OF THE HORNS»», 33871, True ),
( (0x1F918,  0x62, ), Q«« (🤘) SIGN OF THE HORNS»», 33872, True ),
( (0x1F919,  0x21, ), Q«« (🤙) CALL ME HAND»», 33873, True ),
( (0x1F919,  0x3F, ), Q«« (🤙) CALL ME HAND»», 33874, True ),
( (0x1F919,  0x61, ), Q«« (🤙) CALL ME HAND»», 33875, True ),
( (0x1F919,  0x41, ), Q«« (🤙) CALL ME HAND»», 33876, True ),
( (0x1F919,  0x62, ), Q«« (🤙) CALL ME HAND»», 33877, True ),
( (0x1F91A,  0x21, ), Q«« (🤚) RAISED BACK OF HAND»», 33878, True ),
( (0x1F91A,  0x3F, ), Q«« (🤚) RAISED BACK OF HAND»», 33879, True ),
( (0x1F91A,  0x61, ), Q«« (🤚) RAISED BACK OF HAND»», 33880, True ),
( (0x1F91A,  0x41, ), Q«« (🤚) RAISED BACK OF HAND»», 33881, True ),
( (0x1F91A,  0x62, ), Q«« (🤚) RAISED BACK OF HAND»», 33882, True ),
( (0x1F91B,  0x21, ), Q«« (🤛) LEFT-FACING FIST»», 33883, True ),
( (0x1F91B,  0x3F, ), Q«« (🤛) LEFT-FACING FIST»», 33884, True ),
( (0x1F91B,  0x61, ), Q«« (🤛) LEFT-FACING FIST»», 33885, True ),
( (0x1F91B,  0x41, ), Q«« (🤛) LEFT-FACING FIST»», 33886, True ),
( (0x1F91B,  0x62, ), Q«« (🤛) LEFT-FACING FIST»», 33887, True ),
( (0x1F91C,  0x21, ), Q«« (🤜) RIGHT-FACING FIST»», 33888, True ),
( (0x1F91C,  0x3F, ), Q«« (🤜) RIGHT-FACING FIST»», 33889, True ),
( (0x1F91C,  0x61, ), Q«« (🤜) RIGHT-FACING FIST»», 33890, True ),
( (0x1F91C,  0x41, ), Q«« (🤜) RIGHT-FACING FIST»», 33891, True ),
( (0x1F91C,  0x62, ), Q«« (🤜) RIGHT-FACING FIST»», 33892, True ),
( (0x1F91D,  0x21, ), Q«« (🤝) HANDSHAKE»», 33893, True ),
( (0x1F91D,  0x3F, ), Q«« (🤝) HANDSHAKE»», 33894, True ),
( (0x1F91D,  0x61, ), Q«« (🤝) HANDSHAKE»», 33895, True ),
( (0x1F91D,  0x41, ), Q«« (🤝) HANDSHAKE»», 33896, True ),
( (0x1F91D,  0x62, ), Q«« (🤝) HANDSHAKE»», 33897, True ),
( (0x1F91E,  0x21, ), Q«« (🤞) HAND WITH INDEX AND MIDDLE FINGERS CROSSED»», 33898, True ),
( (0x1F91E,  0x3F, ), Q«« (🤞) HAND WITH INDEX AND MIDDLE FINGERS CROSSED»», 33899, True ),
( (0x1F91E,  0x61, ), Q«« (🤞) HAND WITH INDEX AND MIDDLE FINGERS CROSSED»», 33900, True ),
( (0x1F91E,  0x41, ), Q«« (🤞) HAND WITH INDEX AND MIDDLE FINGERS CROSSED»», 33901, True ),
( (0x1F91E,  0x62, ), Q«« (🤞) HAND WITH INDEX AND MIDDLE FINGERS CROSSED»», 33902, True ),
( (0x1F91F,  0x21, ), Q«« (🤟) I LOVE YOU HAND SIGN»», 33903, True ),
( (0x1F91F,  0x3F, ), Q«« (🤟) I LOVE YOU HAND SIGN»», 33904, True ),
( (0x1F91F,  0x61, ), Q«« (🤟) I LOVE YOU HAND SIGN»», 33905, True ),
( (0x1F91F,  0x41, ), Q«« (🤟) I LOVE YOU HAND SIGN»», 33906, True ),
( (0x1F91F,  0x62, ), Q«« (🤟) I LOVE YOU HAND SIGN»», 33907, True ),
( (0x1F920,  0x21, ), Q«« (🤠) FACE WITH COWBOY HAT»», 33908, True ),
( (0x1F920,  0x3F, ), Q«« (🤠) FACE WITH COWBOY HAT»», 33909, True ),
( (0x1F920,  0x61, ), Q«« (🤠) FACE WITH COWBOY HAT»», 33910, True ),
( (0x1F920,  0x41, ), Q«« (🤠) FACE WITH COWBOY HAT»», 33911, True ),
( (0x1F920,  0x62, ), Q«« (🤠) FACE WITH COWBOY HAT»», 33912, True ),
( (0x1F921,  0x21, ), Q«« (🤡) CLOWN FACE»», 33913, True ),
( (0x1F921,  0x3F, ), Q«« (🤡) CLOWN FACE»», 33914, True ),
( (0x1F921,  0x61, ), Q«« (🤡) CLOWN FACE»», 33915, True ),
( (0x1F921,  0x41, ), Q«« (🤡) CLOWN FACE»», 33916, True ),
( (0x1F921,  0x62, ), Q«« (🤡) CLOWN FACE»», 33917, True ),
( (0x1F922,  0x21, ), Q«« (🤢) NAUSEATED FACE»», 33918, True ),
( (0x1F922,  0x3F, ), Q«« (🤢) NAUSEATED FACE»», 33919, True ),
( (0x1F922,  0x61, ), Q«« (🤢) NAUSEATED FACE»», 33920, True ),
( (0x1F922,  0x41, ), Q«« (🤢) NAUSEATED FACE»», 33921, True ),
( (0x1F922,  0x62, ), Q«« (🤢) NAUSEATED FACE»», 33922, True ),
( (0x1F923,  0x21, ), Q«« (🤣) ROLLING ON THE FLOOR LAUGHING»», 33923, True ),
( (0x1F923,  0x3F, ), Q«« (🤣) ROLLING ON THE FLOOR LAUGHING»», 33924, True ),
( (0x1F923,  0x61, ), Q«« (🤣) ROLLING ON THE FLOOR LAUGHING»», 33925, True ),
( (0x1F923,  0x41, ), Q«« (🤣) ROLLING ON THE FLOOR LAUGHING»», 33926, True ),
( (0x1F923,  0x62, ), Q«« (🤣) ROLLING ON THE FLOOR LAUGHING»», 33927, True ),
( (0x1F924,  0x21, ), Q«« (🤤) DROOLING FACE»», 33928, True ),
( (0x1F924,  0x3F, ), Q«« (🤤) DROOLING FACE»», 33929, True ),
( (0x1F924,  0x61, ), Q«« (🤤) DROOLING FACE»», 33930, True ),
( (0x1F924,  0x41, ), Q«« (🤤) DROOLING FACE»», 33931, True ),
( (0x1F924,  0x62, ), Q«« (🤤) DROOLING FACE»», 33932, True ),
( (0x1F925,  0x21, ), Q«« (🤥) LYING FACE»», 33933, True ),
( (0x1F925,  0x3F, ), Q«« (🤥) LYING FACE»», 33934, True ),
( (0x1F925,  0x61, ), Q«« (🤥) LYING FACE»», 33935, True ),
( (0x1F925,  0x41, ), Q«« (🤥) LYING FACE»», 33936, True ),
( (0x1F925,  0x62, ), Q«« (🤥) LYING FACE»», 33937, True ),
( (0x1F926,  0x21, ), Q«« (🤦) FACE PALM»», 33938, True ),
( (0x1F926,  0x3F, ), Q«« (🤦) FACE PALM»», 33939, True ),
( (0x1F926,  0x61, ), Q«« (🤦) FACE PALM»», 33940, True ),
( (0x1F926,  0x41, ), Q«« (🤦) FACE PALM»», 33941, True ),
( (0x1F926,  0x62, ), Q«« (🤦) FACE PALM»», 33942, True ),
( (0x1F927,  0x21, ), Q«« (🤧) SNEEZING FACE»», 33943, True ),
( (0x1F927,  0x3F, ), Q«« (🤧) SNEEZING FACE»», 33944, True ),
( (0x1F927,  0x61, ), Q«« (🤧) SNEEZING FACE»», 33945, True ),
( (0x1F927,  0x41, ), Q«« (🤧) SNEEZING FACE»», 33946, True ),
( (0x1F927,  0x62, ), Q«« (🤧) SNEEZING FACE»», 33947, True ),
( (0x1F928,  0x21, ), Q«« (🤨) FACE WITH ONE EYEBROW RAISED»», 33948, True ),
( (0x1F928,  0x3F, ), Q«« (🤨) FACE WITH ONE EYEBROW RAISED»», 33949, True ),
( (0x1F928,  0x61, ), Q«« (🤨) FACE WITH ONE EYEBROW RAISED»», 33950, True ),
( (0x1F928,  0x41, ), Q«« (🤨) FACE WITH ONE EYEBROW RAISED»», 33951, True ),
( (0x1F928,  0x62, ), Q«« (🤨) FACE WITH ONE EYEBROW RAISED»», 33952, True ),
( (0x1F929,  0x21, ), Q«« (🤩) GRINNING FACE WITH STAR EYES»», 33953, True ),
( (0x1F929,  0x3F, ), Q«« (🤩) GRINNING FACE WITH STAR EYES»», 33954, True ),
( (0x1F929,  0x61, ), Q«« (🤩) GRINNING FACE WITH STAR EYES»», 33955, True ),
( (0x1F929,  0x41, ), Q«« (🤩) GRINNING FACE WITH STAR EYES»», 33956, True ),
( (0x1F929,  0x62, ), Q«« (🤩) GRINNING FACE WITH STAR EYES»», 33957, True ),
( (0x1F92A,  0x21, ), Q«« (🤪) GRINNING FACE WITH ONE LARGE AND ONE SMALL EYE»», 33958, True ),
( (0x1F92A,  0x3F, ), Q«« (🤪) GRINNING FACE WITH ONE LARGE AND ONE SMALL EYE»», 33959, True ),
( (0x1F92A,  0x61, ), Q«« (🤪) GRINNING FACE WITH ONE LARGE AND ONE SMALL EYE»», 33960, True ),
( (0x1F92A,  0x41, ), Q«« (🤪) GRINNING FACE WITH ONE LARGE AND ONE SMALL EYE»», 33961, True ),
( (0x1F92A,  0x62, ), Q«« (🤪) GRINNING FACE WITH ONE LARGE AND ONE SMALL EYE»», 33962, True ),
( (0x1F92B,  0x21, ), Q«« (🤫) FACE WITH FINGER COVERING CLOSED LIPS»», 33963, True ),
( (0x1F92B,  0x3F, ), Q«« (🤫) FACE WITH FINGER COVERING CLOSED LIPS»», 33964, True ),
( (0x1F92B,  0x61, ), Q«« (🤫) FACE WITH FINGER COVERING CLOSED LIPS»», 33965, True ),
( (0x1F92B,  0x41, ), Q«« (🤫) FACE WITH FINGER COVERING CLOSED LIPS»», 33966, True ),
( (0x1F92B,  0x62, ), Q«« (🤫) FACE WITH FINGER COVERING CLOSED LIPS»», 33967, True ),
( (0x1F92C,  0x21, ), Q«« (🤬) SERIOUS FACE WITH SYMBOLS COVERING MOUTH»», 33968, True ),
( (0x1F92C,  0x3F, ), Q«« (🤬) SERIOUS FACE WITH SYMBOLS COVERING MOUTH»», 33969, True ),
( (0x1F92C,  0x61, ), Q«« (🤬) SERIOUS FACE WITH SYMBOLS COVERING MOUTH»», 33970, True ),
( (0x1F92C,  0x41, ), Q«« (🤬) SERIOUS FACE WITH SYMBOLS COVERING MOUTH»», 33971, True ),
( (0x1F92C,  0x62, ), Q«« (🤬) SERIOUS FACE WITH SYMBOLS COVERING MOUTH»», 33972, True ),
( (0x1F92D,  0x21, ), Q«« (🤭) SMILING FACE WITH SMILING EYES AND HAND COVERING MOUTH»», 33973, True ),
( (0x1F92D,  0x3F, ), Q«« (🤭) SMILING FACE WITH SMILING EYES AND HAND COVERING MOUTH»», 33974, True ),
( (0x1F92D,  0x61, ), Q«« (🤭) SMILING FACE WITH SMILING EYES AND HAND COVERING MOUTH»», 33975, True ),
( (0x1F92D,  0x41, ), Q«« (🤭) SMILING FACE WITH SMILING EYES AND HAND COVERING MOUTH»», 33976, True ),
( (0x1F92D,  0x62, ), Q«« (🤭) SMILING FACE WITH SMILING EYES AND HAND COVERING MOUTH»», 33977, True ),
( (0x1F92E,  0x21, ), Q«« (🤮) FACE WITH OPEN MOUTH VOMITING»», 33978, True ),
( (0x1F92E,  0x3F, ), Q«« (🤮) FACE WITH OPEN MOUTH VOMITING»», 33979, True ),
( (0x1F92E,  0x61, ), Q«« (🤮) FACE WITH OPEN MOUTH VOMITING»», 33980, True ),
( (0x1F92E,  0x41, ), Q«« (🤮) FACE WITH OPEN MOUTH VOMITING»», 33981, True ),
( (0x1F92E,  0x62, ), Q«« (🤮) FACE WITH OPEN MOUTH VOMITING»», 33982, True ),
( (0x1F92F,  0x21, ), Q«« (🤯) SHOCKED FACE WITH EXPLODING HEAD»», 33983, True ),
( (0x1F92F,  0x3F, ), Q«« (🤯) SHOCKED FACE WITH EXPLODING HEAD»», 33984, True ),
( (0x1F92F,  0x61, ), Q«« (🤯) SHOCKED FACE WITH EXPLODING HEAD»», 33985, True ),
( (0x1F92F,  0x41, ), Q«« (🤯) SHOCKED FACE WITH EXPLODING HEAD»», 33986, True ),
( (0x1F92F,  0x62, ), Q«« (🤯) SHOCKED FACE WITH EXPLODING HEAD»», 33987, True ),
( (0x1F930,  0x21, ), Q«« (🤰) PREGNANT WOMAN»», 33988, True ),
( (0x1F930,  0x3F, ), Q«« (🤰) PREGNANT WOMAN»», 33989, True ),
( (0x1F930,  0x61, ), Q«« (🤰) PREGNANT WOMAN»», 33990, True ),
( (0x1F930,  0x41, ), Q«« (🤰) PREGNANT WOMAN»», 33991, True ),
( (0x1F930,  0x62, ), Q«« (🤰) PREGNANT WOMAN»», 33992, True ),
( (0x1F931,  0x21, ), Q«« (🤱) BREAST-FEEDING»», 33993, True ),
( (0x1F931,  0x3F, ), Q«« (🤱) BREAST-FEEDING»», 33994, True ),
( (0x1F931,  0x61, ), Q«« (🤱) BREAST-FEEDING»», 33995, True ),
( (0x1F931,  0x41, ), Q«« (🤱) BREAST-FEEDING»», 33996, True ),
( (0x1F931,  0x62, ), Q«« (🤱) BREAST-FEEDING»», 33997, True ),
( (0x1F932,  0x21, ), Q«« (🤲) PALMS UP TOGETHER»», 33998, True ),
( (0x1F932,  0x3F, ), Q«« (🤲) PALMS UP TOGETHER»», 33999, True ),
( (0x1F932,  0x61, ), Q«« (🤲) PALMS UP TOGETHER»», 34000, True ),
( (0x1F932,  0x41, ), Q«« (🤲) PALMS UP TOGETHER»», 34001, True ),
( (0x1F932,  0x62, ), Q«« (🤲) PALMS UP TOGETHER»», 34002, True ),
( (0x1F933,  0x21, ), Q«« (🤳) SELFIE»», 34003, True ),
( (0x1F933,  0x3F, ), Q«« (🤳) SELFIE»», 34004, True ),
( (0x1F933,  0x61, ), Q«« (🤳) SELFIE»», 34005, True ),
( (0x1F933,  0x41, ), Q«« (🤳) SELFIE»», 34006, True ),
( (0x1F933,  0x62, ), Q«« (🤳) SELFIE»», 34007, True ),
( (0x1F934,  0x21, ), Q«« (🤴) PRINCE»», 34008, True ),
( (0x1F934,  0x3F, ), Q«« (🤴) PRINCE»», 34009, True ),
( (0x1F934,  0x61, ), Q«« (🤴) PRINCE»», 34010, True ),
( (0x1F934,  0x41, ), Q«« (🤴) PRINCE»», 34011, True ),
( (0x1F934,  0x62, ), Q«« (🤴) PRINCE»», 34012, True ),
( (0x1F935,  0x21, ), Q«« (🤵) MAN IN TUXEDO»», 34013, True ),
( (0x1F935,  0x3F, ), Q«« (🤵) MAN IN TUXEDO»», 34014, True ),
( (0x1F935,  0x61, ), Q«« (🤵) MAN IN TUXEDO»», 34015, True ),
( (0x1F935,  0x41, ), Q«« (🤵) MAN IN TUXEDO»», 34016, True ),
( (0x1F935,  0x62, ), Q«« (🤵) MAN IN TUXEDO»», 34017, True ),
( (0x1F936,  0x21, ), Q«« (🤶) MOTHER CHRISTMAS»», 34018, True ),
( (0x1F936,  0x3F, ), Q«« (🤶) MOTHER CHRISTMAS»», 34019, True ),
( (0x1F936,  0x61, ), Q«« (🤶) MOTHER CHRISTMAS»», 34020, True ),
( (0x1F936,  0x41, ), Q«« (🤶) MOTHER CHRISTMAS»», 34021, True ),
( (0x1F936,  0x62, ), Q«« (🤶) MOTHER CHRISTMAS»», 34022, True ),
( (0x1F937,  0x21, ), Q«« (🤷) SHRUG»», 34023, True ),
( (0x1F937,  0x3F, ), Q«« (🤷) SHRUG»», 34024, True ),
( (0x1F937,  0x61, ), Q«« (🤷) SHRUG»», 34025, True ),
( (0x1F937,  0x41, ), Q«« (🤷) SHRUG»», 34026, True ),
( (0x1F937,  0x62, ), Q«« (🤷) SHRUG»», 34027, True ),
( (0x1F938,  0x21, ), Q«« (🤸) PERSON DOING CARTWHEEL»», 34028, True ),
( (0x1F938,  0x3F, ), Q«« (🤸) PERSON DOING CARTWHEEL»», 34029, True ),
( (0x1F938,  0x61, ), Q«« (🤸) PERSON DOING CARTWHEEL»», 34030, True ),
( (0x1F938,  0x41, ), Q«« (🤸) PERSON DOING CARTWHEEL»», 34031, True ),
( (0x1F938,  0x62, ), Q«« (🤸) PERSON DOING CARTWHEEL»», 34032, True ),
( (0x1F939,  0x21, ), Q«« (🤹) JUGGLING»», 34033, True ),
( (0x1F939,  0x3F, ), Q«« (🤹) JUGGLING»», 34034, True ),
( (0x1F939,  0x61, ), Q«« (🤹) JUGGLING»», 34035, True ),
( (0x1F939,  0x41, ), Q«« (🤹) JUGGLING»», 34036, True ),
( (0x1F939,  0x62, ), Q«« (🤹) JUGGLING»», 34037, True ),
( (0x1F93A,  0x21, ), Q«« (🤺) FENCER»», 34038, True ),
( (0x1F93A,  0x3F, ), Q«« (🤺) FENCER»», 34039, True ),
( (0x1F93A,  0x61, ), Q«« (🤺) FENCER»», 34040, True ),
( (0x1F93A,  0x41, ), Q«« (🤺) FENCER»», 34041, True ),
( (0x1F93A,  0x62, ), Q«« (🤺) FENCER»», 34042, True ),
( (0x1F93B,  0x21, ), Q«« (🤻) MODERN PENTATHLON»», 34043, True ),
( (0x1F93B,  0x3F, ), Q«« (🤻) MODERN PENTATHLON»», 34044, True ),
( (0x1F93B,  0x61, ), Q«« (🤻) MODERN PENTATHLON»», 34045, True ),
( (0x1F93B,  0x41, ), Q«« (🤻) MODERN PENTATHLON»», 34046, True ),
( (0x1F93B,  0x62, ), Q«« (🤻) MODERN PENTATHLON»», 34047, True ),
( (0x1F93C,  0x21, ), Q«« (🤼) WRESTLERS»», 34048, True ),
( (0x1F93C,  0x3F, ), Q«« (🤼) WRESTLERS»», 34049, True ),
( (0x1F93C,  0x61, ), Q«« (🤼) WRESTLERS»», 34050, True ),
( (0x1F93C,  0x41, ), Q«« (🤼) WRESTLERS»», 34051, True ),
( (0x1F93C,  0x62, ), Q«« (🤼) WRESTLERS»», 34052, True ),
( (0x1F93D,  0x21, ), Q«« (🤽) WATER POLO»», 34053, True ),
( (0x1F93D,  0x3F, ), Q«« (🤽) WATER POLO»», 34054, True ),
( (0x1F93D,  0x61, ), Q«« (🤽) WATER POLO»», 34055, True ),
( (0x1F93D,  0x41, ), Q«« (🤽) WATER POLO»», 34056, True ),
( (0x1F93D,  0x62, ), Q«« (🤽) WATER POLO»», 34057, True ),
( (0x1F93E,  0x21, ), Q«« (🤾) HANDBALL»», 34058, True ),
( (0x1F93E,  0x3F, ), Q«« (🤾) HANDBALL»», 34059, True ),
( (0x1F93E,  0x61, ), Q«« (🤾) HANDBALL»», 34060, True ),
( (0x1F93E,  0x41, ), Q«« (🤾) HANDBALL»», 34061, True ),
( (0x1F93E,  0x62, ), Q«« (🤾) HANDBALL»», 34062, True ),
( (0x1F93F,  0x21, ), Q«« (🤿) DIVING MASK»», 34063, True ),
( (0x1F93F,  0x3F, ), Q«« (🤿) DIVING MASK»», 34064, True ),
( (0x1F93F,  0x61, ), Q«« (🤿) DIVING MASK»», 34065, True ),
( (0x1F93F,  0x41, ), Q«« (🤿) DIVING MASK»», 34066, True ),
( (0x1F93F,  0x62, ), Q«« (🤿) DIVING MASK»», 34067, True ),
( (0x1F940,  0x21, ), Q«« (🥀) WILTED FLOWER»», 34068, True ),
( (0x1F940,  0x3F, ), Q«« (🥀) WILTED FLOWER»», 34069, True ),
( (0x1F940,  0x61, ), Q«« (🥀) WILTED FLOWER»», 34070, True ),
( (0x1F940,  0x41, ), Q«« (🥀) WILTED FLOWER»», 34071, True ),
( (0x1F940,  0x62, ), Q«« (🥀) WILTED FLOWER»», 34072, True ),
( (0x1F941,  0x21, ), Q«« (🥁) DRUM WITH DRUMSTICKS»», 34073, True ),
( (0x1F941,  0x3F, ), Q«« (🥁) DRUM WITH DRUMSTICKS»», 34074, True ),
( (0x1F941,  0x61, ), Q«« (🥁) DRUM WITH DRUMSTICKS»», 34075, True ),
( (0x1F941,  0x41, ), Q«« (🥁) DRUM WITH DRUMSTICKS»», 34076, True ),
( (0x1F941,  0x62, ), Q«« (🥁) DRUM WITH DRUMSTICKS»», 34077, True ),
( (0x1F942,  0x21, ), Q«« (🥂) CLINKING GLASSES»», 34078, True ),
( (0x1F942,  0x3F, ), Q«« (🥂) CLINKING GLASSES»», 34079, True ),
( (0x1F942,  0x61, ), Q«« (🥂) CLINKING GLASSES»», 34080, True ),
( (0x1F942,  0x41, ), Q«« (🥂) CLINKING GLASSES»», 34081, True ),
( (0x1F942,  0x62, ), Q«« (🥂) CLINKING GLASSES»», 34082, True ),
( (0x1F943,  0x21, ), Q«« (🥃) TUMBLER GLASS»», 34083, True ),
( (0x1F943,  0x3F, ), Q«« (🥃) TUMBLER GLASS»», 34084, True ),
( (0x1F943,  0x61, ), Q«« (🥃) TUMBLER GLASS»», 34085, True ),
( (0x1F943,  0x41, ), Q«« (🥃) TUMBLER GLASS»», 34086, True ),
( (0x1F943,  0x62, ), Q«« (🥃) TUMBLER GLASS»», 34087, True ),
( (0x1F944,  0x21, ), Q«« (🥄) SPOON»», 34088, True ),
( (0x1F944,  0x3F, ), Q«« (🥄) SPOON»», 34089, True ),
( (0x1F944,  0x61, ), Q«« (🥄) SPOON»», 34090, True ),
( (0x1F944,  0x41, ), Q«« (🥄) SPOON»», 34091, True ),
( (0x1F944,  0x62, ), Q«« (🥄) SPOON»», 34092, True ),
( (0x1F945,  0x21, ), Q«« (🥅) GOAL NET»», 34093, True ),
( (0x1F945,  0x3F, ), Q«« (🥅) GOAL NET»», 34094, True ),
( (0x1F945,  0x61, ), Q«« (🥅) GOAL NET»», 34095, True ),
( (0x1F945,  0x41, ), Q«« (🥅) GOAL NET»», 34096, True ),
( (0x1F945,  0x62, ), Q«« (🥅) GOAL NET»», 34097, True ),
( (0x1F946,  0x21, ), Q«« (🥆) RIFLE»», 34098, True ),
( (0x1F946,  0x3F, ), Q«« (🥆) RIFLE»», 34099, True ),
( (0x1F946,  0x61, ), Q«« (🥆) RIFLE»», 34100, True ),
( (0x1F946,  0x41, ), Q«« (🥆) RIFLE»», 34101, True ),
( (0x1F946,  0x62, ), Q«« (🥆) RIFLE»», 34102, True ),
( (0x1F947,  0x21, ), Q«« (🥇) FIRST PLACE MEDAL»», 34103, True ),
( (0x1F947,  0x3F, ), Q«« (🥇) FIRST PLACE MEDAL»», 34104, True ),
( (0x1F947,  0x61, ), Q«« (🥇) FIRST PLACE MEDAL»», 34105, True ),
( (0x1F947,  0x41, ), Q«« (🥇) FIRST PLACE MEDAL»», 34106, True ),
( (0x1F947,  0x62, ), Q«« (🥇) FIRST PLACE MEDAL»», 34107, True ),
( (0x1F948,  0x21, ), Q«« (🥈) SECOND PLACE MEDAL»», 34108, True ),
( (0x1F948,  0x3F, ), Q«« (🥈) SECOND PLACE MEDAL»», 34109, True ),
( (0x1F948,  0x61, ), Q«« (🥈) SECOND PLACE MEDAL»», 34110, True ),
( (0x1F948,  0x41, ), Q«« (🥈) SECOND PLACE MEDAL»», 34111, True ),
( (0x1F948,  0x62, ), Q«« (🥈) SECOND PLACE MEDAL»», 34112, True ),
( (0x1F949,  0x21, ), Q«« (🥉) THIRD PLACE MEDAL»», 34113, True ),
( (0x1F949,  0x3F, ), Q«« (🥉) THIRD PLACE MEDAL»», 34114, True ),
( (0x1F949,  0x61, ), Q«« (🥉) THIRD PLACE MEDAL»», 34115, True ),
( (0x1F949,  0x41, ), Q«« (🥉) THIRD PLACE MEDAL»», 34116, True ),
( (0x1F949,  0x62, ), Q«« (🥉) THIRD PLACE MEDAL»», 34117, True ),
( (0x1F94A,  0x21, ), Q«« (🥊) BOXING GLOVE»», 34118, True ),
( (0x1F94A,  0x3F, ), Q«« (🥊) BOXING GLOVE»», 34119, True ),
( (0x1F94A,  0x61, ), Q«« (🥊) BOXING GLOVE»», 34120, True ),
( (0x1F94A,  0x41, ), Q«« (🥊) BOXING GLOVE»», 34121, True ),
( (0x1F94A,  0x62, ), Q«« (🥊) BOXING GLOVE»», 34122, True ),
( (0x1F94B,  0x21, ), Q«« (🥋) MARTIAL ARTS UNIFORM»», 34123, True ),
( (0x1F94B,  0x3F, ), Q«« (🥋) MARTIAL ARTS UNIFORM»», 34124, True ),
( (0x1F94B,  0x61, ), Q«« (🥋) MARTIAL ARTS UNIFORM»», 34125, True ),
( (0x1F94B,  0x41, ), Q«« (🥋) MARTIAL ARTS UNIFORM»», 34126, True ),
( (0x1F94B,  0x62, ), Q«« (🥋) MARTIAL ARTS UNIFORM»», 34127, True ),
( (0x1F94C,  0x21, ), Q«« (🥌) CURLING STONE»», 34128, True ),
( (0x1F94C,  0x3F, ), Q«« (🥌) CURLING STONE»», 34129, True ),
( (0x1F94C,  0x61, ), Q«« (🥌) CURLING STONE»», 34130, True ),
( (0x1F94C,  0x41, ), Q«« (🥌) CURLING STONE»», 34131, True ),
( (0x1F94C,  0x62, ), Q«« (🥌) CURLING STONE»», 34132, True ),
( (0x1F94D,  0x21, ), Q«« (🥍) LACROSSE STICK AND BALL»», 34133, True ),
( (0x1F94D,  0x3F, ), Q«« (🥍) LACROSSE STICK AND BALL»», 34134, True ),
( (0x1F94D,  0x61, ), Q«« (🥍) LACROSSE STICK AND BALL»», 34135, True ),
( (0x1F94D,  0x41, ), Q«« (🥍) LACROSSE STICK AND BALL»», 34136, True ),
( (0x1F94D,  0x62, ), Q«« (🥍) LACROSSE STICK AND BALL»», 34137, True ),
( (0x1F94E,  0x21, ), Q«« (🥎) SOFTBALL»», 34138, True ),
( (0x1F94E,  0x3F, ), Q«« (🥎) SOFTBALL»», 34139, True ),
( (0x1F94E,  0x61, ), Q«« (🥎) SOFTBALL»», 34140, True ),
( (0x1F94E,  0x41, ), Q«« (🥎) SOFTBALL»», 34141, True ),
( (0x1F94E,  0x62, ), Q«« (🥎) SOFTBALL»», 34142, True ),
( (0x1F94F,  0x21, ), Q«« (🥏) FLYING DISC»», 34143, True ),
( (0x1F94F,  0x3F, ), Q«« (🥏) FLYING DISC»», 34144, True ),
( (0x1F94F,  0x61, ), Q«« (🥏) FLYING DISC»», 34145, True ),
( (0x1F94F,  0x41, ), Q«« (🥏) FLYING DISC»», 34146, True ),
( (0x1F94F,  0x62, ), Q«« (🥏) FLYING DISC»», 34147, True ),
( (0x1F950,  0x21, ), Q«« (🥐) CROISSANT»», 34148, True ),
( (0x1F950,  0x3F, ), Q«« (🥐) CROISSANT»», 34149, True ),
( (0x1F950,  0x61, ), Q«« (🥐) CROISSANT»», 34150, True ),
( (0x1F950,  0x41, ), Q«« (🥐) CROISSANT»», 34151, True ),
( (0x1F950,  0x62, ), Q«« (🥐) CROISSANT»», 34152, True ),
( (0x1F951,  0x21, ), Q«« (🥑) AVOCADO»», 34153, True ),
( (0x1F951,  0x3F, ), Q«« (🥑) AVOCADO»», 34154, True ),
( (0x1F951,  0x61, ), Q«« (🥑) AVOCADO»», 34155, True ),
( (0x1F951,  0x41, ), Q«« (🥑) AVOCADO»», 34156, True ),
( (0x1F951,  0x62, ), Q«« (🥑) AVOCADO»», 34157, True ),
( (0x1F952,  0x21, ), Q«« (🥒) CUCUMBER»», 34158, True ),
( (0x1F952,  0x3F, ), Q«« (🥒) CUCUMBER»», 34159, True ),
( (0x1F952,  0x61, ), Q«« (🥒) CUCUMBER»», 34160, True ),
( (0x1F952,  0x41, ), Q«« (🥒) CUCUMBER»», 34161, True ),
( (0x1F952,  0x62, ), Q«« (🥒) CUCUMBER»», 34162, True ),
( (0x1F953,  0x21, ), Q«« (🥓) BACON»», 34163, True ),
( (0x1F953,  0x3F, ), Q«« (🥓) BACON»», 34164, True ),
( (0x1F953,  0x61, ), Q«« (🥓) BACON»», 34165, True ),
( (0x1F953,  0x41, ), Q«« (🥓) BACON»», 34166, True ),
( (0x1F953,  0x62, ), Q«« (🥓) BACON»», 34167, True ),
( (0x1F954,  0x21, ), Q«« (🥔) POTATO»», 34168, True ),
( (0x1F954,  0x3F, ), Q«« (🥔) POTATO»», 34169, True ),
( (0x1F954,  0x61, ), Q«« (🥔) POTATO»», 34170, True ),
( (0x1F954,  0x41, ), Q«« (🥔) POTATO»», 34171, True ),
( (0x1F954,  0x62, ), Q«« (🥔) POTATO»», 34172, True ),
( (0x1F955,  0x21, ), Q«« (🥕) CARROT»», 34173, True ),
( (0x1F955,  0x3F, ), Q«« (🥕) CARROT»», 34174, True ),
( (0x1F955,  0x61, ), Q«« (🥕) CARROT»», 34175, True ),
( (0x1F955,  0x41, ), Q«« (🥕) CARROT»», 34176, True ),
( (0x1F955,  0x62, ), Q«« (🥕) CARROT»», 34177, True ),
( (0x1F956,  0x21, ), Q«« (🥖) BAGUETTE BREAD»», 34178, True ),
( (0x1F956,  0x3F, ), Q«« (🥖) BAGUETTE BREAD»», 34179, True ),
( (0x1F956,  0x61, ), Q«« (🥖) BAGUETTE BREAD»», 34180, True ),
( (0x1F956,  0x41, ), Q«« (🥖) BAGUETTE BREAD»», 34181, True ),
( (0x1F956,  0x62, ), Q«« (🥖) BAGUETTE BREAD»», 34182, True ),
( (0x1F957,  0x21, ), Q«« (🥗) GREEN SALAD»», 34183, True ),
( (0x1F957,  0x3F, ), Q«« (🥗) GREEN SALAD»», 34184, True ),
( (0x1F957,  0x61, ), Q«« (🥗) GREEN SALAD»», 34185, True ),
( (0x1F957,  0x41, ), Q«« (🥗) GREEN SALAD»», 34186, True ),
( (0x1F957,  0x62, ), Q«« (🥗) GREEN SALAD»», 34187, True ),
( (0x1F958,  0x21, ), Q«« (🥘) SHALLOW PAN OF FOOD»», 34188, True ),
( (0x1F958,  0x3F, ), Q«« (🥘) SHALLOW PAN OF FOOD»», 34189, True ),
( (0x1F958,  0x61, ), Q«« (🥘) SHALLOW PAN OF FOOD»», 34190, True ),
( (0x1F958,  0x41, ), Q«« (🥘) SHALLOW PAN OF FOOD»», 34191, True ),
( (0x1F958,  0x62, ), Q«« (🥘) SHALLOW PAN OF FOOD»», 34192, True ),
( (0x1F959,  0x21, ), Q«« (🥙) STUFFED FLATBREAD»», 34193, True ),
( (0x1F959,  0x3F, ), Q«« (🥙) STUFFED FLATBREAD»», 34194, True ),
( (0x1F959,  0x61, ), Q«« (🥙) STUFFED FLATBREAD»», 34195, True ),
( (0x1F959,  0x41, ), Q«« (🥙) STUFFED FLATBREAD»», 34196, True ),
( (0x1F959,  0x62, ), Q«« (🥙) STUFFED FLATBREAD»», 34197, True ),
( (0x1F95A,  0x21, ), Q«« (🥚) EGG»», 34198, True ),
( (0x1F95A,  0x3F, ), Q«« (🥚) EGG»», 34199, True ),
( (0x1F95A,  0x61, ), Q«« (🥚) EGG»», 34200, True ),
( (0x1F95A,  0x41, ), Q«« (🥚) EGG»», 34201, True ),
( (0x1F95A,  0x62, ), Q«« (🥚) EGG»», 34202, True ),
( (0x1F95B,  0x21, ), Q«« (🥛) GLASS OF MILK»», 34203, True ),
( (0x1F95B,  0x3F, ), Q«« (🥛) GLASS OF MILK»», 34204, True ),
( (0x1F95B,  0x61, ), Q«« (🥛) GLASS OF MILK»», 34205, True ),
( (0x1F95B,  0x41, ), Q«« (🥛) GLASS OF MILK»», 34206, True ),
( (0x1F95B,  0x62, ), Q«« (🥛) GLASS OF MILK»», 34207, True ),
( (0x1F95C,  0x21, ), Q«« (🥜) PEANUTS»», 34208, True ),
( (0x1F95C,  0x3F, ), Q«« (🥜) PEANUTS»», 34209, True ),
( (0x1F95C,  0x61, ), Q«« (🥜) PEANUTS»», 34210, True ),
( (0x1F95C,  0x41, ), Q«« (🥜) PEANUTS»», 34211, True ),
( (0x1F95C,  0x62, ), Q«« (🥜) PEANUTS»», 34212, True ),
( (0x1F95D,  0x21, ), Q«« (🥝) KIWIFRUIT»», 34213, True ),
( (0x1F95D,  0x3F, ), Q«« (🥝) KIWIFRUIT»», 34214, True ),
( (0x1F95D,  0x61, ), Q«« (🥝) KIWIFRUIT»», 34215, True ),
( (0x1F95D,  0x41, ), Q«« (🥝) KIWIFRUIT»», 34216, True ),
( (0x1F95D,  0x62, ), Q«« (🥝) KIWIFRUIT»», 34217, True ),
( (0x1F95E,  0x21, ), Q«« (🥞) PANCAKES»», 34218, True ),
( (0x1F95E,  0x3F, ), Q«« (🥞) PANCAKES»», 34219, True ),
( (0x1F95E,  0x61, ), Q«« (🥞) PANCAKES»», 34220, True ),
( (0x1F95E,  0x41, ), Q«« (🥞) PANCAKES»», 34221, True ),
( (0x1F95E,  0x62, ), Q«« (🥞) PANCAKES»», 34222, True ),
( (0x1F95F,  0x21, ), Q«« (🥟) DUMPLING»», 34223, True ),
( (0x1F95F,  0x3F, ), Q«« (🥟) DUMPLING»», 34224, True ),
( (0x1F95F,  0x61, ), Q«« (🥟) DUMPLING»», 34225, True ),
( (0x1F95F,  0x41, ), Q«« (🥟) DUMPLING»», 34226, True ),
( (0x1F95F,  0x62, ), Q«« (🥟) DUMPLING»», 34227, True ),
( (0x1F960,  0x21, ), Q«« (🥠) FORTUNE COOKIE»», 34228, True ),
( (0x1F960,  0x3F, ), Q«« (🥠) FORTUNE COOKIE»», 34229, True ),
( (0x1F960,  0x61, ), Q«« (🥠) FORTUNE COOKIE»», 34230, True ),
( (0x1F960,  0x41, ), Q«« (🥠) FORTUNE COOKIE»», 34231, True ),
( (0x1F960,  0x62, ), Q«« (🥠) FORTUNE COOKIE»», 34232, True ),
( (0x1F961,  0x21, ), Q«« (🥡) TAKEOUT BOX»», 34233, True ),
( (0x1F961,  0x3F, ), Q«« (🥡) TAKEOUT BOX»», 34234, True ),
( (0x1F961,  0x61, ), Q«« (🥡) TAKEOUT BOX»», 34235, True ),
( (0x1F961,  0x41, ), Q«« (🥡) TAKEOUT BOX»», 34236, True ),
( (0x1F961,  0x62, ), Q«« (🥡) TAKEOUT BOX»», 34237, True ),
( (0x1F962,  0x21, ), Q«« (🥢) CHOPSTICKS»», 34238, True ),
( (0x1F962,  0x3F, ), Q«« (🥢) CHOPSTICKS»», 34239, True ),
( (0x1F962,  0x61, ), Q«« (🥢) CHOPSTICKS»», 34240, True ),
( (0x1F962,  0x41, ), Q«« (🥢) CHOPSTICKS»», 34241, True ),
( (0x1F962,  0x62, ), Q«« (🥢) CHOPSTICKS»», 34242, True ),
( (0x1F963,  0x21, ), Q«« (🥣) BOWL WITH SPOON»», 34243, True ),
( (0x1F963,  0x3F, ), Q«« (🥣) BOWL WITH SPOON»», 34244, True ),
( (0x1F963,  0x61, ), Q«« (🥣) BOWL WITH SPOON»», 34245, True ),
( (0x1F963,  0x41, ), Q«« (🥣) BOWL WITH SPOON»», 34246, True ),
( (0x1F963,  0x62, ), Q«« (🥣) BOWL WITH SPOON»», 34247, True ),
( (0x1F964,  0x21, ), Q«« (🥤) CUP WITH STRAW»», 34248, True ),
( (0x1F964,  0x3F, ), Q«« (🥤) CUP WITH STRAW»», 34249, True ),
( (0x1F964,  0x61, ), Q«« (🥤) CUP WITH STRAW»», 34250, True ),
( (0x1F964,  0x41, ), Q«« (🥤) CUP WITH STRAW»», 34251, True ),
( (0x1F964,  0x62, ), Q«« (🥤) CUP WITH STRAW»», 34252, True ),
( (0x1F965,  0x21, ), Q«« (🥥) COCONUT»», 34253, True ),
( (0x1F965,  0x3F, ), Q«« (🥥) COCONUT»», 34254, True ),
( (0x1F965,  0x61, ), Q«« (🥥) COCONUT»», 34255, True ),
( (0x1F965,  0x41, ), Q«« (🥥) COCONUT»», 34256, True ),
( (0x1F965,  0x62, ), Q«« (🥥) COCONUT»», 34257, True ),
( (0x1F966,  0x21, ), Q«« (🥦) BROCCOLI»», 34258, True ),
( (0x1F966,  0x3F, ), Q«« (🥦) BROCCOLI»», 34259, True ),
( (0x1F966,  0x61, ), Q«« (🥦) BROCCOLI»», 34260, True ),
( (0x1F966,  0x41, ), Q«« (🥦) BROCCOLI»», 34261, True ),
( (0x1F966,  0x62, ), Q«« (🥦) BROCCOLI»», 34262, True ),
( (0x1F967,  0x21, ), Q«« (🥧) PIE»», 34263, True ),
( (0x1F967,  0x3F, ), Q«« (🥧) PIE»», 34264, True ),
( (0x1F967,  0x61, ), Q«« (🥧) PIE»», 34265, True ),
( (0x1F967,  0x41, ), Q«« (🥧) PIE»», 34266, True ),
( (0x1F967,  0x62, ), Q«« (🥧) PIE»», 34267, True ),
( (0x1F968,  0x21, ), Q«« (🥨) PRETZEL»», 34268, True ),
( (0x1F968,  0x3F, ), Q«« (🥨) PRETZEL»», 34269, True ),
( (0x1F968,  0x61, ), Q«« (🥨) PRETZEL»», 34270, True ),
( (0x1F968,  0x41, ), Q«« (🥨) PRETZEL»», 34271, True ),
( (0x1F968,  0x62, ), Q«« (🥨) PRETZEL»», 34272, True ),
( (0x1F969,  0x21, ), Q«« (🥩) CUT OF MEAT»», 34273, True ),
( (0x1F969,  0x3F, ), Q«« (🥩) CUT OF MEAT»», 34274, True ),
( (0x1F969,  0x61, ), Q«« (🥩) CUT OF MEAT»», 34275, True ),
( (0x1F969,  0x41, ), Q«« (🥩) CUT OF MEAT»», 34276, True ),
( (0x1F969,  0x62, ), Q«« (🥩) CUT OF MEAT»», 34277, True ),
( (0x1F96A,  0x21, ), Q«« (🥪) SANDWICH»», 34278, True ),
( (0x1F96A,  0x3F, ), Q«« (🥪) SANDWICH»», 34279, True ),
( (0x1F96A,  0x61, ), Q«« (🥪) SANDWICH»», 34280, True ),
( (0x1F96A,  0x41, ), Q«« (🥪) SANDWICH»», 34281, True ),
( (0x1F96A,  0x62, ), Q«« (🥪) SANDWICH»», 34282, True ),
( (0x1F96B,  0x21, ), Q«« (🥫) CANNED FOOD»», 34283, True ),
( (0x1F96B,  0x3F, ), Q«« (🥫) CANNED FOOD»», 34284, True ),
( (0x1F96B,  0x61, ), Q«« (🥫) CANNED FOOD»», 34285, True ),
( (0x1F96B,  0x41, ), Q«« (🥫) CANNED FOOD»», 34286, True ),
( (0x1F96B,  0x62, ), Q«« (🥫) CANNED FOOD»», 34287, True ),
( (0x1F96C,  0x21, ), Q«« (🥬) LEAFY GREEN»», 34288, True ),
( (0x1F96C,  0x3F, ), Q«« (🥬) LEAFY GREEN»», 34289, True ),
( (0x1F96C,  0x61, ), Q«« (🥬) LEAFY GREEN»», 34290, True ),
( (0x1F96C,  0x41, ), Q«« (🥬) LEAFY GREEN»», 34291, True ),
( (0x1F96C,  0x62, ), Q«« (🥬) LEAFY GREEN»», 34292, True ),
( (0x1F96D,  0x21, ), Q«« (🥭) MANGO»», 34293, True ),
( (0x1F96D,  0x3F, ), Q«« (🥭) MANGO»», 34294, True ),
( (0x1F96D,  0x61, ), Q«« (🥭) MANGO»», 34295, True ),
( (0x1F96D,  0x41, ), Q«« (🥭) MANGO»», 34296, True ),
( (0x1F96D,  0x62, ), Q«« (🥭) MANGO»», 34297, True ),
( (0x1F96E,  0x21, ), Q«« (🥮) MOON CAKE»», 34298, True ),
( (0x1F96E,  0x3F, ), Q«« (🥮) MOON CAKE»», 34299, True ),
( (0x1F96E,  0x61, ), Q«« (🥮) MOON CAKE»», 34300, True ),
( (0x1F96E,  0x41, ), Q«« (🥮) MOON CAKE»», 34301, True ),
( (0x1F96E,  0x62, ), Q«« (🥮) MOON CAKE»», 34302, True ),
( (0x1F96F,  0x21, ), Q«« (🥯) BAGEL»», 34303, True ),
( (0x1F96F,  0x3F, ), Q«« (🥯) BAGEL»», 34304, True ),
( (0x1F96F,  0x61, ), Q«« (🥯) BAGEL»», 34305, True ),
( (0x1F96F,  0x41, ), Q«« (🥯) BAGEL»», 34306, True ),
( (0x1F96F,  0x62, ), Q«« (🥯) BAGEL»», 34307, True ),
( (0x1F970,  0x21, ), Q«« (🥰) SMILING FACE WITH SMILING EYES AND THREE HEARTS»», 34308, True ),
( (0x1F970,  0x3F, ), Q«« (🥰) SMILING FACE WITH SMILING EYES AND THREE HEARTS»», 34309, True ),
( (0x1F970,  0x61, ), Q«« (🥰) SMILING FACE WITH SMILING EYES AND THREE HEARTS»», 34310, True ),
( (0x1F970,  0x41, ), Q«« (🥰) SMILING FACE WITH SMILING EYES AND THREE HEARTS»», 34311, True ),
( (0x1F970,  0x62, ), Q«« (🥰) SMILING FACE WITH SMILING EYES AND THREE HEARTS»», 34312, True ),
( (0x1F971,  0x21, ), Q«« (🥱) YAWNING FACE»», 34313, True ),
( (0x1F971,  0x3F, ), Q«« (🥱) YAWNING FACE»», 34314, True ),
( (0x1F971,  0x61, ), Q«« (🥱) YAWNING FACE»», 34315, True ),
( (0x1F971,  0x41, ), Q«« (🥱) YAWNING FACE»», 34316, True ),
( (0x1F971,  0x62, ), Q«« (🥱) YAWNING FACE»», 34317, True ),
( (0x1F972,  0x21, ), Q«« (🥲) SMILING FACE WITH TEAR»», 34318, True ),
( (0x1F972,  0x3F, ), Q«« (🥲) SMILING FACE WITH TEAR»», 34319, True ),
( (0x1F972,  0x61, ), Q«« (🥲) SMILING FACE WITH TEAR»», 34320, True ),
( (0x1F972,  0x41, ), Q«« (🥲) SMILING FACE WITH TEAR»», 34321, True ),
( (0x1F972,  0x62, ), Q«« (🥲) SMILING FACE WITH TEAR»», 34322, True ),
( (0x1F973,  0x21, ), Q«« (🥳) FACE WITH PARTY HORN AND PARTY HAT»», 34323, True ),
( (0x1F973,  0x3F, ), Q«« (🥳) FACE WITH PARTY HORN AND PARTY HAT»», 34324, True ),
( (0x1F973,  0x61, ), Q«« (🥳) FACE WITH PARTY HORN AND PARTY HAT»», 34325, True ),
( (0x1F973,  0x41, ), Q«« (🥳) FACE WITH PARTY HORN AND PARTY HAT»», 34326, True ),
( (0x1F973,  0x62, ), Q«« (🥳) FACE WITH PARTY HORN AND PARTY HAT»», 34327, True ),
( (0x1F974,  0x21, ), Q«« (🥴) FACE WITH UNEVEN EYES AND WAVY MOUTH»», 34328, True ),
( (0x1F974,  0x3F, ), Q«« (🥴) FACE WITH UNEVEN EYES AND WAVY MOUTH»», 34329, True ),
( (0x1F974,  0x61, ), Q«« (🥴) FACE WITH UNEVEN EYES AND WAVY MOUTH»», 34330, True ),
( (0x1F974,  0x41, ), Q«« (🥴) FACE WITH UNEVEN EYES AND WAVY MOUTH»», 34331, True ),
( (0x1F974,  0x62, ), Q«« (🥴) FACE WITH UNEVEN EYES AND WAVY MOUTH»», 34332, True ),
( (0x1F975,  0x21, ), Q«« (🥵) OVERHEATED FACE»», 34333, True ),
( (0x1F975,  0x3F, ), Q«« (🥵) OVERHEATED FACE»», 34334, True ),
( (0x1F975,  0x61, ), Q«« (🥵) OVERHEATED FACE»», 34335, True ),
( (0x1F975,  0x41, ), Q«« (🥵) OVERHEATED FACE»», 34336, True ),
( (0x1F975,  0x62, ), Q«« (🥵) OVERHEATED FACE»», 34337, True ),
( (0x1F976,  0x21, ), Q«« (🥶) FREEZING FACE»», 34338, True ),
( (0x1F976,  0x3F, ), Q«« (🥶) FREEZING FACE»», 34339, True ),
( (0x1F976,  0x61, ), Q«« (🥶) FREEZING FACE»», 34340, True ),
( (0x1F976,  0x41, ), Q«« (🥶) FREEZING FACE»», 34341, True ),
( (0x1F976,  0x62, ), Q«« (🥶) FREEZING FACE»», 34342, True ),
( (0x1F977,  0x21, ), Q«« (🥷) NINJA»», 34343, True ),
( (0x1F977,  0x3F, ), Q«« (🥷) NINJA»», 34344, True ),
( (0x1F977,  0x61, ), Q«« (🥷) NINJA»», 34345, True ),
( (0x1F977,  0x41, ), Q«« (🥷) NINJA»», 34346, True ),
( (0x1F977,  0x62, ), Q«« (🥷) NINJA»», 34347, True ),
( (0x1F978,  0x21, ), Q«« (🥸) DISGUISED FACE»», 34348, True ),
( (0x1F978,  0x3F, ), Q«« (🥸) DISGUISED FACE»», 34349, True ),
( (0x1F978,  0x61, ), Q«« (🥸) DISGUISED FACE»», 34350, True ),
( (0x1F978,  0x41, ), Q«« (🥸) DISGUISED FACE»», 34351, True ),
( (0x1F978,  0x62, ), Q«« (🥸) DISGUISED FACE»», 34352, True ),
( (0x1F97A,  0x21, ), Q«« (🥺) FACE WITH PLEADING EYES»», 34353, True ),
( (0x1F97A,  0x3F, ), Q«« (🥺) FACE WITH PLEADING EYES»», 34354, True ),
( (0x1F97A,  0x61, ), Q«« (🥺) FACE WITH PLEADING EYES»», 34355, True ),
( (0x1F97A,  0x41, ), Q«« (🥺) FACE WITH PLEADING EYES»», 34356, True ),
( (0x1F97A,  0x62, ), Q«« (🥺) FACE WITH PLEADING EYES»», 34357, True ),
( (0x1F97B,  0x21, ), Q«« (🥻) SARI»», 34358, True ),
( (0x1F97B,  0x3F, ), Q«« (🥻) SARI»», 34359, True ),
( (0x1F97B,  0x61, ), Q«« (🥻) SARI»», 34360, True ),
( (0x1F97B,  0x41, ), Q«« (🥻) SARI»», 34361, True ),
( (0x1F97B,  0x62, ), Q«« (🥻) SARI»», 34362, True ),
( (0x1F97C,  0x21, ), Q«« (🥼) LAB COAT»», 34363, True ),
( (0x1F97C,  0x3F, ), Q«« (🥼) LAB COAT»», 34364, True ),
( (0x1F97C,  0x61, ), Q«« (🥼) LAB COAT»», 34365, True ),
( (0x1F97C,  0x41, ), Q«« (🥼) LAB COAT»», 34366, True ),
( (0x1F97C,  0x62, ), Q«« (🥼) LAB COAT»», 34367, True ),
( (0x1F97D,  0x21, ), Q«« (🥽) GOGGLES»», 34368, True ),
( (0x1F97D,  0x3F, ), Q«« (🥽) GOGGLES»», 34369, True ),
( (0x1F97D,  0x61, ), Q«« (🥽) GOGGLES»», 34370, True ),
( (0x1F97D,  0x41, ), Q«« (🥽) GOGGLES»», 34371, True ),
( (0x1F97D,  0x62, ), Q«« (🥽) GOGGLES»», 34372, True ),
( (0x1F97E,  0x21, ), Q«« (🥾) HIKING BOOT»», 34373, True ),
( (0x1F97E,  0x3F, ), Q«« (🥾) HIKING BOOT»», 34374, True ),
( (0x1F97E,  0x61, ), Q«« (🥾) HIKING BOOT»», 34375, True ),
( (0x1F97E,  0x41, ), Q«« (🥾) HIKING BOOT»», 34376, True ),
( (0x1F97E,  0x62, ), Q«« (🥾) HIKING BOOT»», 34377, True ),
( (0x1F97F,  0x21, ), Q«« (🥿) FLAT SHOE»», 34378, True ),
( (0x1F97F,  0x3F, ), Q«« (🥿) FLAT SHOE»», 34379, True ),
( (0x1F97F,  0x61, ), Q«« (🥿) FLAT SHOE»», 34380, True ),
( (0x1F97F,  0x41, ), Q«« (🥿) FLAT SHOE»», 34381, True ),
( (0x1F97F,  0x62, ), Q«« (🥿) FLAT SHOE»», 34382, True ),
( (0x1F980,  0x21, ), Q«« (🦀) CRAB»», 34383, True ),
( (0x1F980,  0x3F, ), Q«« (🦀) CRAB»», 34384, True ),
( (0x1F980,  0x61, ), Q«« (🦀) CRAB»», 34385, True ),
( (0x1F980,  0x41, ), Q«« (🦀) CRAB»», 34386, True ),
( (0x1F980,  0x62, ), Q«« (🦀) CRAB»», 34387, True ),
( (0x1F981,  0x21, ), Q«« (🦁) LION FACE»», 34388, True ),
( (0x1F981,  0x3F, ), Q«« (🦁) LION FACE»», 34389, True ),
( (0x1F981,  0x61, ), Q«« (🦁) LION FACE»», 34390, True ),
( (0x1F981,  0x41, ), Q«« (🦁) LION FACE»», 34391, True ),
( (0x1F981,  0x62, ), Q«« (🦁) LION FACE»», 34392, True ),
( (0x1F982,  0x21, ), Q«« (🦂) SCORPION»», 34393, True ),
( (0x1F982,  0x3F, ), Q«« (🦂) SCORPION»», 34394, True ),
( (0x1F982,  0x61, ), Q«« (🦂) SCORPION»», 34395, True ),
( (0x1F982,  0x41, ), Q«« (🦂) SCORPION»», 34396, True ),
( (0x1F982,  0x62, ), Q«« (🦂) SCORPION»», 34397, True ),
( (0x1F983,  0x21, ), Q«« (🦃) TURKEY»», 34398, True ),
( (0x1F983,  0x3F, ), Q«« (🦃) TURKEY»», 34399, True ),
( (0x1F983,  0x61, ), Q«« (🦃) TURKEY»», 34400, True ),
( (0x1F983,  0x41, ), Q«« (🦃) TURKEY»», 34401, True ),
( (0x1F983,  0x62, ), Q«« (🦃) TURKEY»», 34402, True ),
( (0x1F984,  0x21, ), Q«« (🦄) UNICORN FACE»», 34403, True ),
( (0x1F984,  0x3F, ), Q«« (🦄) UNICORN FACE»», 34404, True ),
( (0x1F984,  0x61, ), Q«« (🦄) UNICORN FACE»», 34405, True ),
( (0x1F984,  0x41, ), Q«« (🦄) UNICORN FACE»», 34406, True ),
( (0x1F984,  0x62, ), Q«« (🦄) UNICORN FACE»», 34407, True ),
( (0x1F985,  0x21, ), Q«« (🦅) EAGLE»», 34408, True ),
( (0x1F985,  0x3F, ), Q«« (🦅) EAGLE»», 34409, True ),
( (0x1F985,  0x61, ), Q«« (🦅) EAGLE»», 34410, True ),
( (0x1F985,  0x41, ), Q«« (🦅) EAGLE»», 34411, True ),
( (0x1F985,  0x62, ), Q«« (🦅) EAGLE»», 34412, True ),
( (0x1F986,  0x21, ), Q«« (🦆) DUCK»», 34413, True ),
( (0x1F986,  0x3F, ), Q«« (🦆) DUCK»», 34414, True ),
( (0x1F986,  0x61, ), Q«« (🦆) DUCK»», 34415, True ),
( (0x1F986,  0x41, ), Q«« (🦆) DUCK»», 34416, True ),
( (0x1F986,  0x62, ), Q«« (🦆) DUCK»», 34417, True ),
( (0x1F987,  0x21, ), Q«« (🦇) BAT»», 34418, True ),
( (0x1F987,  0x3F, ), Q«« (🦇) BAT»», 34419, True ),
( (0x1F987,  0x61, ), Q«« (🦇) BAT»», 34420, True ),
( (0x1F987,  0x41, ), Q«« (🦇) BAT»», 34421, True ),
( (0x1F987,  0x62, ), Q«« (🦇) BAT»», 34422, True ),
( (0x1F988,  0x21, ), Q«« (🦈) SHARK»», 34423, True ),
( (0x1F988,  0x3F, ), Q«« (🦈) SHARK»», 34424, True ),
( (0x1F988,  0x61, ), Q«« (🦈) SHARK»», 34425, True ),
( (0x1F988,  0x41, ), Q«« (🦈) SHARK»», 34426, True ),
( (0x1F988,  0x62, ), Q«« (🦈) SHARK»», 34427, True ),
( (0x1F989,  0x21, ), Q«« (🦉) OWL»», 34428, True ),
( (0x1F989,  0x3F, ), Q«« (🦉) OWL»», 34429, True ),
( (0x1F989,  0x61, ), Q«« (🦉) OWL»», 34430, True ),
( (0x1F989,  0x41, ), Q«« (🦉) OWL»», 34431, True ),
( (0x1F989,  0x62, ), Q«« (🦉) OWL»», 34432, True ),
( (0x1F98A,  0x21, ), Q«« (🦊) FOX FACE»», 34433, True ),
( (0x1F98A,  0x3F, ), Q«« (🦊) FOX FACE»», 34434, True ),
( (0x1F98A,  0x61, ), Q«« (🦊) FOX FACE»», 34435, True ),
( (0x1F98A,  0x41, ), Q«« (🦊) FOX FACE»», 34436, True ),
( (0x1F98A,  0x62, ), Q«« (🦊) FOX FACE»», 34437, True ),
( (0x1F98B,  0x21, ), Q«« (🦋) BUTTERFLY»», 34438, True ),
( (0x1F98B,  0x3F, ), Q«« (🦋) BUTTERFLY»», 34439, True ),
( (0x1F98B,  0x61, ), Q«« (🦋) BUTTERFLY»», 34440, True ),
( (0x1F98B,  0x41, ), Q«« (🦋) BUTTERFLY»», 34441, True ),
( (0x1F98B,  0x62, ), Q«« (🦋) BUTTERFLY»», 34442, True ),
( (0x1F98C,  0x21, ), Q«« (🦌) DEER»», 34443, True ),
( (0x1F98C,  0x3F, ), Q«« (🦌) DEER»», 34444, True ),
( (0x1F98C,  0x61, ), Q«« (🦌) DEER»», 34445, True ),
( (0x1F98C,  0x41, ), Q«« (🦌) DEER»», 34446, True ),
( (0x1F98C,  0x62, ), Q«« (🦌) DEER»», 34447, True ),
( (0x1F98D,  0x21, ), Q«« (🦍) GORILLA»», 34448, True ),
( (0x1F98D,  0x3F, ), Q«« (🦍) GORILLA»», 34449, True ),
( (0x1F98D,  0x61, ), Q«« (🦍) GORILLA»», 34450, True ),
( (0x1F98D,  0x41, ), Q«« (🦍) GORILLA»», 34451, True ),
( (0x1F98D,  0x62, ), Q«« (🦍) GORILLA»», 34452, True ),
( (0x1F98E,  0x21, ), Q«« (🦎) LIZARD»», 34453, True ),
( (0x1F98E,  0x3F, ), Q«« (🦎) LIZARD»», 34454, True ),
( (0x1F98E,  0x61, ), Q«« (🦎) LIZARD»», 34455, True ),
( (0x1F98E,  0x41, ), Q«« (🦎) LIZARD»», 34456, True ),
( (0x1F98E,  0x62, ), Q«« (🦎) LIZARD»», 34457, True ),
( (0x1F98F,  0x21, ), Q«« (🦏) RHINOCEROS»», 34458, True ),
( (0x1F98F,  0x3F, ), Q«« (🦏) RHINOCEROS»», 34459, True ),
( (0x1F98F,  0x61, ), Q«« (🦏) RHINOCEROS»», 34460, True ),
( (0x1F98F,  0x41, ), Q«« (🦏) RHINOCEROS»», 34461, True ),
( (0x1F98F,  0x62, ), Q«« (🦏) RHINOCEROS»», 34462, True ),
( (0x1F990,  0x21, ), Q«« (🦐) SHRIMP»», 34463, True ),
( (0x1F990,  0x3F, ), Q«« (🦐) SHRIMP»», 34464, True ),
( (0x1F990,  0x61, ), Q«« (🦐) SHRIMP»», 34465, True ),
( (0x1F990,  0x41, ), Q«« (🦐) SHRIMP»», 34466, True ),
( (0x1F990,  0x62, ), Q«« (🦐) SHRIMP»», 34467, True ),
( (0x1F991,  0x21, ), Q«« (🦑) SQUID»», 34468, True ),
( (0x1F991,  0x3F, ), Q«« (🦑) SQUID»», 34469, True ),
( (0x1F991,  0x61, ), Q«« (🦑) SQUID»», 34470, True ),
( (0x1F991,  0x41, ), Q«« (🦑) SQUID»», 34471, True ),
( (0x1F991,  0x62, ), Q«« (🦑) SQUID»», 34472, True ),
( (0x1F992,  0x21, ), Q«« (🦒) GIRAFFE FACE»», 34473, True ),
( (0x1F992,  0x3F, ), Q«« (🦒) GIRAFFE FACE»», 34474, True ),
( (0x1F992,  0x61, ), Q«« (🦒) GIRAFFE FACE»», 34475, True ),
( (0x1F992,  0x41, ), Q«« (🦒) GIRAFFE FACE»», 34476, True ),
( (0x1F992,  0x62, ), Q«« (🦒) GIRAFFE FACE»», 34477, True ),
( (0x1F993,  0x21, ), Q«« (🦓) ZEBRA FACE»», 34478, True ),
( (0x1F993,  0x3F, ), Q«« (🦓) ZEBRA FACE»», 34479, True ),
( (0x1F993,  0x61, ), Q«« (🦓) ZEBRA FACE»», 34480, True ),
( (0x1F993,  0x41, ), Q«« (🦓) ZEBRA FACE»», 34481, True ),
( (0x1F993,  0x62, ), Q«« (🦓) ZEBRA FACE»», 34482, True ),
( (0x1F994,  0x21, ), Q«« (🦔) HEDGEHOG»», 34483, True ),
( (0x1F994,  0x3F, ), Q«« (🦔) HEDGEHOG»», 34484, True ),
( (0x1F994,  0x61, ), Q«« (🦔) HEDGEHOG»», 34485, True ),
( (0x1F994,  0x41, ), Q«« (🦔) HEDGEHOG»», 34486, True ),
( (0x1F994,  0x62, ), Q«« (🦔) HEDGEHOG»», 34487, True ),
( (0x1F995,  0x21, ), Q«« (🦕) SAUROPOD»», 34488, True ),
( (0x1F995,  0x3F, ), Q«« (🦕) SAUROPOD»», 34489, True ),
( (0x1F995,  0x61, ), Q«« (🦕) SAUROPOD»», 34490, True ),
( (0x1F995,  0x41, ), Q«« (🦕) SAUROPOD»», 34491, True ),
( (0x1F995,  0x62, ), Q«« (🦕) SAUROPOD»», 34492, True ),
( (0x1F996,  0x21, ), Q«« (🦖) T-REX»», 34493, True ),
( (0x1F996,  0x3F, ), Q«« (🦖) T-REX»», 34494, True ),
( (0x1F996,  0x61, ), Q«« (🦖) T-REX»», 34495, True ),
( (0x1F996,  0x41, ), Q«« (🦖) T-REX»», 34496, True ),
( (0x1F996,  0x62, ), Q«« (🦖) T-REX»», 34497, True ),
( (0x1F997,  0x21, ), Q«« (🦗) CRICKET»», 34498, True ),
( (0x1F997,  0x3F, ), Q«« (🦗) CRICKET»», 34499, True ),
( (0x1F997,  0x61, ), Q«« (🦗) CRICKET»», 34500, True ),
( (0x1F997,  0x41, ), Q«« (🦗) CRICKET»», 34501, True ),
( (0x1F997,  0x62, ), Q«« (🦗) CRICKET»», 34502, True ),
( (0x1F998,  0x21, ), Q«« (🦘) KANGAROO»», 34503, True ),
( (0x1F998,  0x3F, ), Q«« (🦘) KANGAROO»», 34504, True ),
( (0x1F998,  0x61, ), Q«« (🦘) KANGAROO»», 34505, True ),
( (0x1F998,  0x41, ), Q«« (🦘) KANGAROO»», 34506, True ),
( (0x1F998,  0x62, ), Q«« (🦘) KANGAROO»», 34507, True ),
( (0x1F999,  0x21, ), Q«« (🦙) LLAMA»», 34508, True ),
( (0x1F999,  0x3F, ), Q«« (🦙) LLAMA»», 34509, True ),
( (0x1F999,  0x61, ), Q«« (🦙) LLAMA»», 34510, True ),
( (0x1F999,  0x41, ), Q«« (🦙) LLAMA»», 34511, True ),
( (0x1F999,  0x62, ), Q«« (🦙) LLAMA»», 34512, True ),
( (0x1F99A,  0x21, ), Q«« (🦚) PEACOCK»», 34513, True ),
( (0x1F99A,  0x3F, ), Q«« (🦚) PEACOCK»», 34514, True ),
( (0x1F99A,  0x61, ), Q«« (🦚) PEACOCK»», 34515, True ),
( (0x1F99A,  0x41, ), Q«« (🦚) PEACOCK»», 34516, True ),
( (0x1F99A,  0x62, ), Q«« (🦚) PEACOCK»», 34517, True ),
( (0x1F99B,  0x21, ), Q«« (🦛) HIPPOPOTAMUS»», 34518, True ),
( (0x1F99B,  0x3F, ), Q«« (🦛) HIPPOPOTAMUS»», 34519, True ),
( (0x1F99B,  0x61, ), Q«« (🦛) HIPPOPOTAMUS»», 34520, True ),
( (0x1F99B,  0x41, ), Q«« (🦛) HIPPOPOTAMUS»», 34521, True ),
( (0x1F99B,  0x62, ), Q«« (🦛) HIPPOPOTAMUS»», 34522, True ),
( (0x1F99C,  0x21, ), Q«« (🦜) PARROT»», 34523, True ),
( (0x1F99C,  0x3F, ), Q«« (🦜) PARROT»», 34524, True ),
( (0x1F99C,  0x61, ), Q«« (🦜) PARROT»», 34525, True ),
( (0x1F99C,  0x41, ), Q«« (🦜) PARROT»», 34526, True ),
( (0x1F99C,  0x62, ), Q«« (🦜) PARROT»», 34527, True ),
( (0x1F99D,  0x21, ), Q«« (🦝) RACCOON»», 34528, True ),
( (0x1F99D,  0x3F, ), Q«« (🦝) RACCOON»», 34529, True ),
( (0x1F99D,  0x61, ), Q«« (🦝) RACCOON»», 34530, True ),
( (0x1F99D,  0x41, ), Q«« (🦝) RACCOON»», 34531, True ),
( (0x1F99D,  0x62, ), Q«« (🦝) RACCOON»», 34532, True ),
( (0x1F99E,  0x21, ), Q«« (🦞) LOBSTER»», 34533, True ),
( (0x1F99E,  0x3F, ), Q«« (🦞) LOBSTER»», 34534, True ),
( (0x1F99E,  0x61, ), Q«« (🦞) LOBSTER»», 34535, True ),
( (0x1F99E,  0x41, ), Q«« (🦞) LOBSTER»», 34536, True ),
( (0x1F99E,  0x62, ), Q«« (🦞) LOBSTER»», 34537, True ),
( (0x1F99F,  0x21, ), Q«« (🦟) MOSQUITO»», 34538, True ),
( (0x1F99F,  0x3F, ), Q«« (🦟) MOSQUITO»», 34539, True ),
( (0x1F99F,  0x61, ), Q«« (🦟) MOSQUITO»», 34540, True ),
( (0x1F99F,  0x41, ), Q«« (🦟) MOSQUITO»», 34541, True ),
( (0x1F99F,  0x62, ), Q«« (🦟) MOSQUITO»», 34542, True ),
( (0x1F9A0,  0x21, ), Q«« (🦠) MICROBE»», 34543, True ),
( (0x1F9A0,  0x3F, ), Q«« (🦠) MICROBE»», 34544, True ),
( (0x1F9A0,  0x61, ), Q«« (🦠) MICROBE»», 34545, True ),
( (0x1F9A0,  0x41, ), Q«« (🦠) MICROBE»», 34546, True ),
( (0x1F9A0,  0x62, ), Q«« (🦠) MICROBE»», 34547, True ),
( (0x1F9A1,  0x21, ), Q«« (🦡) BADGER»», 34548, True ),
( (0x1F9A1,  0x3F, ), Q«« (🦡) BADGER»», 34549, True ),
( (0x1F9A1,  0x61, ), Q«« (🦡) BADGER»», 34550, True ),
( (0x1F9A1,  0x41, ), Q«« (🦡) BADGER»», 34551, True ),
( (0x1F9A1,  0x62, ), Q«« (🦡) BADGER»», 34552, True ),
( (0x1F9A2,  0x21, ), Q«« (🦢) SWAN»», 34553, True ),
( (0x1F9A2,  0x3F, ), Q«« (🦢) SWAN»», 34554, True ),
( (0x1F9A2,  0x61, ), Q«« (🦢) SWAN»», 34555, True ),
( (0x1F9A2,  0x41, ), Q«« (🦢) SWAN»», 34556, True ),
( (0x1F9A2,  0x62, ), Q«« (🦢) SWAN»», 34557, True ),
( (0x1F9A3,  0x21, ), Q«« (🦣) MAMMOTH»», 34558, True ),
( (0x1F9A3,  0x3F, ), Q«« (🦣) MAMMOTH»», 34559, True ),
( (0x1F9A3,  0x61, ), Q«« (🦣) MAMMOTH»», 34560, True ),
( (0x1F9A3,  0x41, ), Q«« (🦣) MAMMOTH»», 34561, True ),
( (0x1F9A3,  0x62, ), Q«« (🦣) MAMMOTH»», 34562, True ),
( (0x1F9A4,  0x21, ), Q«« (🦤) DODO»», 34563, True ),
( (0x1F9A4,  0x3F, ), Q«« (🦤) DODO»», 34564, True ),
( (0x1F9A4,  0x61, ), Q«« (🦤) DODO»», 34565, True ),
( (0x1F9A4,  0x41, ), Q«« (🦤) DODO»», 34566, True ),
( (0x1F9A4,  0x62, ), Q«« (🦤) DODO»», 34567, True ),
( (0x1F9A5,  0x21, ), Q«« (🦥) SLOTH»», 34568, True ),
( (0x1F9A5,  0x3F, ), Q«« (🦥) SLOTH»», 34569, True ),
( (0x1F9A5,  0x61, ), Q«« (🦥) SLOTH»», 34570, True ),
( (0x1F9A5,  0x41, ), Q«« (🦥) SLOTH»», 34571, True ),
( (0x1F9A5,  0x62, ), Q«« (🦥) SLOTH»», 34572, True ),
( (0x1F9A6,  0x21, ), Q«« (🦦) OTTER»», 34573, True ),
( (0x1F9A6,  0x3F, ), Q«« (🦦) OTTER»», 34574, True ),
( (0x1F9A6,  0x61, ), Q«« (🦦) OTTER»», 34575, True ),
( (0x1F9A6,  0x41, ), Q«« (🦦) OTTER»», 34576, True ),
( (0x1F9A6,  0x62, ), Q«« (🦦) OTTER»», 34577, True ),
( (0x1F9A7,  0x21, ), Q«« (🦧) ORANGUTAN»», 34578, True ),
( (0x1F9A7,  0x3F, ), Q«« (🦧) ORANGUTAN»», 34579, True ),
( (0x1F9A7,  0x61, ), Q«« (🦧) ORANGUTAN»», 34580, True ),
( (0x1F9A7,  0x41, ), Q«« (🦧) ORANGUTAN»», 34581, True ),
( (0x1F9A7,  0x62, ), Q«« (🦧) ORANGUTAN»», 34582, True ),
( (0x1F9A8,  0x21, ), Q«« (🦨) SKUNK»», 34583, True ),
( (0x1F9A8,  0x3F, ), Q«« (🦨) SKUNK»», 34584, True ),
( (0x1F9A8,  0x61, ), Q«« (🦨) SKUNK»», 34585, True ),
( (0x1F9A8,  0x41, ), Q«« (🦨) SKUNK»», 34586, True ),
( (0x1F9A8,  0x62, ), Q«« (🦨) SKUNK»», 34587, True ),
( (0x1F9A9,  0x21, ), Q«« (🦩) FLAMINGO»», 34588, True ),
( (0x1F9A9,  0x3F, ), Q«« (🦩) FLAMINGO»», 34589, True ),
( (0x1F9A9,  0x61, ), Q«« (🦩) FLAMINGO»», 34590, True ),
( (0x1F9A9,  0x41, ), Q«« (🦩) FLAMINGO»», 34591, True ),
( (0x1F9A9,  0x62, ), Q«« (🦩) FLAMINGO»», 34592, True ),
( (0x1F9AA,  0x21, ), Q«« (🦪) OYSTER»», 34593, True ),
( (0x1F9AA,  0x3F, ), Q«« (🦪) OYSTER»», 34594, True ),
( (0x1F9AA,  0x61, ), Q«« (🦪) OYSTER»», 34595, True ),
( (0x1F9AA,  0x41, ), Q«« (🦪) OYSTER»», 34596, True ),
( (0x1F9AA,  0x62, ), Q«« (🦪) OYSTER»», 34597, True ),
( (0x1F9AB,  0x21, ), Q«« (🦫) BEAVER»», 34598, True ),
( (0x1F9AB,  0x3F, ), Q«« (🦫) BEAVER»», 34599, True ),
( (0x1F9AB,  0x61, ), Q«« (🦫) BEAVER»», 34600, True ),
( (0x1F9AB,  0x41, ), Q«« (🦫) BEAVER»», 34601, True ),
( (0x1F9AB,  0x62, ), Q«« (🦫) BEAVER»», 34602, True ),
( (0x1F9AC,  0x21, ), Q«« (🦬) BISON»», 34603, True ),
( (0x1F9AC,  0x3F, ), Q«« (🦬) BISON»», 34604, True ),
( (0x1F9AC,  0x61, ), Q«« (🦬) BISON»», 34605, True ),
( (0x1F9AC,  0x41, ), Q«« (🦬) BISON»», 34606, True ),
( (0x1F9AC,  0x62, ), Q«« (🦬) BISON»», 34607, True ),
( (0x1F9AD,  0x21, ), Q«« (🦭) SEAL»», 34608, True ),
( (0x1F9AD,  0x3F, ), Q«« (🦭) SEAL»», 34609, True ),
( (0x1F9AD,  0x61, ), Q«« (🦭) SEAL»», 34610, True ),
( (0x1F9AD,  0x41, ), Q«« (🦭) SEAL»», 34611, True ),
( (0x1F9AD,  0x62, ), Q«« (🦭) SEAL»», 34612, True ),
( (0x1F9AE,  0x21, ), Q«« (🦮) GUIDE DOG»», 34613, True ),
( (0x1F9AE,  0x3F, ), Q«« (🦮) GUIDE DOG»», 34614, True ),
( (0x1F9AE,  0x61, ), Q«« (🦮) GUIDE DOG»», 34615, True ),
( (0x1F9AE,  0x41, ), Q«« (🦮) GUIDE DOG»», 34616, True ),
( (0x1F9AE,  0x62, ), Q«« (🦮) GUIDE DOG»», 34617, True ),
( (0x1F9AF,  0x21, ), Q«« (🦯) PROBING CANE»», 34618, True ),
( (0x1F9AF,  0x3F, ), Q«« (🦯) PROBING CANE»», 34619, True ),
( (0x1F9AF,  0x61, ), Q«« (🦯) PROBING CANE»», 34620, True ),
( (0x1F9AF,  0x41, ), Q«« (🦯) PROBING CANE»», 34621, True ),
( (0x1F9AF,  0x62, ), Q«« (🦯) PROBING CANE»», 34622, True ),
( (0x1F9B0,  0x21, ), Q«« (🦰) EMOJI COMPONENT RED HAIR»», 34623, True ),
( (0x1F9B0,  0x3F, ), Q«« (🦰) EMOJI COMPONENT RED HAIR»», 34624, True ),
( (0x1F9B0,  0x61, ), Q«« (🦰) EMOJI COMPONENT RED HAIR»», 34625, True ),
( (0x1F9B0,  0x41, ), Q«« (🦰) EMOJI COMPONENT RED HAIR»», 34626, True ),
( (0x1F9B0,  0x62, ), Q«« (🦰) EMOJI COMPONENT RED HAIR»», 34627, True ),
( (0x1F9B1,  0x21, ), Q«« (🦱) EMOJI COMPONENT CURLY HAIR»», 34628, True ),
( (0x1F9B1,  0x3F, ), Q«« (🦱) EMOJI COMPONENT CURLY HAIR»», 34629, True ),
( (0x1F9B1,  0x61, ), Q«« (🦱) EMOJI COMPONENT CURLY HAIR»», 34630, True ),
( (0x1F9B1,  0x41, ), Q«« (🦱) EMOJI COMPONENT CURLY HAIR»», 34631, True ),
( (0x1F9B1,  0x62, ), Q«« (🦱) EMOJI COMPONENT CURLY HAIR»», 34632, True ),
( (0x1F9B2,  0x21, ), Q«« (🦲) EMOJI COMPONENT BALD»», 34633, True ),
( (0x1F9B2,  0x3F, ), Q«« (🦲) EMOJI COMPONENT BALD»», 34634, True ),
( (0x1F9B2,  0x61, ), Q«« (🦲) EMOJI COMPONENT BALD»», 34635, True ),
( (0x1F9B2,  0x41, ), Q«« (🦲) EMOJI COMPONENT BALD»», 34636, True ),
( (0x1F9B2,  0x62, ), Q«« (🦲) EMOJI COMPONENT BALD»», 34637, True ),
( (0x1F9B3,  0x21, ), Q«« (🦳) EMOJI COMPONENT WHITE HAIR»», 34638, True ),
( (0x1F9B3,  0x3F, ), Q«« (🦳) EMOJI COMPONENT WHITE HAIR»», 34639, True ),
( (0x1F9B3,  0x61, ), Q«« (🦳) EMOJI COMPONENT WHITE HAIR»», 34640, True ),
( (0x1F9B3,  0x41, ), Q«« (🦳) EMOJI COMPONENT WHITE HAIR»», 34641, True ),
( (0x1F9B3,  0x62, ), Q«« (🦳) EMOJI COMPONENT WHITE HAIR»», 34642, True ),
( (0x1F9B4,  0x21, ), Q«« (🦴) BONE»», 34643, True ),
( (0x1F9B4,  0x3F, ), Q«« (🦴) BONE»», 34644, True ),
( (0x1F9B4,  0x61, ), Q«« (🦴) BONE»», 34645, True ),
( (0x1F9B4,  0x41, ), Q«« (🦴) BONE»», 34646, True ),
( (0x1F9B4,  0x62, ), Q«« (🦴) BONE»», 34647, True ),
( (0x1F9B5,  0x21, ), Q«« (🦵) LEG»», 34648, True ),
( (0x1F9B5,  0x3F, ), Q«« (🦵) LEG»», 34649, True ),
( (0x1F9B5,  0x61, ), Q«« (🦵) LEG»», 34650, True ),
( (0x1F9B5,  0x41, ), Q«« (🦵) LEG»», 34651, True ),
( (0x1F9B5,  0x62, ), Q«« (🦵) LEG»», 34652, True ),
( (0x1F9B6,  0x21, ), Q«« (🦶) FOOT»», 34653, True ),
( (0x1F9B6,  0x3F, ), Q«« (🦶) FOOT»», 34654, True ),
( (0x1F9B6,  0x61, ), Q«« (🦶) FOOT»», 34655, True ),
( (0x1F9B6,  0x41, ), Q«« (🦶) FOOT»», 34656, True ),
( (0x1F9B6,  0x62, ), Q«« (🦶) FOOT»», 34657, True ),
( (0x1F9B7,  0x21, ), Q«« (🦷) TOOTH»», 34658, True ),
( (0x1F9B7,  0x3F, ), Q«« (🦷) TOOTH»», 34659, True ),
( (0x1F9B7,  0x61, ), Q«« (🦷) TOOTH»», 34660, True ),
( (0x1F9B7,  0x41, ), Q«« (🦷) TOOTH»», 34661, True ),
( (0x1F9B7,  0x62, ), Q«« (🦷) TOOTH»», 34662, True ),
( (0x1F9B8,  0x21, ), Q«« (🦸) SUPERHERO»», 34663, True ),
( (0x1F9B8,  0x3F, ), Q«« (🦸) SUPERHERO»», 34664, True ),
( (0x1F9B8,  0x61, ), Q«« (🦸) SUPERHERO»», 34665, True ),
( (0x1F9B8,  0x41, ), Q«« (🦸) SUPERHERO»», 34666, True ),
( (0x1F9B8,  0x62, ), Q«« (🦸) SUPERHERO»», 34667, True ),
( (0x1F9B9,  0x21, ), Q«« (🦹) SUPERVILLAIN»», 34668, True ),
( (0x1F9B9,  0x3F, ), Q«« (🦹) SUPERVILLAIN»», 34669, True ),
( (0x1F9B9,  0x61, ), Q«« (🦹) SUPERVILLAIN»», 34670, True ),
( (0x1F9B9,  0x41, ), Q«« (🦹) SUPERVILLAIN»», 34671, True ),
( (0x1F9B9,  0x62, ), Q«« (🦹) SUPERVILLAIN»», 34672, True ),
( (0x1F9BA,  0x21, ), Q«« (🦺) SAFETY VEST»», 34673, True ),
( (0x1F9BA,  0x3F, ), Q«« (🦺) SAFETY VEST»», 34674, True ),
( (0x1F9BA,  0x61, ), Q«« (🦺) SAFETY VEST»», 34675, True ),
( (0x1F9BA,  0x41, ), Q«« (🦺) SAFETY VEST»», 34676, True ),
( (0x1F9BA,  0x62, ), Q«« (🦺) SAFETY VEST»», 34677, True ),
( (0x1F9BB,  0x21, ), Q«« (🦻) EAR WITH HEARING AID»», 34678, True ),
( (0x1F9BB,  0x3F, ), Q«« (🦻) EAR WITH HEARING AID»», 34679, True ),
( (0x1F9BB,  0x61, ), Q«« (🦻) EAR WITH HEARING AID»», 34680, True ),
( (0x1F9BB,  0x41, ), Q«« (🦻) EAR WITH HEARING AID»», 34681, True ),
( (0x1F9BB,  0x62, ), Q«« (🦻) EAR WITH HEARING AID»», 34682, True ),
( (0x1F9BC,  0x21, ), Q«« (🦼) MOTORIZED WHEELCHAIR»», 34683, True ),
( (0x1F9BC,  0x3F, ), Q«« (🦼) MOTORIZED WHEELCHAIR»», 34684, True ),
( (0x1F9BC,  0x61, ), Q«« (🦼) MOTORIZED WHEELCHAIR»», 34685, True ),
( (0x1F9BC,  0x41, ), Q«« (🦼) MOTORIZED WHEELCHAIR»», 34686, True ),
( (0x1F9BC,  0x62, ), Q«« (🦼) MOTORIZED WHEELCHAIR»», 34687, True ),
( (0x1F9BD,  0x21, ), Q«« (🦽) MANUAL WHEELCHAIR»», 34688, True ),
( (0x1F9BD,  0x3F, ), Q«« (🦽) MANUAL WHEELCHAIR»», 34689, True ),
( (0x1F9BD,  0x61, ), Q«« (🦽) MANUAL WHEELCHAIR»», 34690, True ),
( (0x1F9BD,  0x41, ), Q«« (🦽) MANUAL WHEELCHAIR»», 34691, True ),
( (0x1F9BD,  0x62, ), Q«« (🦽) MANUAL WHEELCHAIR»», 34692, True ),
( (0x1F9BE,  0x21, ), Q«« (🦾) MECHANICAL ARM»», 34693, True ),
( (0x1F9BE,  0x3F, ), Q«« (🦾) MECHANICAL ARM»», 34694, True ),
( (0x1F9BE,  0x61, ), Q«« (🦾) MECHANICAL ARM»», 34695, True ),
( (0x1F9BE,  0x41, ), Q«« (🦾) MECHANICAL ARM»», 34696, True ),
( (0x1F9BE,  0x62, ), Q«« (🦾) MECHANICAL ARM»», 34697, True ),
( (0x1F9BF,  0x21, ), Q«« (🦿) MECHANICAL LEG»», 34698, True ),
( (0x1F9BF,  0x3F, ), Q«« (🦿) MECHANICAL LEG»», 34699, True ),
( (0x1F9BF,  0x61, ), Q«« (🦿) MECHANICAL LEG»», 34700, True ),
( (0x1F9BF,  0x41, ), Q«« (🦿) MECHANICAL LEG»», 34701, True ),
( (0x1F9BF,  0x62, ), Q«« (🦿) MECHANICAL LEG»», 34702, True ),
( (0x1F9C0,  0x21, ), Q«« (🧀) CHEESE WEDGE»», 34703, True ),
( (0x1F9C0,  0x3F, ), Q«« (🧀) CHEESE WEDGE»», 34704, True ),
( (0x1F9C0,  0x61, ), Q«« (🧀) CHEESE WEDGE»», 34705, True ),
( (0x1F9C0,  0x41, ), Q«« (🧀) CHEESE WEDGE»», 34706, True ),
( (0x1F9C0,  0x62, ), Q«« (🧀) CHEESE WEDGE»», 34707, True ),
( (0x1F9C1,  0x21, ), Q«« (🧁) CUPCAKE»», 34708, True ),
( (0x1F9C1,  0x3F, ), Q«« (🧁) CUPCAKE»», 34709, True ),
( (0x1F9C1,  0x61, ), Q«« (🧁) CUPCAKE»», 34710, True ),
( (0x1F9C1,  0x41, ), Q«« (🧁) CUPCAKE»», 34711, True ),
( (0x1F9C1,  0x62, ), Q«« (🧁) CUPCAKE»», 34712, True ),
( (0x1F9C2,  0x21, ), Q«« (🧂) SALT SHAKER»», 34713, True ),
( (0x1F9C2,  0x3F, ), Q«« (🧂) SALT SHAKER»», 34714, True ),
( (0x1F9C2,  0x61, ), Q«« (🧂) SALT SHAKER»», 34715, True ),
( (0x1F9C2,  0x41, ), Q«« (🧂) SALT SHAKER»», 34716, True ),
( (0x1F9C2,  0x62, ), Q«« (🧂) SALT SHAKER»», 34717, True ),
( (0x1F9C3,  0x21, ), Q«« (🧃) BEVERAGE BOX»», 34718, True ),
( (0x1F9C3,  0x3F, ), Q«« (🧃) BEVERAGE BOX»», 34719, True ),
( (0x1F9C3,  0x61, ), Q«« (🧃) BEVERAGE BOX»», 34720, True ),
( (0x1F9C3,  0x41, ), Q«« (🧃) BEVERAGE BOX»», 34721, True ),
( (0x1F9C3,  0x62, ), Q«« (🧃) BEVERAGE BOX»», 34722, True ),
( (0x1F9C4,  0x21, ), Q«« (🧄) GARLIC»», 34723, True ),
( (0x1F9C4,  0x3F, ), Q«« (🧄) GARLIC»», 34724, True ),
( (0x1F9C4,  0x61, ), Q«« (🧄) GARLIC»», 34725, True ),
( (0x1F9C4,  0x41, ), Q«« (🧄) GARLIC»», 34726, True ),
( (0x1F9C4,  0x62, ), Q«« (🧄) GARLIC»», 34727, True ),
( (0x1F9C5,  0x21, ), Q«« (🧅) ONION»», 34728, True ),
( (0x1F9C5,  0x3F, ), Q«« (🧅) ONION»», 34729, True ),
( (0x1F9C5,  0x61, ), Q«« (🧅) ONION»», 34730, True ),
( (0x1F9C5,  0x41, ), Q«« (🧅) ONION»», 34731, True ),
( (0x1F9C5,  0x62, ), Q«« (🧅) ONION»», 34732, True ),
( (0x1F9C6,  0x21, ), Q«« (🧆) FALAFEL»», 34733, True ),
( (0x1F9C6,  0x3F, ), Q«« (🧆) FALAFEL»», 34734, True ),
( (0x1F9C6,  0x61, ), Q«« (🧆) FALAFEL»», 34735, True ),
( (0x1F9C6,  0x41, ), Q«« (🧆) FALAFEL»», 34736, True ),
( (0x1F9C6,  0x62, ), Q«« (🧆) FALAFEL»», 34737, True ),
( (0x1F9C7,  0x21, ), Q«« (🧇) WAFFLE»», 34738, True ),
( (0x1F9C7,  0x3F, ), Q«« (🧇) WAFFLE»», 34739, True ),
( (0x1F9C7,  0x61, ), Q«« (🧇) WAFFLE»», 34740, True ),
( (0x1F9C7,  0x41, ), Q«« (🧇) WAFFLE»», 34741, True ),
( (0x1F9C7,  0x62, ), Q«« (🧇) WAFFLE»», 34742, True ),
( (0x1F9C8,  0x21, ), Q«« (🧈) BUTTER»», 34743, True ),
( (0x1F9C8,  0x3F, ), Q«« (🧈) BUTTER»», 34744, True ),
( (0x1F9C8,  0x61, ), Q«« (🧈) BUTTER»», 34745, True ),
( (0x1F9C8,  0x41, ), Q«« (🧈) BUTTER»», 34746, True ),
( (0x1F9C8,  0x62, ), Q«« (🧈) BUTTER»», 34747, True ),
( (0x1F9C9,  0x21, ), Q«« (🧉) MATE DRINK»», 34748, True ),
( (0x1F9C9,  0x3F, ), Q«« (🧉) MATE DRINK»», 34749, True ),
( (0x1F9C9,  0x61, ), Q«« (🧉) MATE DRINK»», 34750, True ),
( (0x1F9C9,  0x41, ), Q«« (🧉) MATE DRINK»», 34751, True ),
( (0x1F9C9,  0x62, ), Q«« (🧉) MATE DRINK»», 34752, True ),
( (0x1F9CA,  0x21, ), Q«« (🧊) ICE CUBE»», 34753, True ),
( (0x1F9CA,  0x3F, ), Q«« (🧊) ICE CUBE»», 34754, True ),
( (0x1F9CA,  0x61, ), Q«« (🧊) ICE CUBE»», 34755, True ),
( (0x1F9CA,  0x41, ), Q«« (🧊) ICE CUBE»», 34756, True ),
( (0x1F9CA,  0x62, ), Q«« (🧊) ICE CUBE»», 34757, True ),
( (0x1F9CB,  0x21, ), Q«« (🧋) BUBBLE TEA»», 34758, True ),
( (0x1F9CB,  0x3F, ), Q«« (🧋) BUBBLE TEA»», 34759, True ),
( (0x1F9CB,  0x61, ), Q«« (🧋) BUBBLE TEA»», 34760, True ),
( (0x1F9CB,  0x41, ), Q«« (🧋) BUBBLE TEA»», 34761, True ),
( (0x1F9CB,  0x62, ), Q«« (🧋) BUBBLE TEA»», 34762, True ),
( (0x1F9CD,  0x21, ), Q«« (🧍) STANDING PERSON»», 34763, True ),
( (0x1F9CD,  0x3F, ), Q«« (🧍) STANDING PERSON»», 34764, True ),
( (0x1F9CD,  0x61, ), Q«« (🧍) STANDING PERSON»», 34765, True ),
( (0x1F9CD,  0x41, ), Q«« (🧍) STANDING PERSON»», 34766, True ),
( (0x1F9CD,  0x62, ), Q«« (🧍) STANDING PERSON»», 34767, True ),
( (0x1F9CE,  0x21, ), Q«« (🧎) KNEELING PERSON»», 34768, True ),
( (0x1F9CE,  0x3F, ), Q«« (🧎) KNEELING PERSON»», 34769, True ),
( (0x1F9CE,  0x61, ), Q«« (🧎) KNEELING PERSON»», 34770, True ),
( (0x1F9CE,  0x41, ), Q«« (🧎) KNEELING PERSON»», 34771, True ),
( (0x1F9CE,  0x62, ), Q«« (🧎) KNEELING PERSON»», 34772, True ),
( (0x1F9CF,  0x21, ), Q«« (🧏) DEAF PERSON»», 34773, True ),
( (0x1F9CF,  0x3F, ), Q«« (🧏) DEAF PERSON»», 34774, True ),
( (0x1F9CF,  0x61, ), Q«« (🧏) DEAF PERSON»», 34775, True ),
( (0x1F9CF,  0x41, ), Q«« (🧏) DEAF PERSON»», 34776, True ),
( (0x1F9CF,  0x62, ), Q«« (🧏) DEAF PERSON»», 34777, True ),
( (0x1F9D0,  0x21, ), Q«« (🧐) FACE WITH MONOCLE»», 34778, True ),
( (0x1F9D0,  0x3F, ), Q«« (🧐) FACE WITH MONOCLE»», 34779, True ),
( (0x1F9D0,  0x61, ), Q«« (🧐) FACE WITH MONOCLE»», 34780, True ),
( (0x1F9D0,  0x41, ), Q«« (🧐) FACE WITH MONOCLE»», 34781, True ),
( (0x1F9D0,  0x62, ), Q«« (🧐) FACE WITH MONOCLE»», 34782, True ),
( (0x1F9D1,  0x21, ), Q«« (🧑) ADULT»», 34783, True ),
( (0x1F9D1,  0x3F, ), Q«« (🧑) ADULT»», 34784, True ),
( (0x1F9D1,  0x61, ), Q«« (🧑) ADULT»», 34785, True ),
( (0x1F9D1,  0x41, ), Q«« (🧑) ADULT»», 34786, True ),
( (0x1F9D1,  0x62, ), Q«« (🧑) ADULT»», 34787, True ),
( (0x1F9D2,  0x21, ), Q«« (🧒) CHILD»», 34788, True ),
( (0x1F9D2,  0x3F, ), Q«« (🧒) CHILD»», 34789, True ),
( (0x1F9D2,  0x61, ), Q«« (🧒) CHILD»», 34790, True ),
( (0x1F9D2,  0x41, ), Q«« (🧒) CHILD»», 34791, True ),
( (0x1F9D2,  0x62, ), Q«« (🧒) CHILD»», 34792, True ),
( (0x1F9D3,  0x21, ), Q«« (🧓) OLDER ADULT»», 34793, True ),
( (0x1F9D3,  0x3F, ), Q«« (🧓) OLDER ADULT»», 34794, True ),
( (0x1F9D3,  0x61, ), Q«« (🧓) OLDER ADULT»», 34795, True ),
( (0x1F9D3,  0x41, ), Q«« (🧓) OLDER ADULT»», 34796, True ),
( (0x1F9D3,  0x62, ), Q«« (🧓) OLDER ADULT»», 34797, True ),
( (0x1F9D4,  0x21, ), Q«« (🧔) BEARDED PERSON»», 34798, True ),
( (0x1F9D4,  0x3F, ), Q«« (🧔) BEARDED PERSON»», 34799, True ),
( (0x1F9D4,  0x61, ), Q«« (🧔) BEARDED PERSON»», 34800, True ),
( (0x1F9D4,  0x41, ), Q«« (🧔) BEARDED PERSON»», 34801, True ),
( (0x1F9D4,  0x62, ), Q«« (🧔) BEARDED PERSON»», 34802, True ),
( (0x1F9D5,  0x21, ), Q«« (🧕) PERSON WITH HEADSCARF»», 34803, True ),
( (0x1F9D5,  0x3F, ), Q«« (🧕) PERSON WITH HEADSCARF»», 34804, True ),
( (0x1F9D5,  0x61, ), Q«« (🧕) PERSON WITH HEADSCARF»», 34805, True ),
( (0x1F9D5,  0x41, ), Q«« (🧕) PERSON WITH HEADSCARF»», 34806, True ),
( (0x1F9D5,  0x62, ), Q«« (🧕) PERSON WITH HEADSCARF»», 34807, True ),;
use Test;
plan 2001;
use Test;
my @failed;
for ^(@a - 1) {
    todo 1 if !@a[$_][3];
    is-deeply Uni.new(@a[$_][0]).Str unicmp Uni.new(@a[$_+1][0]).Str, Less, "{@a[$_][1]} Line {@a[$_][2]} <=> {@a[$_+1][1]} Line {@a[$_+1][2]}" or @failed.push: ($_+1);
}
say "Failed: ", (@failed.join(", ") or "none");

